{"version":3,"file":"js/history.d08d78de.js","mappings":"8PAIIA,EAAAA,EAAAA,GAA8B,OAAzBC,MAAM,YAAW,MAAE,K,GAErBA,MAAM,W,UACTD,EAAAA,EAAAA,GAA+B,OAA1BC,MAAM,YAAW,OAAG,K,GACpBA,MAAM,a,UACTD,EAAAA,EAAAA,GAA8B,OAAzBC,MAAM,SAAQ,SAAK,K,GACnBA,MAAM,qB,GACJA,MAAM,c,GACJA,MAAM,e,UAETD,EAAAA,EAAAA,GAAM,qB,UAGRA,EAAAA,EAAAA,GAAM,qB,GAGHC,MAAM,c,GACJA,MAAM,e,UAETD,EAAAA,EAAAA,GAAM,qB,UAGRA,EAAAA,EAAAA,GAAM,qB,GAGHC,MAAM,c,GACJA,MAAM,e,UAETD,EAAAA,EAAAA,GAAM,qB,UAGRA,EAAAA,EAAAA,GAAM,qB,GAQPC,MAAM,e,UACTD,EAAAA,EAAAA,GAA8B,OAAzBC,MAAM,SAAQ,SAAK,K,GACpBC,MAAA,uB,UAGAF,EAAAA,EAAAA,GAAM,qB,qJA9CdA,EAAAA,EAAAA,GAGS,gBAFPG,EAAAA,EAAAA,IAA4CC,EAAA,CAA/BC,GAAG,WAAS,C,kBAAC,IAAI,UAAJ,Q,MAC1BC,KAEFN,EAAAA,EAAAA,GA8CM,MA9CNO,EA8CM,CA7CJC,GACAR,EAAAA,EAAAA,GAiCM,MAjCNS,EAiCM,CAhCJC,GACAV,EAAAA,EAAAA,GA4BM,MA5BNW,EA4BM,EA3BJX,EAAAA,EAAAA,GAQM,MARNY,EAQM,EAPJZ,EAAAA,EAAAA,GAIM,MAJNa,EAIM,EAHJV,EAAAA,EAAAA,IAA8CW,EAAA,CAA3BC,KAAK,sBACxBC,GAAM,mBAGRC,GAAM,yBAGRjB,EAAAA,EAAAA,GAQM,MARNkB,EAQM,EAPJlB,EAAAA,EAAAA,GAIM,MAJNmB,EAIM,EAHJhB,EAAAA,EAAAA,IAA6CW,EAAA,CAA1BC,KAAK,qBACxBK,GAAM,oBAGRC,GAAM,sBAGRrB,EAAAA,EAAAA,GAQM,MARNsB,EAQM,EAPJtB,EAAAA,EAAAA,GAIM,MAJNuB,EAIM,EAHJpB,EAAAA,EAAAA,IAAyDW,EAAA,CAAtCC,KAAK,iCACxBS,GAAM,mBAGRC,GAAM,wBAKVtB,EAAAA,EAAAA,IAA0BuB,EAAA,CAAhBzB,MAAM,aAGlBD,EAAAA,EAAAA,GAQM,MARN2B,EAQM,CAPJC,GACA5B,EAAAA,EAAAA,GAKK,KALL6B,EAKK,gBAJHC,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHcC,EAAAC,OAARC,K,WAAXL,EAAAA,EAAAA,IAGK,MAHsBM,IAAKD,GAAI,mBAC/BA,EAAKE,MAAO,KAACC,EAAAA,EAAAA,IAAGH,EAAKI,MAAO,KAACD,EAAAA,EAAAA,IAAGH,EAAKK,MAAO,IAC/C,GAAAC,O,mFC/CRC,EAAAA,EAAAA,IAAkEC,EAAA,CAA7DC,GAAG,cAAeC,QAASZ,EAAAa,aAAeC,KAAMd,EAAAe,W;;;;;;;ACKvD,SAASC,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,CACA,MAAMC,EAAM,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,EAAIP,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASU,EAAIV,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMW,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKN,GAAKK,EAAQ,GAAJL,GACdO,EAAKP,GAAKK,GAAS,IAAJL,IAAa,GAAKK,EAAQ,GAAJL,GACrCQ,EAAKR,IAAW,IAAJA,IAAa,KAAY,GAAJA,GACjCS,EAAU5B,GAAK2B,EAAG3B,EAAE6B,IAAMF,EAAG3B,EAAE8B,IAAMH,EAAG3B,EAAEmB,IAAMQ,EAAG3B,EAAEkB,GAC3D,SAASa,EAASC,GAChB,IACIC,EADAC,EAAMF,EAAIG,OAmBd,MAjBe,MAAXH,EAAI,KACM,IAARE,GAAqB,IAARA,EACfD,EAAM,CACJJ,EAAG,IAAsB,GAAhBlB,EAAMqB,EAAI,IACnBF,EAAG,IAAsB,GAAhBnB,EAAMqB,EAAI,IACnBb,EAAG,IAAsB,GAAhBR,EAAMqB,EAAI,IACnBd,EAAW,IAARgB,EAA4B,GAAhBvB,EAAMqB,EAAI,IAAW,KAErB,IAARE,GAAqB,IAARA,IACtBD,EAAM,CACJJ,EAAGlB,EAAMqB,EAAI,KAAO,EAAIrB,EAAMqB,EAAI,IAClCF,EAAGnB,EAAMqB,EAAI,KAAO,EAAIrB,EAAMqB,EAAI,IAClCb,EAAGR,EAAMqB,EAAI,KAAO,EAAIrB,EAAMqB,EAAI,IAClCd,EAAW,IAARgB,EAAavB,EAAMqB,EAAI,KAAO,EAAIrB,EAAMqB,EAAI,IAAO,OAIrDC,CACT,CACA,MAAMG,EAAQ,CAAClB,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GACzC,SAASmB,EAAUrC,GACjB,IAAIuB,EAAIK,EAAQ5B,GAAKyB,EAAKC,EAC1B,OAAO1B,EACH,IAAMuB,EAAEvB,EAAE6B,GAAKN,EAAEvB,EAAE8B,GAAKP,EAAEvB,EAAEmB,GAAKiB,EAAMpC,EAAEkB,EAAGK,QAC5Ce,CACN,CAEA,MAAMC,EAAS,+GACf,SAASC,EAASrC,EAAGsC,EAAGvC,GACtB,MAAMgB,EAAIuB,EAAIrC,KAAKE,IAAIJ,EAAG,EAAIA,GACxBqB,EAAI,CAACmB,EAAGC,GAAKD,EAAIvC,EAAI,IAAM,KAAOD,EAAIgB,EAAId,KAAKC,IAAID,KAAKE,IAAIqC,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACpB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASqB,EAASzC,EAAGsC,EAAGzC,GACtB,MAAMuB,EAAI,CAACmB,EAAGC,GAAKD,EAAIvC,EAAI,IAAM,IAAMH,EAAIA,EAAIyC,EAAIrC,KAAKC,IAAID,KAAKE,IAAIqC,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACpB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASsB,EAAS1C,EAAG2C,EAAG3B,GACtB,MAAM4B,EAAMP,EAASrC,EAAG,EAAG,IAC3B,IAAI6C,EAMJ,IALIF,EAAI3B,EAAI,IACV6B,EAAI,GAAKF,EAAI3B,GACb2B,GAAKE,EACL7B,GAAK6B,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,IAAM,EAAIF,EAAI3B,EAClB4B,EAAIC,IAAMF,EAEZ,OAAOC,CACT,CACA,SAASE,EAASpB,EAAGC,EAAGX,EAAGE,EAAGhB,GAC5B,OAAIwB,IAAMxB,GACCyB,EAAIX,GAAKE,GAAMS,EAAIX,EAAI,EAAI,GAElCW,IAAMzB,GACAc,EAAIU,GAAKR,EAAI,GAEfQ,EAAIC,GAAKT,EAAI,CACvB,CACA,SAAS6B,EAAQlD,GACf,MAAMmD,EAAQ,IACRtB,EAAI7B,EAAE6B,EAAIsB,EACVrB,EAAI9B,EAAE8B,EAAIqB,EACVhC,EAAInB,EAAEmB,EAAIgC,EACV9C,EAAMD,KAAKC,IAAIwB,EAAGC,EAAGX,GACrBb,EAAMF,KAAKE,IAAIuB,EAAGC,EAAGX,GACrBjB,GAAKG,EAAMC,GAAO,EACxB,IAAIH,EAAGsC,EAAGpB,EAOV,OANIhB,IAAQC,IACVe,EAAIhB,EAAMC,EACVmC,EAAIvC,EAAI,GAAMmB,GAAK,EAAIhB,EAAMC,GAAOe,GAAKhB,EAAMC,GAC/CH,EAAI8C,EAASpB,EAAGC,EAAGX,EAAGE,EAAGhB,GACzBF,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAOsC,GAAK,EAAGvC,EACzB,CACA,SAASkD,EAAM7B,EAAGL,EAAGC,EAAGC,GACtB,OACEiC,MAAMC,QAAQpC,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZmC,IAAI/C,EACR,CACA,SAASgD,EAAQrD,EAAGsC,EAAGvC,GACrB,OAAOkD,EAAMZ,EAAUrC,EAAGsC,EAAGvC,EAC/B,CACA,SAASuD,GAAQtD,EAAG2C,EAAG3B,GACrB,OAAOiC,EAAMP,EAAU1C,EAAG2C,EAAG3B,EAC/B,CACA,SAASuC,GAAQvD,EAAGsC,EAAGzC,GACrB,OAAOoD,EAAMR,EAAUzC,EAAGsC,EAAGzC,EAC/B,CACA,SAAS2D,GAAIxD,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASyD,GAAS5B,GAChB,MAAM6B,EAAItB,EAAOuB,KAAK9B,GACtB,IACIhC,EADAkB,EAAI,IAER,IAAK2C,EACH,OAEEA,EAAE,KAAO7D,IACXkB,EAAI2C,EAAE,GAAKtD,GAAKsD,EAAE,IAAMrD,GAAKqD,EAAE,KAEjC,MAAM1D,EAAIwD,IAAKE,EAAE,IACXE,GAAMF,EAAE,GAAK,IACbG,GAAMH,EAAE,GAAK,IAQnB,OANE7D,EADW,QAAT6D,EAAE,GACAJ,GAAQtD,EAAG4D,EAAIC,GACD,QAATH,EAAE,GACPH,GAAQvD,EAAG4D,EAAIC,GAEfR,EAAQrD,EAAG4D,EAAIC,GAEd,CACLnC,EAAG7B,EAAE,GACL8B,EAAG9B,EAAE,GACLmB,EAAGnB,EAAE,GACLkB,EAAGA,EAEP,CACA,SAAS+C,GAAOjE,EAAGkE,GACjB,IAAI/D,EAAI+C,EAAQlD,GAChBG,EAAE,GAAKwD,GAAIxD,EAAE,GAAK+D,GAClB/D,EAAIqD,EAAQrD,GACZH,EAAE6B,EAAI1B,EAAE,GACRH,EAAE8B,EAAI3B,EAAE,GACRH,EAAEmB,EAAIhB,EAAE,EACV,CACA,SAASgE,GAAUnE,GACjB,IAAKA,EACH,OAEF,MAAMkB,EAAIgC,EAAQlD,GACZG,EAAIe,EAAE,GACNuB,EAAI/B,EAAIQ,EAAE,IACVhB,EAAIQ,EAAIQ,EAAE,IAChB,OAAOlB,EAAEkB,EAAI,IACT,QAAQf,MAAMsC,OAAOvC,OAAOO,EAAIT,EAAEkB,MAClC,OAAOf,MAAMsC,OAAOvC,KAC1B,CAEA,MAAMqD,GAAM,CACVa,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH9D,EAAG,KACH+D,EAAG,KACHC,EAAG,KACH/D,EAAG,KACHC,EAAG,QACHC,EAAG,QACH8D,EAAG,KACHC,EAAG,WACH9D,EAAG,KACH+D,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACHlE,EAAG,KACHmE,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAET,SAASC,KACP,MAAMC,EAAW,CAAC,EACZC,EAAOC,OAAOD,KAAKvJ,IACnByJ,EAAQD,OAAOD,KAAKzL,IAC1B,IAAIP,EAAGmM,EAAGxM,EAAGyM,EAAIC,EACjB,IAAKrM,EAAI,EAAGA,EAAIgM,EAAK7M,OAAQa,IAAK,CAEhC,IADAoM,EAAKC,EAAKL,EAAKhM,GACVmM,EAAI,EAAGA,EAAID,EAAM/M,OAAQgN,IAC5BxM,EAAIuM,EAAMC,GACVE,EAAKA,EAAGC,QAAQ3M,EAAGY,GAAIZ,IAEzBA,EAAI4M,SAAS9J,GAAQ2J,GAAK,IAC1BL,EAASM,GAAM,CAAC1M,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOoM,CACT,CAEA,IAAIS,GACJ,SAASC,GAAUzN,GACZwN,KACHA,GAAQV,KACRU,GAAME,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMxO,EAAIsO,GAAMxN,EAAI2N,eACpB,OAAOzO,GAAK,CACVW,EAAGX,EAAE,GACLY,EAAGZ,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEiB,OAAejB,EAAE,GAAK,IAE/B,CAEA,MAAM0O,GAAS,uGACf,SAASC,GAAS7N,GAChB,MAAM6B,EAAI+L,GAAO9L,KAAK9B,GACtB,IACIH,EAAGC,EAAGX,EADND,EAAI,IAER,GAAK2C,EAAL,CAGA,GAAIA,EAAE,KAAOhC,EAAG,CACd,MAAM7B,GAAK6D,EAAE,GACb3C,EAAI2C,EAAE,GAAKtD,EAAIP,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACtC,CAOA,OANA6B,GAAKgC,EAAE,GACP/B,GAAK+B,EAAE,GACP1C,GAAK0C,EAAE,GACPhC,EAAI,KAAOgC,EAAE,GAAKtD,EAAIsB,GAAK5B,EAAI4B,EAAG,EAAG,MACrCC,EAAI,KAAO+B,EAAE,GAAKtD,EAAIuB,GAAK7B,EAAI6B,EAAG,EAAG,MACrCX,EAAI,KAAO0C,EAAE,GAAKtD,EAAIY,GAAKlB,EAAIkB,EAAG,EAAG,MAC9B,CACLU,EAAGA,EACHC,EAAGA,EACHX,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CACA,SAAS4O,GAAU9P,GACjB,OAAOA,IACLA,EAAEkB,EAAI,IACF,QAAQlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,MAAMV,EAAIT,EAAEkB,MACtC,OAAOlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,KAEjC,CAEA,MAAMhE,GAAK6C,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBI,KAAK2P,IAAI/P,EAAG,EAAM,KAAe,KACxEgQ,GAAOhQ,GAAKA,GAAK,OAAUA,EAAI,MAAQI,KAAK2P,KAAK/P,EAAI,MAAS,MAAO,KAC3E,SAASiQ,GAAYC,EAAMC,EAAMC,GAC/B,MAAMvO,EAAImO,GAAKvP,EAAIyP,EAAKrO,IAClBC,EAAIkO,GAAKvP,EAAIyP,EAAKpO,IAClBX,EAAI6O,GAAKvP,EAAIyP,EAAK/O,IACxB,MAAO,CACLU,EAAGrB,EAAIrD,GAAG0E,EAAIuO,GAAKJ,GAAKvP,EAAI0P,EAAKtO,IAAMA,KACvCC,EAAGtB,EAAIrD,GAAG2E,EAAIsO,GAAKJ,GAAKvP,EAAI0P,EAAKrO,IAAMA,KACvCX,EAAGX,EAAIrD,GAAGgE,EAAIiP,GAAKJ,GAAKvP,EAAI0P,EAAKhP,IAAMA,KACvCD,EAAGgP,EAAKhP,EAAIkP,GAAKD,EAAKjP,EAAIgP,EAAKhP,GAEnC,CAEA,SAASmP,GAAOrQ,EAAGgD,EAAGsN,GACpB,GAAItQ,EAAG,CACL,IAAIuQ,EAAMrN,EAAQlD,GAClBuQ,EAAIvN,GAAK5C,KAAKC,IAAI,EAAGD,KAAKE,IAAIiQ,EAAIvN,GAAKuN,EAAIvN,GAAKsN,EAAa,IAANtN,EAAU,IAAM,IACvEuN,EAAM/M,EAAQ+M,GACdvQ,EAAE6B,EAAI0O,EAAI,GACVvQ,EAAE8B,EAAIyO,EAAI,GACVvQ,EAAEmB,EAAIoP,EAAI,EACZ,CACF,CACA,SAASC,GAAMxQ,EAAGyQ,GAChB,OAAOzQ,EAAIiP,OAAOyB,OAAOD,GAAS,CAAC,EAAGzQ,GAAKA,CAC7C,CACA,SAAS2Q,GAAWC,GAClB,IAAI5Q,EAAI,CAAC6B,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,KAY9B,OAXImC,MAAMC,QAAQsN,GACZA,EAAMzO,QAAU,IAClBnC,EAAI,CAAC6B,EAAG+O,EAAM,GAAI9O,EAAG8O,EAAM,GAAIzP,EAAGyP,EAAM,GAAI1P,EAAG,KAC3C0P,EAAMzO,OAAS,IACjBnC,EAAEkB,EAAIV,EAAIoQ,EAAM,OAIpB5Q,EAAIwQ,GAAMI,EAAO,CAAC/O,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,IACvClB,EAAEkB,EAAIV,EAAIR,EAAEkB,IAEPlB,CACT,CACA,SAAS6Q,GAAc7O,GACrB,MAAsB,MAAlBA,EAAI8O,OAAO,GACNjB,GAAS7N,GAEX4B,GAAS5B,EAClB,CACA,MAAM+O,GACJC,YAAYJ,GACV,GAAIA,aAAiBG,GACnB,OAAOH,EAET,MAAMK,SAAcL,EACpB,IAAI5Q,EACS,WAATiR,EACFjR,EAAI2Q,GAAWC,GACG,WAATK,IACTjR,EAAI+B,EAAS6O,IAAUnB,GAAUmB,IAAUC,GAAcD,IAE3DM,KAAKC,KAAOnR,EACZkR,KAAKE,SAAWpR,CAClB,CACIqR,YACF,OAAOH,KAAKE,MACd,CACIrO,UACF,IAAI/C,EAAIwQ,GAAMU,KAAKC,MAInB,OAHInR,IACFA,EAAEkB,EAAIT,EAAIT,EAAEkB,IAEPlB,CACT,CACI+C,QAAIuO,GACNJ,KAAKC,KAAOR,GAAWW,EACzB,CACAxB,YACE,OAAOoB,KAAKE,OAAStB,GAAUoB,KAAKC,WAAQ7O,CAC9C,CACAD,YACE,OAAO6O,KAAKE,OAAS/O,EAAU6O,KAAKC,WAAQ7O,CAC9C,CACA6B,YACE,OAAO+M,KAAKE,OAASjN,GAAU+M,KAAKC,WAAQ7O,CAC9C,CACAiP,IAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKR,KAAKnO,IACV4O,EAAKH,EAAMzO,IACjB,IAAI6O,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1B3O,EAAI,EAAI+O,EAAI,EACZ3Q,EAAIwQ,EAAGxQ,EAAIyQ,EAAGzQ,EACd4Q,IAAOhP,EAAI5B,KAAO,EAAI4B,GAAKA,EAAI5B,IAAM,EAAI4B,EAAI5B,IAAM,GAAK,EAC9D0Q,EAAK,EAAIE,EACTJ,EAAG7P,EAAI,IAAOiQ,EAAKJ,EAAG7P,EAAI+P,EAAKD,EAAG9P,EAAI,GACtC6P,EAAG5P,EAAI,IAAOgQ,EAAKJ,EAAG5P,EAAI8P,EAAKD,EAAG7P,EAAI,GACtC4P,EAAGvQ,EAAI,IAAO2Q,EAAKJ,EAAGvQ,EAAIyQ,EAAKD,EAAGxQ,EAAI,GACtCuQ,EAAGxQ,EAAI2Q,EAAIH,EAAGxQ,GAAK,EAAI2Q,GAAKF,EAAGzQ,EAC/BgQ,KAAKnO,IAAM2O,CACb,CACA,OAAOR,IACT,CACAjB,YAAYuB,EAAOpB,GAIjB,OAHIoB,IACFN,KAAKC,KAAOlB,GAAYiB,KAAKC,KAAMK,EAAML,KAAMf,IAE1Cc,IACT,CACAV,QACE,OAAO,IAAIO,GAAMG,KAAKnO,IACxB,CACAX,MAAMlB,GAEJ,OADAgQ,KAAKC,KAAKjQ,EAAIV,EAAIU,GACXgQ,IACT,CACAa,QAAQzB,GACN,MAAMvN,EAAMmO,KAAKC,KAEjB,OADApO,EAAI7B,GAAK,EAAIoP,EACNY,IACT,CACAc,YACE,MAAMjP,EAAMmO,KAAKC,KACXc,EAAMlS,EAAc,GAARgD,EAAIlB,EAAkB,IAARkB,EAAIjB,EAAmB,IAARiB,EAAI5B,GAEnD,OADA4B,EAAIlB,EAAIkB,EAAIjB,EAAIiB,EAAI5B,EAAI8Q,EACjBf,IACT,CACAgB,QAAQ5B,GACN,MAAMvN,EAAMmO,KAAKC,KAEjB,OADApO,EAAI7B,GAAK,EAAIoP,EACNY,IACT,CACAiB,SACE,MAAMnS,EAAIkR,KAAKC,KAIf,OAHAnR,EAAE6B,EAAI,IAAM7B,EAAE6B,EACd7B,EAAE8B,EAAI,IAAM9B,EAAE8B,EACd9B,EAAEmB,EAAI,IAAMnB,EAAEmB,EACP+P,IACT,CACAkB,QAAQ9B,GAEN,OADAD,GAAOa,KAAKC,KAAM,EAAGb,GACdY,IACT,CACAmB,OAAO/B,GAEL,OADAD,GAAOa,KAAKC,KAAM,GAAIb,GACfY,IACT,CACAoB,SAAShC,GAEP,OADAD,GAAOa,KAAKC,KAAM,EAAGb,GACdY,IACT,CACAqB,WAAWjC,GAET,OADAD,GAAOa,KAAKC,KAAM,GAAIb,GACfY,IACT,CACAjN,OAAOC,GAEL,OADAD,GAAOiN,KAAKC,KAAMjN,GACXgN,IACT;;;;;;;ACzjBE,SAASsB,KACF,CAGP,MAAMC,GAAM,MACZ,IAAI/S,EAAK,EACT,MAAO,IAAIA,GACd,EAHe,GAQZ,SAASgT,GAAcC,GACvB,OAAiB,OAAVA,GAAmC,qBAAVA,CACpC,CAKI,SAASrP,GAAQqP,GACjB,GAAItP,MAAMC,SAAWD,MAAMC,QAAQqP,GAC/B,OAAO,EAEX,MAAM1B,EAAOhC,OAAO2D,UAAUC,SAASC,KAAKH,GAC5C,MAAyB,YAArB1B,EAAK8B,MAAM,EAAG,IAAuC,WAAnB9B,EAAK8B,OAAO,EAItD,CAKI,SAASC,GAASL,GAClB,OAAiB,OAAVA,GAA4D,oBAA1C1D,OAAO2D,UAAUC,SAASC,KAAKH,EAC5D,CAII,SAASM,GAAeN,GACxB,OAAyB,kBAAVA,GAAsBA,aAAiBO,SAAWC,UAAUR,EAC/E,CAKI,SAASS,GAAgBT,EAAOU,GAChC,OAAOJ,GAAeN,GAASA,EAAQU,CAC3C,CAKI,SAASC,GAAeX,EAAOU,GAC/B,MAAwB,qBAAVV,EAAwBU,EAAeV,CACzD,CACA,MACMY,GAAc,CAACZ,EAAOa,IAA6B,kBAAVb,GAAsBA,EAAMc,SAAS,KAAOC,WAAWf,GAAS,IAAMa,GAAab,EAO9H,SAASgB,GAASC,EAAIC,EAAMC,GAC5B,GAAIF,GAAyB,oBAAZA,EAAGd,KAChB,OAAOc,EAAGG,MAAMD,EAASD,EAEjC,CACA,SAASG,GAAKC,EAAUL,EAAIE,EAASI,GACjC,IAAIlR,EAAGd,EAAK8M,EACZ,GAAI1L,GAAQ2Q,GAER,GADA/R,EAAM+R,EAAS9R,OACX+R,EACA,IAAIlR,EAAId,EAAM,EAAGc,GAAK,EAAGA,IACrB4Q,EAAGd,KAAKgB,EAASG,EAASjR,GAAIA,QAGlC,IAAIA,EAAI,EAAGA,EAAId,EAAKc,IAChB4Q,EAAGd,KAAKgB,EAASG,EAASjR,GAAIA,QAGnC,GAAIgQ,GAASiB,GAGhB,IAFAjF,EAAOC,OAAOD,KAAKiF,GACnB/R,EAAM8M,EAAK7M,OACPa,EAAI,EAAGA,EAAId,EAAKc,IAChB4Q,EAAGd,KAAKgB,EAASG,EAASjF,EAAKhM,IAAKgM,EAAKhM,GAGrD,CAMI,SAASmR,GAAeC,EAAIC,GAC5B,IAAIrR,EAAGsR,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGjS,SAAWkS,EAAGlS,OAC/B,OAAO,EAEX,IAAIa,EAAI,EAAGsR,EAAOF,EAAGjS,OAAQa,EAAIsR,IAAQtR,EAGrC,GAFAuR,EAAKH,EAAGpR,GACRwR,EAAKH,EAAGrR,GACJuR,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACvD,OAAO,EAGf,OAAO,CACX,CAII,SAAS,GAAMC,GACf,GAAIrR,GAAQqR,GACR,OAAOA,EAAOpR,IAAI,IAEtB,GAAIyP,GAAS2B,GAAS,CAClB,MAAMC,EAAS3F,OAAO4F,OAAO,MACvB7F,EAAOC,OAAOD,KAAK2F,GACnBG,EAAO9F,EAAK7M,OAClB,IAAIQ,EAAI,EACR,KAAMA,EAAImS,IAAQnS,EACdiS,EAAO5F,EAAKrM,IAAM,GAAMgS,EAAO3F,EAAKrM,KAExC,OAAOiS,CACX,CACA,OAAOD,CACX,CACA,SAASI,GAAW7V,GAChB,OAIoB,IAJb,CACH,YACA,YACA,eACF8V,QAAQ9V,EACd,CAKI,SAAS+V,GAAQ/V,EAAK0V,EAAQD,EAAQhV,GACtC,IAAKoV,GAAW7V,GACZ,OAEJ,MAAMgW,EAAON,EAAO1V,GACdiW,EAAOR,EAAOzV,GAChB8T,GAASkC,IAASlC,GAASmC,GAE3BC,GAAMF,EAAMC,EAAMxV,GAElBiV,EAAO1V,GAAO,GAAMiW,EAE5B,CACA,SAASC,GAAMR,EAAQD,EAAQhV,GAC3B,MAAM0V,EAAU/R,GAAQqR,GAAUA,EAAS,CACvCA,GAEEL,EAAOe,EAAQlT,OACrB,IAAK6Q,GAAS4B,GACV,OAAOA,EAEXjV,EAAUA,GAAW,CAAC,EACtB,MAAM2V,EAAS3V,EAAQ2V,QAAUL,GACjC,IAAIM,EACJ,IAAI,IAAIvS,EAAI,EAAGA,EAAIsR,IAAQtR,EAAE,CAEzB,GADAuS,EAAUF,EAAQrS,IACbgQ,GAASuC,GACV,SAEJ,MAAMvG,EAAOC,OAAOD,KAAKuG,GACzB,IAAI,IAAI5S,EAAI,EAAGmS,EAAO9F,EAAK7M,OAAQQ,EAAImS,IAAQnS,EAC3C2S,EAAOtG,EAAKrM,GAAIiS,EAAQW,EAAS5V,EAEzC,CACA,OAAOiV,CACX,CACA,SAASY,GAAQZ,EAAQD,GAErB,OAAOS,GAAMR,EAAQD,EAAQ,CACzBW,OAAQG,IAEhB,CAII,SAASA,GAAUvW,EAAK0V,EAAQD,GAChC,IAAKI,GAAW7V,GACZ,OAEJ,MAAMgW,EAAON,EAAO1V,GACdiW,EAAOR,EAAOzV,GAChB8T,GAASkC,IAASlC,GAASmC,GAC3BK,GAAQN,EAAMC,GACNlG,OAAO2D,UAAU8C,eAAe5C,KAAK8B,EAAQ1V,KACrD0V,EAAO1V,GAAO,GAAMiW,GAE5B,CASA,MAAMQ,GAAe,CAEjB,GAAK3V,GAAIA,EAEToE,EAAIwR,GAAIA,EAAExR,EACVyR,EAAID,GAAIA,EAAEC,GAIV,SAASC,GAAU5W,GACnB,MAAM6W,EAAQ7W,EAAI8W,MAAM,KAClBhH,EAAO,GACb,IAAIuB,EAAM,GACV,IAAK,MAAM0F,KAAQF,EACfxF,GAAO0F,EACH1F,EAAIkD,SAAS,MACblD,EAAMA,EAAIwC,MAAM,GAAI,GAAK,KAEzB/D,EAAKkH,KAAK3F,GACVA,EAAM,IAGd,OAAOvB,CACX,CACA,SAASmH,GAAgBjX,GACrB,MAAM8P,EAAO8G,GAAU5W,GACvB,OAAQoS,IACJ,IAAK,MAAM3O,KAAKqM,EAAK,CACjB,GAAU,KAANrM,EACA,MAEJ2O,EAAMA,GAAOA,EAAI3O,EACrB,CACA,OAAO2O,CAAG,CAElB,CACA,SAAS8E,GAAiB9E,EAAKpS,GAC3B,MAAMmX,EAAWV,GAAazW,KAASyW,GAAazW,GAAOiX,GAAgBjX,IAC3E,OAAOmX,EAAS/E,EACpB,CAGI,SAASgF,GAAYtU,GACrB,OAAOA,EAAI8O,OAAO,GAAGyF,cAAgBvU,EAAI+Q,MAAM,EACnD,CACA,MAAMyD,GAAW7D,GAAyB,qBAAVA,EAC1B8D,GAAc9D,GAAyB,oBAAVA,EAE7B+D,GAAY,CAACxV,EAAGC,KAClB,GAAID,EAAEyV,OAASxV,EAAEwV,KACb,OAAO,EAEX,IAAK,MAAM1X,KAAQiC,EACf,IAAKC,EAAEyV,IAAI3X,GACP,OAAO,EAGf,OAAO,CAAI,EAKX,SAAS4X,GAAcvV,GACvB,MAAkB,YAAXA,EAAE2P,MAAiC,UAAX3P,EAAE2P,MAA+B,gBAAX3P,EAAE2P,IAC3D,CAKI,MAAM6F,GAAK1W,KAAK0W,GACdC,GAAM,EAAID,GAEVE,GAAW9D,OAAO+D,kBAClBC,GAAcJ,GAAK,IACnBK,GAAUL,GAAK,EACfM,GAAaN,GAAK,EAClBO,GAAqB,EAALP,GAAS,EACzBQ,GAAQlX,KAAKkX,MACbC,GAAOnX,KAAKmX,KAClB,SAASC,GAAapT,EAAGyR,EAAG4B,GACxB,OAAOrX,KAAKsX,IAAItT,EAAIyR,GAAK4B,CAC7B,CAGI,SAASE,GAAQxU,GACjB,MAAMyU,EAAexX,KAAKL,MAAMoD,GAChCA,EAAQqU,GAAarU,EAAOyU,EAAczU,EAAQ,KAAQyU,EAAezU,EACzE,MAAM0U,EAAYzX,KAAK2P,IAAI,GAAI3P,KAAK0X,MAAMR,GAAMnU,KAC1C4U,EAAW5U,EAAQ0U,EACnBG,EAAeD,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,GACjF,OAAOC,EAAeH,CAC1B,CAII,SAASI,GAAWtF,GACpB,MAAMuF,EAAS,GACTC,EAAO/X,KAAK+X,KAAKxF,GACvB,IAAI3P,EACJ,IAAIA,EAAI,EAAGA,EAAImV,EAAMnV,IACb2P,EAAQ3P,IAAM,IACdkV,EAAOhC,KAAKlT,GACZkV,EAAOhC,KAAKvD,EAAQ3P,IAO5B,OAJImV,KAAiB,EAAPA,IACVD,EAAOhC,KAAKiC,GAEhBD,EAAOE,MAAK,CAAClX,EAAGC,IAAID,EAAIC,IAAGkX,MACpBH,CACX,CACA,SAASI,GAAS5V,GACd,OAAQ6V,MAAM7E,WAAWhR,KAAOyQ,SAASzQ,EAC7C,CACA,SAAS8V,GAAYpU,EAAGqT,GACpB,MAAMgB,EAAUrY,KAAKL,MAAMqE,GAC3B,OAAOqU,EAAUhB,GAAWrT,GAAKqU,EAAUhB,GAAWrT,CAC1D,CAGI,SAASsU,GAAmBC,EAAO/D,EAAQgE,GAC3C,IAAI5V,EAAGsR,EAAM3B,EACb,IAAI3P,EAAI,EAAGsR,EAAOqE,EAAMxW,OAAQa,EAAIsR,EAAMtR,IACtC2P,EAAQgG,EAAM3V,GAAG4V,GACZL,MAAM5F,KACPiC,EAAOtU,IAAMF,KAAKE,IAAIsU,EAAOtU,IAAKqS,GAClCiC,EAAOvU,IAAMD,KAAKC,IAAIuU,EAAOvU,IAAKsS,GAG9C,CACA,SAASkG,GAAUC,GACf,OAAOA,GAAWhC,GAAK,IAC3B,CACA,SAASiC,GAAUC,GACf,OAAOA,GAAW,IAAMlC,GAC5B,CAOI,SAASmC,GAAe7U,GACxB,IAAK6O,GAAe7O,GAChB,OAEJ,IAAI9C,EAAI,EACJuQ,EAAI,EACR,MAAMzR,KAAKL,MAAMqE,EAAI9C,GAAKA,IAAM8C,EAC5B9C,GAAK,GACLuQ,IAEJ,OAAOA,CACX,CAEA,SAASqH,GAAkBC,EAAaC,GACpC,MAAMC,EAAsBD,EAAWhV,EAAI+U,EAAY/U,EACjDkV,EAAsBF,EAAWvD,EAAIsD,EAAYtD,EACjD0D,EAA2BnZ,KAAK+X,KAAKkB,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIE,EAAQpZ,KAAKqZ,MAAMH,EAAqBD,GAI5C,OAHIG,GAAS,GAAM1C,KACf0C,GAASzC,IAEN,CACHyC,QACAE,SAAUH,EAElB,CACA,SAASI,GAAsBC,EAAKC,GAChC,OAAOzZ,KAAK+X,KAAK/X,KAAK2P,IAAI8J,EAAIzV,EAAIwV,EAAIxV,EAAG,GAAKhE,KAAK2P,IAAI8J,EAAIhE,EAAI+D,EAAI/D,EAAG,GAC1E,CAUI,SAASiE,GAAgB5Y,GACzB,OAAQA,EAAI6V,GAAMA,IAAOA,EAC7B,CAGI,SAASgD,GAAcP,EAAOQ,EAAOC,EAAKC,GAC1C,MAAMhZ,EAAI4Y,GAAgBN,GACpB/W,EAAIqX,GAAgBE,GACpB1Y,EAAIwY,GAAgBG,GACpBE,EAAeL,GAAgBrX,EAAIvB,GACnCkZ,EAAaN,GAAgBxY,EAAIJ,GACjCmZ,EAAeP,GAAgB5Y,EAAIuB,GACnC6X,EAAaR,GAAgB5Y,EAAII,GACvC,OAAOJ,IAAMuB,GAAKvB,IAAMI,GAAK4Y,GAAyBzX,IAAMnB,GAAK6Y,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASC,GAAY5H,EAAOrS,EAAKD,GACjC,OAAOD,KAAKC,IAAIC,EAAKF,KAAKE,IAAID,EAAKsS,GACvC,CAII,SAAS6H,GAAY7H,GACrB,OAAO4H,GAAY5H,GAAQ,MAAO,MACtC,CAOI,SAAS8H,GAAW9H,EAAOqH,EAAOC,EAAKxC,EAAU,MACjD,OAAO9E,GAASvS,KAAKE,IAAI0Z,EAAOC,GAAOxC,GAAW9E,GAASvS,KAAKC,IAAI2Z,EAAOC,GAAOxC,CACtF,CAEA,SAASiD,GAAQC,EAAOhI,EAAOiI,GAC3BA,EAAMA,GAAO,CAAElG,GAAQiG,EAAMjG,GAAS/B,GACtC,IAEIkI,EAFAC,EAAKH,EAAMxY,OAAS,EACpB4Y,EAAK,EAET,MAAMD,EAAKC,EAAK,EACZF,EAAME,EAAKD,GAAM,EACbF,EAAIC,GACJE,EAAKF,EAELC,EAAKD,EAGb,MAAO,CACHE,KACAD,KAER,CAQI,MAAME,GAAe,CAACL,EAAOzb,EAAKyT,EAAOsI,IAAOP,GAAQC,EAAOhI,EAAOsI,EAAQvG,IAC1E,MAAMwG,EAAKP,EAAMjG,GAAOxV,GACxB,OAAOgc,EAAKvI,GAASuI,IAAOvI,GAASgI,EAAMjG,EAAQ,GAAGxV,KAASyT,CAAK,EACnE+B,GAAQiG,EAAMjG,GAAOxV,GAAOyT,GAO3BwI,GAAgB,CAACR,EAAOzb,EAAKyT,IAAQ+H,GAAQC,EAAOhI,GAAQ+B,GAAQiG,EAAMjG,GAAOxV,IAAQyT,IAO/F,SAASyI,GAAeC,EAAQ/a,EAAKD,GACrC,IAAI2Z,EAAQ,EACRC,EAAMoB,EAAOlZ,OACjB,MAAM6X,EAAQC,GAAOoB,EAAOrB,GAAS1Z,EACjC0Z,IAEJ,MAAMC,EAAMD,GAASqB,EAAOpB,EAAM,GAAK5Z,EACnC4Z,IAEJ,OAAOD,EAAQ,GAAKC,EAAMoB,EAAOlZ,OAASkZ,EAAOtI,MAAMiH,EAAOC,GAAOoB,CACzE,CACA,MAAMC,GAAc,CAChB,OACA,MACA,QACA,SACA,WAEJ,SAASC,GAAkB5C,EAAO6C,GAC1B7C,EAAM8C,SACN9C,EAAM8C,SAASC,UAAUxF,KAAKsF,IAGlCvM,OAAO0M,eAAehD,EAAO,WAAY,CACrCiD,cAAc,EACdC,YAAY,EACZlJ,MAAO,CACH+I,UAAW,CACPF,MAIZF,GAAYQ,SAAS5c,IACjB,MAAM6c,EAAS,UAAYzF,GAAYpX,GACjC8c,EAAOrD,EAAMzZ,GACnB+P,OAAO0M,eAAehD,EAAOzZ,EAAK,CAC9B0c,cAAc,EACdC,YAAY,EACZlJ,SAAUkB,GACN,MAAMoI,EAAMD,EAAKjI,MAAM7C,KAAM2C,GAM7B,OALA8E,EAAM8C,SAASC,UAAUI,SAASI,IACA,oBAAnBA,EAAOH,IACdG,EAAOH,MAAWlI,EACtB,IAEGoI,CACX,GACF,IAEV,CACA,SAASE,GAAoBxD,EAAO6C,GAChC,MAAMY,EAAOzD,EAAM8C,SACnB,IAAKW,EACD,OAEJ,MAAMV,EAAYU,EAAKV,UACjBhH,EAAQgH,EAAU1G,QAAQwG,IACjB,IAAX9G,GACAgH,EAAUW,OAAO3H,EAAO,GAExBgH,EAAUvZ,OAAS,IAGvBmZ,GAAYQ,SAAS5c,WACVyZ,EAAMzZ,EAAI,WAEdyZ,EAAM8C,SACjB,CAGI,SAASa,GAAatd,GACtB,MAAMud,EAAM,IAAIC,IAAIxd,GACpB,OAAIud,EAAI5F,OAAS3X,EAAMmD,OACZnD,EAEJqE,MAAM2M,KAAKuM,EACtB,CAOG,MAAME,GAAmB,WACxB,MAAsB,qBAAXC,OACA,SAAS/I,GACZ,OAAOA,GACX,EAEG+I,OAAOC,qBAClB,CAP4B,GAWxB,SAASC,GAAUhJ,EAAIE,GACvB,IAAI+I,EAAY,GACZC,GAAU,EACd,OAAO,YAAYjJ,GAEfgJ,EAAYhJ,EACPiJ,IACDA,GAAU,EACVL,GAAiB3J,KAAK4J,QAAQ,KAC1BI,GAAU,EACVlJ,EAAGG,MAAMD,EAAS+I,EAAU,IAGxC,CACJ,CAGI,SAASE,GAASnJ,EAAIoJ,GACtB,IAAIC,EACJ,OAAO,YAAYpJ,GAOf,OANImJ,GACAE,aAAaD,GACbA,EAAUE,WAAWvJ,EAAIoJ,EAAOnJ,IAEhCD,EAAGG,MAAM7C,KAAM2C,GAEZmJ,CACX,CACJ,CAII,MAAMI,GAAsBC,GAAkB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAIvFC,GAAiB,CAACD,EAAOrD,EAAOC,IAAgB,UAAVoD,EAAoBrD,EAAkB,QAAVqD,EAAkBpD,GAAOD,EAAQC,GAAO,EAI1GsD,GAAS,CAACF,EAAOG,EAAMC,EAAOC,KACpC,MAAMC,EAAQD,EAAM,OAAS,QAC7B,OAAOL,IAAUM,EAAQF,EAAkB,WAAVJ,GAAsBG,EAAOC,GAAS,EAAID,CAAI,EAqDnF,MAAMI,GAAUxN,GAAU,IAANA,GAAiB,IAANA,EACzByN,GAAY,CAACzN,EAAG3N,EAAGoP,KAAMzR,KAAK2P,IAAI,EAAG,IAAMK,GAAK,IAAMhQ,KAAK0d,KAAK1N,EAAI3N,GAAKsU,GAAMlF,GAC/EkM,GAAa,CAAC3N,EAAG3N,EAAGoP,IAAIzR,KAAK2P,IAAI,GAAI,GAAKK,GAAKhQ,KAAK0d,KAAK1N,EAAI3N,GAAKsU,GAAMlF,GAAK,EAKzEmM,GAAU,CAChBC,OAAS7N,GAAIA,EACb8N,WAAa9N,GAAIA,EAAIA,EACrB+N,YAAc/N,IAAKA,GAAKA,EAAI,GAC5BgO,cAAgBhO,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAK,MAASA,GAAKA,EAAI,GAAK,GAC3EiO,YAAcjO,GAAIA,EAAIA,EAAIA,EAC1BkO,aAAelO,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtCmO,eAAiBnO,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClFoO,YAAcpO,GAAIA,EAAIA,EAAIA,EAAIA,EAC9BqO,aAAerO,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5CsO,eAAiBtO,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAK,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3FuO,YAAcvO,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCwO,aAAexO,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CyO,eAAiBzO,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClG0O,WAAa1O,GAA6B,EAAxBhQ,KAAK2e,IAAI3O,EAAI+G,IAC/B6H,YAAc5O,GAAIhQ,KAAK0d,IAAI1N,EAAI+G,IAC/B8H,cAAgB7O,IAAK,IAAOhQ,KAAK2e,IAAIjI,GAAK1G,GAAK,GAC/C8O,WAAa9O,GAAU,IAANA,EAAU,EAAIhQ,KAAK2P,IAAI,EAAG,IAAMK,EAAI,IACrD+O,YAAc/O,GAAU,IAANA,EAAU,EAA4B,EAAvBhQ,KAAK2P,IAAI,GAAI,GAAKK,GACnDgP,cAAgBhP,GAAIwN,GAAOxN,GAAKA,EAAIA,EAAI,GAAM,GAAMhQ,KAAK2P,IAAI,EAAG,IAAU,EAAJK,EAAQ,IAAM,IAAyC,EAAjChQ,KAAK2P,IAAI,GAAI,IAAU,EAAJK,EAAQ,KACvHiP,WAAajP,GAAIA,GAAK,EAAIA,IAAMhQ,KAAK+X,KAAK,EAAI/H,EAAIA,GAAK,GACvDkP,YAAclP,GAAIhQ,KAAK+X,KAAK,GAAK/H,GAAK,GAAKA,GAC3CmP,cAAgBnP,IAAKA,GAAK,IAAO,GAAK,IAAOhQ,KAAK+X,KAAK,EAAI/H,EAAIA,GAAK,GAAK,IAAOhQ,KAAK+X,KAAK,GAAK/H,GAAK,GAAKA,GAAK,GAC9GoP,cAAgBpP,GAAIwN,GAAOxN,GAAKA,EAAIyN,GAAUzN,EAAG,KAAO,IACxDqP,eAAiBrP,GAAIwN,GAAOxN,GAAKA,EAAI2N,GAAW3N,EAAG,KAAO,IAC1DsP,iBAAkBtP,GACd,MAAM3N,EAAI,MACJoP,EAAI,IACV,OAAO+L,GAAOxN,GAAKA,EAAIA,EAAI,GAAM,GAAMyN,GAAc,EAAJzN,EAAO3N,EAAGoP,GAAK,GAAM,GAAMkM,GAAe,EAAJ3N,EAAQ,EAAG3N,EAAGoP,EACzG,EACA8N,WAAYvP,GACR,MAAM3N,EAAI,QACV,OAAO2N,EAAIA,IAAM3N,EAAI,GAAK2N,EAAI3N,EAClC,EACAmd,YAAaxP,GACT,MAAM3N,EAAI,QACV,OAAQ2N,GAAK,GAAKA,IAAM3N,EAAI,GAAK2N,EAAI3N,GAAK,CAC9C,EACAod,cAAezP,GACX,IAAI3N,EAAI,QACR,OAAK2N,GAAK,IAAO,EACCA,EAAIA,IAAqB,GAAd3N,GAAK,QAAc2N,EAAI3N,GAAzC,GAEJ,KAAQ2N,GAAK,GAAKA,IAAqB,GAAd3N,GAAK,QAAc2N,EAAI3N,GAAK,EAChE,EACAqd,aAAe1P,GAAI,EAAI4N,GAAQ+B,cAAc,EAAI3P,GACjD2P,cAAe3P,GACX,MAAMvM,EAAI,OACJxC,EAAI,KACV,OAAI+O,EAAI,EAAI/O,EACDwC,EAAIuM,EAAIA,EAEfA,EAAI,EAAI/O,EACDwC,GAAKuM,GAAK,IAAM/O,GAAK+O,EAAI,IAEhCA,EAAI,IAAM/O,EACHwC,GAAKuM,GAAK,KAAO/O,GAAK+O,EAAI,MAE9BvM,GAAKuM,GAAK,MAAQ/O,GAAK+O,EAAI,OACtC,EACA4P,gBAAkB5P,GAAIA,EAAI,GAAoC,GAA9B4N,GAAQ8B,aAAiB,EAAJ1P,GAAkD,GAAnC4N,GAAQ+B,cAAkB,EAAJ3P,EAAQ,GAAW,IAGjH,SAAS6P,GAAoBtN,GACzB,GAAIA,GAA0B,kBAAVA,EAAoB,CACpC,MAAM1B,EAAO0B,EAAME,WACnB,MAAgB,2BAAT5B,GAA8C,4BAATA,CAChD,CACA,OAAO,CACX,CACA,SAASO,GAAMmB,GACX,OAAOsN,GAAoBtN,GAASA,EAAQ,IAAI5B,GAAM4B,EAC1D,CACA,SAASuN,GAAcvN,GACnB,OAAOsN,GAAoBtN,GAASA,EAAQ,IAAI5B,GAAM4B,GAAOL,SAAS,IAAKD,OAAO,IAAKhQ,WAC3F,CAEA,MAAM8d,GAAU,CACZ,IACA,IACA,cACA,SACA,WAEEC,GAAS,CACX,QACA,cACA,mBAEJ,SAASC,GAAwBC,GAC7BA,EAAS/D,IAAI,YAAa,CACtBS,WAAO1a,EACPie,SAAU,IACVC,OAAQ,eACR5M,QAAItR,EACJ0N,UAAM1N,EACNme,UAAMne,EACNnF,QAAImF,EACJ2O,UAAM3O,IAEVge,EAASI,SAAS,YAAa,CAC3BC,WAAW,EACXC,YAAY,EACZC,YAAcC,GAAgB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3ER,EAAS/D,IAAI,aAAc,CACvB6D,OAAQ,CACJnP,KAAM,QACN8P,WAAYX,IAEhBD,QAAS,CACLlP,KAAM,SACN8P,WAAYZ,MAGpBG,EAASI,SAAS,aAAc,CAC5BC,UAAW,cAEfL,EAAS/D,IAAI,cAAe,CACxByE,OAAQ,CACJC,UAAW,CACPV,SAAU,MAGlBW,OAAQ,CACJD,UAAW,CACPV,SAAU,IAGlBY,KAAM,CACFC,WAAY,CACRhB,OAAQ,CACJpQ,KAAM,eAEVqR,QAAS,CACLpQ,KAAM,UACNsP,SAAU,KAItBe,KAAM,CACFF,WAAY,CACRhB,OAAQ,CACJjjB,GAAI,eAERkkB,QAAS,CACLpQ,KAAM,UACNuP,OAAQ,SACR5M,GAAK5T,GAAQ,EAAJA,MAK7B,CAEA,SAASuhB,GAAqBjB,GAC1BA,EAAS/D,IAAI,SAAU,CACnBiF,aAAa,EACbC,QAAS,CACLC,IAAK,EACLjE,MAAO,EACPkE,OAAQ,EACRnE,KAAM,IAGlB,CAEA,MAAMoE,GAAY,IAAIC,IACtB,SAASC,GAAgBC,EAAQpiB,GAC7BA,EAAUA,GAAW,CAAC,EACtB,MAAMqiB,EAAWD,EAASE,KAAKC,UAAUviB,GACzC,IAAIwiB,EAAYP,GAAUQ,IAAIJ,GAK9B,OAJKG,IACDA,EAAY,IAAIE,KAAKC,aAAaP,EAAQpiB,GAC1CiiB,GAAUrF,IAAIyF,EAAUG,IAErBA,CACX,CACA,SAASI,GAAaC,EAAKT,EAAQpiB,GAC/B,OAAOmiB,GAAgBC,EAAQpiB,GAAS8iB,OAAOD,EACnD,CAEA,MAAME,GAAa,CAClBrH,OAAQ1I,GACD,OAAOrP,GAAQqP,GAAUA,EAAQ,GAAKA,CAC1C,EACHgQ,QAASC,EAAWlO,EAAOmO,GACpB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMb,EAAS7Q,KAAK4R,MAAMnjB,QAAQoiB,OAClC,IAAIgB,EACAC,EAAQJ,EACZ,GAAIC,EAAM1gB,OAAS,EAAG,CAClB,MAAM8gB,EAAU7iB,KAAKC,IAAID,KAAKsX,IAAImL,EAAM,GAAGlQ,OAAQvS,KAAKsX,IAAImL,EAAMA,EAAM1gB,OAAS,GAAGwQ,SAChFsQ,EAAU,MAAQA,EAAU,QAC5BF,EAAW,cAEfC,EAAQE,GAAeN,EAAWC,EACtC,CACA,MAAMM,EAAW7L,GAAMlX,KAAKsX,IAAIsL,IAC1BI,EAAa7K,MAAM4K,GAAY,EAAI/iB,KAAKC,IAAID,KAAKE,KAAK,EAAIF,KAAK0X,MAAMqL,GAAW,IAAK,GACrFxjB,EAAU,CACZojB,WACAM,sBAAuBD,EACvBE,sBAAuBF,GAG3B,OADAnU,OAAOyB,OAAO/Q,EAASuR,KAAKvR,QAAQkjB,MAAMJ,QACnCF,GAAaK,EAAWb,EAAQpiB,EAC3C,EACH4jB,YAAaX,EAAWlO,EAAOmO,GACxB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMY,EAASX,EAAMnO,GAAO+O,aAAeb,EAAYxiB,KAAK2P,IAAI,GAAI3P,KAAK0X,MAAMR,GAAMsL,KACrF,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,IACFc,SAASF,IAAW9O,EAAQ,GAAMmO,EAAM1gB,OAC/BugB,GAAWC,QAAQ7P,KAAK5B,KAAM0R,EAAWlO,EAAOmO,GAEpD,EACX,GAEJ,SAASK,GAAeN,EAAWC,GAC/B,IAAIG,EAAQH,EAAM1gB,OAAS,EAAI0gB,EAAM,GAAGlQ,MAAQkQ,EAAM,GAAGlQ,MAAQkQ,EAAM,GAAGlQ,MAAQkQ,EAAM,GAAGlQ,MAI3F,OAHIvS,KAAKsX,IAAIsL,IAAU,GAAKJ,IAAcxiB,KAAK0X,MAAM8K,KACjDI,EAAQJ,EAAYxiB,KAAK0X,MAAM8K,IAE5BI,CACX,CACC,IAAIW,GAAQ,CACTjB,eAGJ,SAASkB,GAAmBtD,GACxBA,EAAS/D,IAAI,QAAS,CAClBsH,SAAS,EACTC,QAAQ,EACR5P,SAAS,EACT6P,aAAa,EACpBC,OAAQ,QACRC,MAAO,EACAC,KAAM,CACFL,SAAS,EACTM,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAW,CAACC,EAAM7kB,IAAUA,EAAQwkB,UACpCM,UAAW,CAACD,EAAM7kB,IAAUA,EAAQ6R,MACpCsS,QAAQ,GAEZY,OAAQ,CACJb,SAAS,EACTc,KAAM,GACNC,WAAY,EACZC,MAAO,GAEXC,MAAO,CACHjB,SAAS,EACTkB,KAAM,GACNtD,QAAS,CACLC,IAAK,EACLC,OAAQ,IAGhBkB,MAAO,CACHmC,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB3D,QAAS,EACToC,SAAS,EACTwB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EACb5R,SAAUgQ,GAAMjB,WAAWrH,OAC3BmK,MAAO,CAAC,EACRC,MAAO,CAAC,EACRpI,MAAO,SACPqI,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGzBvF,EAASwF,MAAM,cAAe,QAAS,GAAI,SAC3CxF,EAASwF,MAAM,aAAc,QAAS,GAAI,eAC1CxF,EAASwF,MAAM,eAAgB,QAAS,GAAI,eAC5CxF,EAASwF,MAAM,cAAe,QAAS,GAAI,SAC3CxF,EAASI,SAAS,QAAS,CACvBC,WAAW,EACXE,YAAcC,IAAQA,EAAKiF,WAAW,YAAcjF,EAAKiF,WAAW,UAAqB,aAATjF,GAAgC,WAATA,EACvGF,WAAaE,GAAgB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAE9ER,EAASI,SAAS,SAAU,CACxBC,UAAW,UAEfL,EAASI,SAAS,cAAe,CAC7BG,YAAcC,GAAgB,oBAATA,GAAuC,aAATA,EACnDF,WAAaE,GAAgB,oBAATA,GAE5B,CAEA,MAAMkF,GAAY/W,OAAO4F,OAAO,MAC1BoR,GAAchX,OAAO4F,OAAO,MACjC,SAASqR,GAAWC,EAAMjnB,GACvB,IAAKA,EACD,OAAOinB,EAEX,MAAMnX,EAAO9P,EAAI8W,MAAM,KACvB,IAAI,IAAIhT,EAAI,EAAGN,EAAIsM,EAAK7M,OAAQa,EAAIN,IAAKM,EAAE,CACvC,MAAML,EAAIqM,EAAKhM,GACfmjB,EAAOA,EAAKxjB,KAAOwjB,EAAKxjB,GAAKsM,OAAO4F,OAAO,MAC/C,CACA,OAAOsR,CACX,CACA,SAAS5J,GAAI6J,EAAMC,EAAOhL,GACtB,MAAqB,kBAAVgL,EACAjR,GAAM8Q,GAAWE,EAAMC,GAAQhL,GAEnCjG,GAAM8Q,GAAWE,EAAM,IAAKC,EACvC,CACC,MAAMC,GACHtV,YAAYuV,EAAcC,GACtBtV,KAAK+P,eAAY3e,EACjB4O,KAAKuV,gBAAkB,kBACvBvV,KAAKwV,YAAc,kBACnBxV,KAAKM,MAAQ,OACbN,KAAKyV,SAAW,CAAC,EACjBzV,KAAK0V,iBAAoBC,GAAUA,EAAQ/D,MAAMgE,SAASC,sBAC1D7V,KAAK8V,SAAW,CAAC,EACjB9V,KAAK+V,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJ/V,KAAKgW,KAAO,CACRC,OAAQ,qDACRxQ,KAAM,GACN3Z,MAAO,SACPoqB,WAAY,IACZ3V,OAAQ,MAEZP,KAAKmW,MAAQ,CAAC,EACdnW,KAAKoW,qBAAuB,CAACC,EAAK5nB,IAAUugB,GAAcvgB,EAAQ8mB,iBAClEvV,KAAKsW,iBAAmB,CAACD,EAAK5nB,IAAUugB,GAAcvgB,EAAQ+mB,aAC9DxV,KAAKuW,WAAa,CAACF,EAAK5nB,IAAUugB,GAAcvgB,EAAQ6R,OACxDN,KAAKwW,UAAY,IACjBxW,KAAKyW,YAAc,CACfC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEtB5W,KAAK6W,qBAAsB,EAC3B7W,KAAK8W,QAAU,KACf9W,KAAK+W,QAAU,KACf/W,KAAKgX,SAAU,EACfhX,KAAKiX,QAAU,CAAC,EAChBjX,KAAKkX,YAAa,EAClBlX,KAAKmX,WAAQ/lB,EACb4O,KAAKoX,OAAS,CAAC,EACfpX,KAAKqX,UAAW,EAChBrX,KAAKsX,yBAA0B,EAC/BtX,KAAKwP,SAAS6F,GACdrV,KAAK6C,MAAMyS,EACf,CACHjK,IAAI8J,EAAOhL,GACJ,OAAOkB,GAAIrL,KAAMmV,EAAOhL,EAC5B,CACH+G,IAAIiE,GACG,OAAOH,GAAWhV,KAAMmV,EAC5B,CACH3F,SAAS2F,EAAOhL,GACT,OAAOkB,GAAI0J,GAAaI,EAAOhL,EACnC,CACAoN,SAASpC,EAAOhL,GACZ,OAAOkB,GAAIyJ,GAAWK,EAAOhL,EACjC,CACHyK,MAAMO,EAAOvF,EAAM4H,EAAaC,GACzB,MAAMC,EAAc1C,GAAWhV,KAAMmV,GAC/BwC,EAAoB3C,GAAWhV,KAAMwX,GACrCI,EAAc,IAAMhI,EAC1B7R,OAAO8Z,iBAAiBH,EAAa,CACjC,CAACE,GAAc,CACXnW,MAAOiW,EAAY9H,GACnBkI,UAAU,GAEd,CAAClI,GAAO,CACJjF,YAAY,EACZuG,MACI,MAAM6G,EAAQ/X,KAAK4X,GACblU,EAASiU,EAAkBF,GACjC,OAAI3V,GAASiW,GACFha,OAAOyB,OAAO,CAAC,EAAGkE,EAAQqU,GAE9B3V,GAAe2V,EAAOrU,EACjC,EACA2H,IAAK5J,GACDzB,KAAK4X,GAAenW,CACxB,IAGZ,CACAoB,MAAMmV,GACFA,EAASpN,SAAS/H,GAAQA,EAAM7C,OACpC,EAEJ,IAAIoP,GAA2B,IAAIgG,GAAS,CACxCzF,YAAcC,IAAQA,EAAKiF,WAAW,MACtCnF,WAAaE,GAAgB,WAATA,EACpBuG,MAAO,CACH1G,UAAW,eAEfgH,YAAa,CACT9G,aAAa,EACbD,YAAY,IAEjB,CACCP,GACAkB,GACAqC,KAQA,SAASuF,GAAajC,GACtB,OAAKA,GAAQxU,GAAcwU,EAAKvQ,OAASjE,GAAcwU,EAAKC,QACjD,MAEHD,EAAKlqB,MAAQkqB,EAAKlqB,MAAQ,IAAM,KAAOkqB,EAAKzV,OAASyV,EAAKzV,OAAS,IAAM,IAAMyV,EAAKvQ,KAAO,MAAQuQ,EAAKC,MACpH,CAGI,SAASiC,GAAa7B,EAAK1nB,EAAMwpB,EAAIC,EAASC,GAC9C,IAAIC,EAAY3pB,EAAK0pB,GAQrB,OAPKC,IACDA,EAAY3pB,EAAK0pB,GAAUhC,EAAIkC,YAAYF,GAAQ1E,MACnDwE,EAAGnT,KAAKqT,IAERC,EAAYF,IACZA,EAAUE,GAEPF,CACX,CAoDI,SAASI,GAAY5G,EAAO6G,EAAO9E,GACnC,MAAM+B,EAAmB9D,EAAM8G,wBACzBC,EAAsB,IAAVhF,EAAczkB,KAAKC,IAAIwkB,EAAQ,EAAG,IAAO,EAC3D,OAAOzkB,KAAKL,OAAO4pB,EAAQE,GAAajD,GAAoBA,EAAmBiD,CACnF,CAGI,SAASC,GAAYC,EAAQxC,GAC7BA,EAAMA,GAAOwC,EAAOC,WAAW,MAC/BzC,EAAI0C,OAGJ1C,EAAI2C,iBACJ3C,EAAI4C,UAAU,EAAG,EAAGJ,EAAOlF,MAAOkF,EAAOK,QACzC7C,EAAI8C,SACR,CACA,SAASC,GAAU/C,EAAK5nB,EAASyE,EAAGyR,GAEhC0U,GAAgBhD,EAAK5nB,EAASyE,EAAGyR,EAAG,KACxC,CAEA,SAAS0U,GAAgBhD,EAAK5nB,EAASyE,EAAGyR,EAAG/S,GACzC,IAAImO,EAAMuZ,EAASC,EAAS9T,EAAM+T,EAAc7F,EAAO8F,EAAUC,EACjE,MAAM5tB,EAAQ2C,EAAQkrB,WAChBC,EAAWnrB,EAAQmrB,SACnBC,EAASprB,EAAQorB,OACvB,IAAIC,GAAOF,GAAY,GAAK5T,GAC5B,GAAIla,GAA0B,kBAAVA,IAChBiU,EAAOjU,EAAM6V,WACA,8BAAT5B,GAAiD,+BAATA,GAMxC,OALAsW,EAAI0C,OACJ1C,EAAI0D,UAAU7mB,EAAGyR,GACjB0R,EAAItjB,OAAO+mB,GACXzD,EAAI2D,UAAUluB,GAAQA,EAAM6nB,MAAQ,GAAI7nB,EAAMotB,OAAS,EAAGptB,EAAM6nB,MAAO7nB,EAAMotB,aAC7E7C,EAAI8C,UAIZ,KAAI9R,MAAMwS,IAAWA,GAAU,GAA/B,CAIA,OADAxD,EAAI4D,YACGnuB,GAEH,QACQ8F,EACAykB,EAAI6D,QAAQhnB,EAAGyR,EAAG/S,EAAI,EAAGioB,EAAQ,EAAG,EAAGhU,IAEvCwQ,EAAI8D,IAAIjnB,EAAGyR,EAAGkV,EAAQ,EAAGhU,IAE7BwQ,EAAI+D,YACJ,MACJ,IAAK,WACDzG,EAAQ/hB,EAAIA,EAAI,EAAIioB,EACpBxD,EAAIgE,OAAOnnB,EAAIhE,KAAK0d,IAAIkN,GAAOnG,EAAOhP,EAAIzV,KAAK2e,IAAIiM,GAAOD,GAC1DC,GAAO3T,GACPkQ,EAAIiE,OAAOpnB,EAAIhE,KAAK0d,IAAIkN,GAAOnG,EAAOhP,EAAIzV,KAAK2e,IAAIiM,GAAOD,GAC1DC,GAAO3T,GACPkQ,EAAIiE,OAAOpnB,EAAIhE,KAAK0d,IAAIkN,GAAOnG,EAAOhP,EAAIzV,KAAK2e,IAAIiM,GAAOD,GAC1DxD,EAAI+D,YACJ,MACJ,IAAK,cAQDZ,EAAwB,KAATK,EACfpU,EAAOoU,EAASL,EAChBF,EAAUpqB,KAAK2e,IAAIiM,EAAM5T,IAAcT,EACvCgU,EAAWvqB,KAAK2e,IAAIiM,EAAM5T,KAAetU,EAAIA,EAAI,EAAI4nB,EAAe/T,GACpE8T,EAAUrqB,KAAK0d,IAAIkN,EAAM5T,IAAcT,EACvCiU,EAAWxqB,KAAK0d,IAAIkN,EAAM5T,KAAetU,EAAIA,EAAI,EAAI4nB,EAAe/T,GACpE4Q,EAAI8D,IAAIjnB,EAAIumB,EAAU9U,EAAI4U,EAASC,EAAcM,EAAMlU,GAAIkU,EAAM7T,IACjEoQ,EAAI8D,IAAIjnB,EAAIwmB,EAAU/U,EAAI2U,EAASE,EAAcM,EAAM7T,GAAS6T,GAChEzD,EAAI8D,IAAIjnB,EAAIumB,EAAU9U,EAAI4U,EAASC,EAAcM,EAAKA,EAAM7T,IAC5DoQ,EAAI8D,IAAIjnB,EAAIwmB,EAAU/U,EAAI2U,EAASE,EAAcM,EAAM7T,GAAS6T,EAAMlU,IACtEyQ,EAAI+D,YACJ,MACJ,IAAK,OACD,IAAKR,EAAU,CACXnU,EAAOvW,KAAKqrB,QAAUV,EACtBlG,EAAQ/hB,EAAIA,EAAI,EAAI6T,EACpB4Q,EAAImE,KAAKtnB,EAAIygB,EAAOhP,EAAIc,EAAM,EAAIkO,EAAO,EAAIlO,GAC7C,KACJ,CACAqU,GAAO5T,GACS,IAAK,UACrBuT,EAAWvqB,KAAK2e,IAAIiM,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCP,EAAUpqB,KAAK2e,IAAIiM,GAAOD,EAC1BN,EAAUrqB,KAAK0d,IAAIkN,GAAOD,EAC1BH,EAAWxqB,KAAK0d,IAAIkN,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCxD,EAAIgE,OAAOnnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIiE,OAAOpnB,EAAIwmB,EAAU/U,EAAI2U,GAC7BjD,EAAIiE,OAAOpnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIiE,OAAOpnB,EAAIwmB,EAAU/U,EAAI2U,GAC7BjD,EAAI+D,YACJ,MACJ,IAAK,WACDN,GAAO5T,GACS,IAAK,QACrBuT,EAAWvqB,KAAK2e,IAAIiM,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCP,EAAUpqB,KAAK2e,IAAIiM,GAAOD,EAC1BN,EAAUrqB,KAAK0d,IAAIkN,GAAOD,EAC1BH,EAAWxqB,KAAK0d,IAAIkN,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCxD,EAAIgE,OAAOnnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIiE,OAAOpnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIgE,OAAOnnB,EAAIwmB,EAAU/U,EAAI2U,GAC7BjD,EAAIiE,OAAOpnB,EAAIwmB,EAAU/U,EAAI2U,GAC7B,MACJ,IAAK,OACDG,EAAWvqB,KAAK2e,IAAIiM,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCP,EAAUpqB,KAAK2e,IAAIiM,GAAOD,EAC1BN,EAAUrqB,KAAK0d,IAAIkN,GAAOD,EAC1BH,EAAWxqB,KAAK0d,IAAIkN,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCxD,EAAIgE,OAAOnnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIiE,OAAOpnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIgE,OAAOnnB,EAAIwmB,EAAU/U,EAAI2U,GAC7BjD,EAAIiE,OAAOpnB,EAAIwmB,EAAU/U,EAAI2U,GAC7BQ,GAAO5T,GACPuT,EAAWvqB,KAAK2e,IAAIiM,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCP,EAAUpqB,KAAK2e,IAAIiM,GAAOD,EAC1BN,EAAUrqB,KAAK0d,IAAIkN,GAAOD,EAC1BH,EAAWxqB,KAAK0d,IAAIkN,IAAQloB,EAAIA,EAAI,EAAIioB,GACxCxD,EAAIgE,OAAOnnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIiE,OAAOpnB,EAAIumB,EAAU9U,EAAI4U,GAC7BlD,EAAIgE,OAAOnnB,EAAIwmB,EAAU/U,EAAI2U,GAC7BjD,EAAIiE,OAAOpnB,EAAIwmB,EAAU/U,EAAI2U,GAC7B,MACJ,IAAK,OACDA,EAAU1nB,EAAIA,EAAI,EAAI1C,KAAK2e,IAAIiM,GAAOD,EACtCN,EAAUrqB,KAAK0d,IAAIkN,GAAOD,EAC1BxD,EAAIgE,OAAOnnB,EAAIomB,EAAS3U,EAAI4U,GAC5BlD,EAAIiE,OAAOpnB,EAAIomB,EAAS3U,EAAI4U,GAC5B,MACJ,IAAK,OACDlD,EAAIgE,OAAOnnB,EAAGyR,GACd0R,EAAIiE,OAAOpnB,EAAIhE,KAAK2e,IAAIiM,IAAQloB,EAAIA,EAAI,EAAIioB,GAASlV,EAAIzV,KAAK0d,IAAIkN,GAAOD,GACzE,MACJ,KAAK,EACDxD,EAAI+D,YACJ,MAER/D,EAAIoE,OACAhsB,EAAQisB,YAAc,GACtBrE,EAAIsE,QA3GR,CA6GJ,CAOI,SAASC,GAAeC,EAAOC,EAAMC,GAErC,OADAA,EAASA,GAAU,IACXD,GAAQD,GAASA,EAAM3nB,EAAI4nB,EAAKxO,KAAOyO,GAAUF,EAAM3nB,EAAI4nB,EAAKvO,MAAQwO,GAAUF,EAAMlW,EAAImW,EAAKtK,IAAMuK,GAAUF,EAAMlW,EAAImW,EAAKrK,OAASsK,CACrJ,CACA,SAASC,GAAS3E,EAAKyE,GACnBzE,EAAI0C,OACJ1C,EAAI4D,YACJ5D,EAAImE,KAAKM,EAAKxO,KAAMwO,EAAKtK,IAAKsK,EAAKvO,MAAQuO,EAAKxO,KAAMwO,EAAKrK,OAASqK,EAAKtK,KACzE6F,EAAI4E,MACR,CACA,SAASC,GAAW7E,GAChBA,EAAI8C,SACR,CA0BA,SAASgC,GAAc9E,EAAK+E,GACpBA,EAAKC,aACLhF,EAAI0D,UAAUqB,EAAKC,YAAY,GAAID,EAAKC,YAAY,IAEnD7Z,GAAc4Z,EAAKxB,WACpBvD,EAAItjB,OAAOqoB,EAAKxB,UAEhBwB,EAAK9a,QACL+V,EAAIiF,UAAYF,EAAK9a,OAErB8a,EAAKG,YACLlF,EAAIkF,UAAYH,EAAKG,WAErBH,EAAKI,eACLnF,EAAImF,aAAeJ,EAAKI,aAEhC,CACA,SAASC,GAAapF,EAAKnjB,EAAGyR,EAAG+W,EAAMN,GACnC,GAAIA,EAAKO,eAAiBP,EAAKQ,UAAW,CAOtC,MAAMC,EAAUxF,EAAIkC,YAAYmD,GAC1BpP,EAAOpZ,EAAI2oB,EAAQC,sBACnBvP,EAAQrZ,EAAI2oB,EAAQE,uBACpBvL,EAAM7L,EAAIkX,EAAQG,wBAClBvL,EAAS9L,EAAIkX,EAAQI,yBACrBC,EAAcd,EAAKO,eAAiBnL,EAAMC,GAAU,EAAIA,EAC9D4F,EAAI8F,YAAc9F,EAAIiF,UACtBjF,EAAI4D,YACJ5D,EAAIpD,UAAYmI,EAAKgB,iBAAmB,EACxC/F,EAAIgE,OAAO/N,EAAM4P,GACjB7F,EAAIiE,OAAO/N,EAAO2P,GAClB7F,EAAIsE,QACR,CACJ,CACA,SAAS0B,GAAahG,EAAK+E,GACvB,MAAMkB,EAAWjG,EAAIiF,UACrBjF,EAAIiF,UAAYF,EAAK9a,MACrB+V,EAAIkG,SAASnB,EAAK9O,KAAM8O,EAAK5K,IAAK4K,EAAKzH,MAAOyH,EAAKlC,QACnD7C,EAAIiF,UAAYgB,CACpB,CAGI,SAASE,GAAWnG,EAAKxC,EAAM3gB,EAAGyR,EAAGqR,EAAMoF,EAAO,CAAC,GACnD,MAAMqB,EAAQrqB,GAAQyhB,GAAQA,EAAO,CACjCA,GAEE8G,EAASS,EAAKsB,YAAc,GAA0B,KAArBtB,EAAKuB,YAC5C,IAAI7qB,EAAG4pB,EAIP,IAHArF,EAAI0C,OACJ1C,EAAIL,KAAOA,EAAKqC,OAChB8C,GAAc9E,EAAK+E,GACftpB,EAAI,EAAGA,EAAI2qB,EAAMxrB,SAAUa,EAC3B4pB,EAAOe,EAAM3qB,GACTspB,EAAKwB,UACLP,GAAahG,EAAK+E,EAAKwB,UAEvBjC,IACIS,EAAKuB,cACLtG,EAAI8F,YAAcf,EAAKuB,aAEtBnb,GAAc4Z,EAAKsB,eACpBrG,EAAIpD,UAAYmI,EAAKsB,aAEzBrG,EAAIwG,WAAWnB,EAAMxoB,EAAGyR,EAAGyW,EAAK0B,WAEpCzG,EAAI0G,SAASrB,EAAMxoB,EAAGyR,EAAGyW,EAAK0B,UAC9BrB,GAAapF,EAAKnjB,EAAGyR,EAAG+W,EAAMN,GAC9BzW,GAAK3C,OAAOgU,EAAKE,YAErBG,EAAI8C,SACR,CAKI,SAAS6D,GAAmB3G,EAAKmE,GACjC,MAAM,EAAEtnB,EAAE,EAAEyR,EAAE,EAAE/S,EAAE,EAAE3C,EAAE,OAAE4qB,GAAYW,EAEpCnE,EAAI8D,IAAIjnB,EAAI2mB,EAAOoD,QAAStY,EAAIkV,EAAOoD,QAASpD,EAAOoD,SAAUhX,GAASL,IAAI,GAE9EyQ,EAAIiE,OAAOpnB,EAAGyR,EAAI1V,EAAI4qB,EAAOqD,YAE7B7G,EAAI8D,IAAIjnB,EAAI2mB,EAAOqD,WAAYvY,EAAI1V,EAAI4qB,EAAOqD,WAAYrD,EAAOqD,WAAYtX,GAAIK,IAAS,GAE1FoQ,EAAIiE,OAAOpnB,EAAItB,EAAIioB,EAAOsD,YAAaxY,EAAI1V,GAE3ConB,EAAI8D,IAAIjnB,EAAItB,EAAIioB,EAAOsD,YAAaxY,EAAI1V,EAAI4qB,EAAOsD,YAAatD,EAAOsD,YAAalX,GAAS,GAAG,GAEhGoQ,EAAIiE,OAAOpnB,EAAItB,EAAG+S,EAAIkV,EAAOuD,UAE7B/G,EAAI8D,IAAIjnB,EAAItB,EAAIioB,EAAOuD,SAAUzY,EAAIkV,EAAOuD,SAAUvD,EAAOuD,SAAU,GAAInX,IAAS,GAEpFoQ,EAAIiE,OAAOpnB,EAAI2mB,EAAOoD,QAAStY,EACnC,CAEA,MAAM0Y,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAa9b,EAAOgE,GAC7B,MAAM+X,GAAW,GAAK/b,GAAOgc,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACpB,OAAc,IAAP/X,EAGX,OADAhE,GAAS+b,EAAQ,GACVA,EAAQ,IACX,IAAK,KACD,OAAO/b,EACX,IAAK,IACDA,GAAS,IACT,MAER,OAAOgE,EAAOhE,CAClB,CACA,MAAMic,GAAgB5uB,IAAKA,GAAK,EAChC,SAAS6uB,GAAkBlc,EAAOmc,GAC9B,MAAM7sB,EAAM,CAAC,EACP8sB,EAAW/b,GAAS8b,GACpB9f,EAAO+f,EAAW9f,OAAOD,KAAK8f,GAASA,EACvCE,EAAOhc,GAASL,GAASoc,EAAYE,GAAO3b,GAAeX,EAAMsc,GAAOtc,EAAMmc,EAAMG,KAAWA,GAAOtc,EAAMsc,GAAQ,IAAItc,EAC9H,IAAK,MAAMsc,KAAQjgB,EACf/M,EAAIgtB,GAAQL,GAAaI,EAAKC,IAElC,OAAOhtB,CACX,CAQI,SAASitB,GAAOvc,GAChB,OAAOkc,GAAkBlc,EAAO,CAC5B+O,IAAK,IACLjE,MAAO,IACPkE,OAAQ,IACRnE,KAAM,KAEd,CAOI,SAAS2R,GAAcxc,GACvB,OAAOkc,GAAkBlc,EAAO,CAC5B,UACA,WACA,aACA,eAER,CAQI,SAASyc,GAAUzc,GACnB,MAAMrB,EAAM4d,GAAOvc,GAGnB,OAFArB,EAAIuT,MAAQvT,EAAIkM,KAAOlM,EAAImM,MAC3BnM,EAAI8Y,OAAS9Y,EAAIoQ,IAAMpQ,EAAIqQ,OACpBrQ,CACX,CAOI,SAAS+d,GAAO1vB,EAAS2vB,GACzB3vB,EAAUA,GAAW,CAAC,EACtB2vB,EAAWA,GAAYhP,GAAS4G,KAChC,IAAIvQ,EAAOrD,GAAe3T,EAAQgX,KAAM2Y,EAAS3Y,MAC7B,kBAATA,IACPA,EAAOpH,SAASoH,EAAM,KAE1B,IAAI3Z,EAAQsW,GAAe3T,EAAQ3C,MAAOsyB,EAAStyB,OAC/CA,KAAW,GAAKA,GAAO2xB,MAAMH,MAC7Be,QAAQC,KAAK,kCAAoCxyB,EAAQ,KACzDA,OAAQsF,GAEZ,MAAM4kB,EAAO,CACTC,OAAQ7T,GAAe3T,EAAQwnB,OAAQmI,EAASnI,QAChDC,WAAYqH,GAAanb,GAAe3T,EAAQynB,WAAYkI,EAASlI,YAAazQ,GAClFA,OACA3Z,QACAyU,OAAQ6B,GAAe3T,EAAQ8R,OAAQ6d,EAAS7d,QAChD8X,OAAQ,IAGZ,OADArC,EAAKqC,OAASJ,GAAajC,GACpBA,CACX,CAWI,SAASuI,GAAQC,EAAQ7I,EAASnS,EAAOib,GACzC,IACI3sB,EAAGsR,EAAM3B,EADTid,GAAY,EAEhB,IAAI5sB,EAAI,EAAGsR,EAAOob,EAAOvtB,OAAQa,EAAIsR,IAAQtR,EAEzC,GADA2P,EAAQ+c,EAAO1sB,QACDV,IAAVqQ,SAGYrQ,IAAZukB,GAA0C,oBAAVlU,IAChCA,EAAQA,EAAMkU,GACd+I,GAAY,QAEFttB,IAAVoS,GAAuBpR,GAAQqP,KAC/BA,EAAQA,EAAM+B,EAAQ/B,EAAMxQ,QAC5BytB,GAAY,QAEFttB,IAAVqQ,GAIA,OAHIgd,IAASC,IACTD,EAAKC,WAAY,GAEdjd,CAGnB,CAMI,SAASkd,GAAUC,EAAQ7L,EAAOF,GAClC,MAAM,IAAEzjB,EAAI,IAAED,GAASyvB,EACjBC,EAASxc,GAAY0Q,GAAQ5jB,EAAMC,GAAO,GAC1C0vB,EAAW,CAACrd,EAAOsd,IAAMlM,GAAyB,IAAVpR,EAAc,EAAIA,EAAQsd,EACxE,MAAO,CACH3vB,IAAK0vB,EAAS1vB,GAAMF,KAAKsX,IAAIqY,IAC7B1vB,IAAK2vB,EAAS3vB,EAAK0vB,GAE3B,CACA,SAASG,GAAcC,EAAetJ,GAClC,OAAO5X,OAAOyB,OAAOzB,OAAO4F,OAAOsb,GAAgBtJ,EACvD,CAWI,SAASuJ,GAAgBC,EAAQC,EAAW,CAC5C,IACDC,EAAYjB,EAAUkB,EAAY,KAAIH,EAAO,KAC5C,MAAMI,EAAkBF,GAAcF,EACd,qBAAbf,IACPA,EAAWoB,GAAS,YAAaL,IAErC,MAAMM,EAAQ,CACV,CAACC,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAASV,EACTW,YAAaP,EACb9P,UAAW2O,EACX2B,WAAYT,EACZ/H,SAAWpC,GAAQ+J,GAAgB,CAC3B/J,KACGgK,GACJC,EAAUG,EAAiBnB,IAEtC,OAAO,IAAI4B,MAAMP,EAAO,CAGpBQ,eAAgBvc,EAAQqa,GAIpB,cAHOra,EAAOqa,UACPra,EAAOwc,aACPf,EAAO,GAAGpB,IACV,CACX,EAGA7M,IAAKxN,EAAQqa,GACT,OAAOoC,GAAQzc,EAAQqa,GAAM,IAAIqC,GAAqBrC,EAAMqB,EAAUD,EAAQzb,IAClF,EAIA2c,yBAA0B3c,EAAQqa,GAC9B,OAAOuC,QAAQD,yBAAyB3c,EAAOmc,QAAQ,GAAI9B,EAC/D,EAGAwC,iBACI,OAAOD,QAAQC,eAAepB,EAAO,GACzC,EAGAzZ,IAAKhC,EAAQqa,GACT,OAAOyC,GAAqB9c,GAAQ8O,SAASuL,EACjD,EAGA0C,QAAS/c,GACL,OAAO8c,GAAqB9c,EAChC,EAGA2H,IAAK3H,EAAQqa,EAAMtc,GACf,MAAMif,EAAUhd,EAAOid,WAAajd,EAAOid,SAAWrB,KAGtD,OAFA5b,EAAOqa,GAAQ2C,EAAQ3C,GAAQtc,SACxBiC,EAAOwc,OACP,CACX,GAER,CAQI,SAASU,GAAeC,EAAOlL,EAASmL,EAAUC,GAClD,MAAMtB,EAAQ,CACVG,YAAY,EACZoB,OAAQH,EACRI,SAAUtL,EACVuL,UAAWJ,EACXK,OAAQ,IAAI7V,IACZ+J,aAAcA,GAAawL,EAAOE,GAClCK,WAAa/K,GAAMuK,GAAeC,EAAOxK,EAAKyK,EAAUC,GACxDxJ,SAAWpC,GAAQyL,GAAeC,EAAMtJ,SAASpC,GAAQQ,EAASmL,EAAUC,IAEhF,OAAO,IAAIf,MAAMP,EAAO,CAGpBQ,eAAgBvc,EAAQqa,GAGpB,cAFOra,EAAOqa,UACP8C,EAAM9C,IACN,CACX,EAGA7M,IAAKxN,EAAQqa,EAAMsD,GACf,OAAOlB,GAAQzc,EAAQqa,GAAM,IAAIuD,GAAoB5d,EAAQqa,EAAMsD,IACvE,EAIAhB,yBAA0B3c,EAAQqa,GAC9B,OAAOra,EAAO2R,aAAakM,QAAUjB,QAAQ5a,IAAImb,EAAO9C,GAAQ,CAC5DpT,YAAY,EACZD,cAAc,QACdtZ,EAAYkvB,QAAQD,yBAAyBQ,EAAO9C,EAC5D,EAGAwC,iBACI,OAAOD,QAAQC,eAAeM,EAClC,EAGAnb,IAAKhC,EAAQqa,GACT,OAAOuC,QAAQ5a,IAAImb,EAAO9C,EAC9B,EAGA0C,UACI,OAAOH,QAAQG,QAAQI,EAC3B,EAGAxV,IAAK3H,EAAQqa,EAAMtc,GAGf,OAFAof,EAAM9C,GAAQtc,SACPiC,EAAOqa,IACP,CACX,GAER,CAGI,SAAS1I,GAAawL,EAAOzR,EAAW,CACxCoS,YAAY,EACZC,WAAW,IAEX,MAAM,YAAE9R,EAAaP,EAASoS,WAAW,WAAE9R,EAAYN,EAASqS,UAAU,SAAEC,EAAUtS,EAASmS,SAAaV,EAC5G,MAAO,CACHU,QAASG,EACTF,WAAY7R,EACZ8R,UAAW/R,EACXiS,aAAcpc,GAAWoK,GAAeA,EAAc,IAAIA,EAC1DiS,YAAarc,GAAWmK,GAAcA,EAAa,IAAIA,EAE/D,CACA,MAAMmS,GAAU,CAACC,EAAQlS,IAAOkS,EAASA,EAAS1c,GAAYwK,GAAQA,EAChEmS,GAAmB,CAAChE,EAAMtc,IAAQK,GAASL,IAAmB,aAATsc,IAAyD,OAAjChgB,OAAOwiB,eAAe9e,IAAmBA,EAAM3B,cAAgB/B,QAClJ,SAASoiB,GAAQzc,EAAQqa,EAAMQ,GAC3B,GAAIxgB,OAAO2D,UAAU8C,eAAe5C,KAAK8B,EAAQqa,GAC7C,OAAOra,EAAOqa,GAElB,MAAMtc,EAAQ8c,IAGd,OADA7a,EAAOqa,GAAQtc,EACRA,CACX,CACA,SAAS6f,GAAoB5d,EAAQqa,EAAMsD,GACvC,MAAM,OAAEL,EAAO,SAAEC,EAAS,UAAEC,EAAY7L,aAAcN,GAAiBrR,EACvE,IAAIjC,EAAQuf,EAAOjD,GAYnB,OAVIxY,GAAW9D,IAAUsT,EAAY4M,aAAa5D,KAC9Ctc,EAAQugB,GAAmBjE,EAAMtc,EAAOiC,EAAQ2d,IAEhDjvB,GAAQqP,IAAUA,EAAMxQ,SACxBwQ,EAAQwgB,GAAclE,EAAMtc,EAAOiC,EAAQqR,EAAY6M,cAEvDG,GAAiBhE,EAAMtc,KAEvBA,EAAQmf,GAAenf,EAAOwf,EAAUC,GAAaA,EAAUnD,GAAOhJ,IAEnEtT,CACX,CACA,SAASugB,GAAmBjE,EAAMmE,EAAUxe,EAAQ2d,GAChD,MAAM,OAAEL,EAAO,SAAEC,EAAS,UAAEC,EAAU,OAAEC,GAAYzd,EACpD,GAAIyd,EAAOzb,IAAIqY,GACX,MAAM,IAAIoE,MAAM,uBAAyBhwB,MAAM2M,KAAKqiB,GAAQiB,KAAK,MAAQ,KAAOrE,GAEpFoD,EAAOpC,IAAIhB,GACX,IAAItc,EAAQygB,EAASjB,EAAUC,GAAaG,GAM5C,OALAF,EAAOkB,OAAOtE,GACVgE,GAAiBhE,EAAMtc,KAEvBA,EAAQ6gB,GAAkBtB,EAAOnB,QAASmB,EAAQjD,EAAMtc,IAErDA,CACX,CACA,SAASwgB,GAAclE,EAAMtc,EAAOiC,EAAQke,GACxC,MAAM,OAAEZ,EAAO,SAAEC,EAAS,UAAEC,EAAY7L,aAAcN,GAAiBrR,EACvE,GAA8B,qBAAnBud,EAASzd,OAAyBoe,EAAY7D,GACrD,OAAOtc,EAAMwf,EAASzd,MAAQ/B,EAAMxQ,QACjC,GAAI6Q,GAASL,EAAM,IAAK,CAE3B,MAAM8gB,EAAM9gB,EACN0d,EAAS6B,EAAOnB,QAAQ2C,QAAQjxB,GAAIA,IAAMgxB,IAChD9gB,EAAQ,GACR,IAAK,MAAM1T,KAAQw0B,EAAI,CACnB,MAAMpd,EAAWmd,GAAkBnD,EAAQ6B,EAAQjD,EAAMhwB,GACzD0T,EAAMuD,KAAK4b,GAAezb,EAAU8b,EAAUC,GAAaA,EAAUnD,GAAOhJ,GAChF,CACJ,CACA,OAAOtT,CACX,CACA,SAASghB,GAAgBrE,EAAUL,EAAMtc,GACrC,OAAO8D,GAAW6Y,GAAYA,EAASL,EAAMtc,GAAS2c,CAC1D,CACA,MAAMsE,GAAW,CAAC10B,EAAK20B,KAAiB,IAAR30B,EAAe20B,EAAwB,kBAAR30B,EAAmBkX,GAAiByd,EAAQ30B,QAAOoD,EAClH,SAASwxB,GAAUvX,EAAKwX,EAAc70B,EAAK80B,EAAgBrhB,GACvD,IAAK,MAAMkhB,KAAUE,EAAa,CAC9B,MAAM1N,EAAQuN,GAAS10B,EAAK20B,GAC5B,GAAIxN,EAAO,CACP9J,EAAI0T,IAAI5J,GACR,MAAMiJ,EAAWqE,GAAgBtN,EAAM1F,UAAWzhB,EAAKyT,GACvD,GAAwB,qBAAb2c,GAA4BA,IAAapwB,GAAOowB,IAAa0E,EAGpE,OAAO1E,CAEf,MAAO,IAAc,IAAVjJ,GAA6C,qBAAnB2N,GAAkC90B,IAAQ80B,EAG3E,OAAO,IAEf,CACA,OAAO,CACX,CACA,SAASR,GAAkBO,EAAc1d,EAAU4Y,EAAMtc,GACrD,MAAM4d,EAAala,EAAS2a,YACtB1B,EAAWqE,GAAgBtd,EAASsK,UAAWsO,EAAMtc,GACrDshB,EAAY,IACXF,KACAxD,GAEDhU,EAAM,IAAIC,IAChBD,EAAI0T,IAAItd,GACR,IAAIzT,EAAMg1B,GAAiB3X,EAAK0X,EAAWhF,EAAMK,GAAYL,EAAMtc,GACnE,OAAY,OAARzT,KAGoB,qBAAbowB,GAA4BA,IAAaL,IAChD/vB,EAAMg1B,GAAiB3X,EAAK0X,EAAW3E,EAAUpwB,EAAKyT,GAC1C,OAARzT,KAIDkxB,GAAgB/sB,MAAM2M,KAAKuM,GAAM,CACpC,IACDgU,EAAYjB,GAAU,IAAI6E,GAAa9d,EAAU4Y,EAAMtc,KAC9D,CACA,SAASuhB,GAAiB3X,EAAK0X,EAAW/0B,EAAKowB,EAAUrwB,GACrD,MAAMC,EACFA,EAAM40B,GAAUvX,EAAK0X,EAAW/0B,EAAKowB,EAAUrwB,GAEnD,OAAOC,CACX,CACA,SAASi1B,GAAa9d,EAAU4Y,EAAMtc,GAClC,MAAMkhB,EAASxd,EAAS4a,aAClBhC,KAAQ4E,IACVA,EAAO5E,GAAQ,CAAC,GAEpB,MAAMra,EAASif,EAAO5E,GACtB,OAAI3rB,GAAQsR,IAAW5B,GAASL,GAErBA,EAEJiC,GAAU,CAAC,CACtB,CACA,SAAS0c,GAAqBrC,EAAMqB,EAAUD,EAAQ0B,GAClD,IAAIpf,EACJ,IAAK,MAAMqgB,KAAU1C,EAEjB,GADA3d,EAAQ+d,GAASqC,GAAQC,EAAQ/D,GAAOoB,GACnB,qBAAV1d,EACP,OAAOsgB,GAAiBhE,EAAMtc,GAAS6gB,GAAkBnD,EAAQ0B,EAAO9C,EAAMtc,GAASA,CAGnG,CACA,SAAS+d,GAASxxB,EAAKmxB,GACnB,IAAK,MAAMhK,KAASgK,EAAO,CACvB,IAAKhK,EACD,SAEJ,MAAM1T,EAAQ0T,EAAMnnB,GACpB,GAAqB,qBAAVyT,EACP,OAAOA,CAEf,CACJ,CACA,SAAS+e,GAAqB9c,GAC1B,IAAI5F,EAAO4F,EAAOwc,MAIlB,OAHKpiB,IACDA,EAAO4F,EAAOwc,MAAQgD,GAAyBxf,EAAOmc,UAEnD/hB,CACX,CACA,SAASolB,GAAyB/D,GAC9B,MAAM9T,EAAM,IAAIC,IAChB,IAAK,MAAM6J,KAASgK,EAChB,IAAK,MAAMnxB,KAAO+P,OAAOD,KAAKqX,GAAOqN,QAAQ/wB,IAAKA,EAAEojB,WAAW,OAC3DxJ,EAAI0T,IAAI/wB,GAGhB,OAAOmE,MAAM2M,KAAKuM,EACtB,CAgBgBrJ,OAAOmhB,QA4KnB,SAASC,KACT,MAAyB,qBAAX5X,QAA8C,qBAAb6X,QACnD,CAGI,SAASC,GAAeC,GACxB,IAAIZ,EAASY,EAAQC,WAIrB,OAHIb,GAAgC,wBAAtBA,EAAOhhB,aACjBghB,EAASA,EAAOc,MAEbd,CACX,CAII,SAASe,GAAcC,EAAY1O,EAAM2O,GACzC,IAAIC,EAUJ,MAT0B,kBAAfF,GACPE,EAAgBxlB,SAASslB,EAAY,KACJ,IAA7BA,EAAW7f,QAAQ,OAEnB+f,EAAgBA,EAAgB,IAAM5O,EAAKuO,WAAWI,KAG1DC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoBC,GAAUA,EAAQC,cAAcC,YAAYH,iBAAiBC,EAAS,MAChG,SAASG,GAASC,EAAIzc,GAClB,OAAOoc,GAAiBK,GAAIC,iBAAiB1c,EACjD,CACA,MAAM2c,GAAY,CACd,MACA,QACA,SACA,QAEJ,SAASC,GAAmBC,EAAQz4B,EAAO04B,GACvC,MAAMxd,EAAS,CAAC,EAChBwd,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAI,IAAI1yB,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAM2yB,EAAMJ,GAAUvyB,GACtBkV,EAAOyd,GAAOjiB,WAAW+hB,EAAOz4B,EAAQ,IAAM24B,EAAMD,KAAY,CACpE,CAGA,OAFAxd,EAAO2M,MAAQ3M,EAAOsF,KAAOtF,EAAOuF,MACpCvF,EAAOkS,OAASlS,EAAOwJ,IAAMxJ,EAAOyJ,OAC7BzJ,CACX,CACA,MAAM0d,GAAe,CAACxxB,EAAGyR,EAAGjB,KAAUxQ,EAAI,GAAKyR,EAAI,MAAQjB,IAAWA,EAAOihB,YAKzE,SAASC,GAAkBx0B,EAAGyoB,GAC9B,MAAMgM,EAAUz0B,EAAEy0B,QACZphB,EAASohB,GAAWA,EAAQ5zB,OAAS4zB,EAAQ,GAAKz0B,GAClD,QAAE00B,EAAQ,QAAEC,GAAathB,EAC/B,IACIvQ,EAAGyR,EADHqgB,GAAM,EAEV,GAAIN,GAAaI,EAASC,EAAS30B,EAAEsT,QACjCxQ,EAAI4xB,EACJngB,EAAIogB,MACD,CACH,MAAMvK,EAAO3B,EAAOoM,wBACpB/xB,EAAIuQ,EAAOyhB,QAAU1K,EAAKlO,KAC1B3H,EAAIlB,EAAO0hB,QAAU3K,EAAKhK,IAC1BwU,GAAM,CACV,CACA,MAAO,CACH9xB,IACAyR,IACAqgB,MAER,CAMI,SAASI,GAAoBC,EAAOzT,GACpC,GAAI,WAAYyT,EACZ,OAAOA,EAEX,MAAM,OAAExM,EAAO,wBAAEH,GAA6B9G,EACxC9lB,EAAQg4B,GAAiBjL,GACzByM,EAAgC,eAApBx5B,EAAMy5B,UAClBC,EAAWlB,GAAmBx4B,EAAO,WACrC25B,EAAUnB,GAAmBx4B,EAAO,SAAU,UAC9C,EAAEoH,EAAE,EAAEyR,EAAE,IAAEqgB,GAASJ,GAAkBS,EAAOxM,GAC5CS,EAAUkM,EAASlZ,MAAQ0Y,GAAOS,EAAQnZ,MAC1CiN,EAAUiM,EAAShV,KAAOwU,GAAOS,EAAQjV,KAC/C,IAAI,MAAEmD,EAAM,OAAEuF,GAAYtH,EAK1B,OAJI0T,IACA3R,GAAS6R,EAAS7R,MAAQ8R,EAAQ9R,MAClCuF,GAAUsM,EAAStM,OAASuM,EAAQvM,QAEjC,CACHhmB,EAAGhE,KAAKL,OAAOqE,EAAIomB,GAAW3F,EAAQkF,EAAOlF,MAAQ+E,GACrD/T,EAAGzV,KAAKL,OAAO8V,EAAI4U,GAAWL,EAASL,EAAOK,OAASR,GAE/D,CACA,SAASgN,GAAiB7M,EAAQlF,EAAOuF,GACrC,IAAI4D,EAAU6I,EACd,QAAcv0B,IAAVuiB,QAAkCviB,IAAX8nB,EAAsB,CAC7C,MAAM0M,EAAYtC,GAAezK,GACjC,GAAK+M,EAGE,CACH,MAAMpL,EAAOoL,EAAUX,wBACjBY,EAAiB/B,GAAiB8B,GAClCE,EAAkBxB,GAAmBuB,EAAgB,SAAU,SAC/DE,EAAmBzB,GAAmBuB,EAAgB,WAC5DlS,EAAQ6G,EAAK7G,MAAQoS,EAAiBpS,MAAQmS,EAAgBnS,MAC9DuF,EAASsB,EAAKtB,OAAS6M,EAAiB7M,OAAS4M,EAAgB5M,OACjE4D,EAAW4G,GAAcmC,EAAe/I,SAAU8I,EAAW,eAC7DD,EAAYjC,GAAcmC,EAAeF,UAAWC,EAAW,eACnE,MAXIjS,EAAQkF,EAAOmN,YACf9M,EAASL,EAAOoN,YAWxB,CACA,MAAO,CACHtS,QACAuF,SACA4D,SAAUA,GAAYhX,GACtB6f,UAAWA,GAAa7f,GAEhC,CACA,MAAMogB,GAAUp3B,GAAII,KAAKL,MAAU,GAAJC,GAAU,GAEzC,SAASq3B,GAAetN,EAAQuN,EAASC,EAAUC,GAC/C,MAAMx6B,EAAQg4B,GAAiBjL,GACzB0N,EAAUjC,GAAmBx4B,EAAO,UACpCgxB,EAAW4G,GAAc53B,EAAMgxB,SAAUjE,EAAQ,gBAAkB/S,GACnE6f,EAAYjC,GAAc53B,EAAM65B,UAAW9M,EAAQ,iBAAmB/S,GACtE0gB,EAAgBd,GAAiB7M,EAAQuN,EAASC,GACxD,IAAI,MAAE1S,EAAM,OAAEuF,GAAYsN,EAC1B,GAAwB,gBAApB16B,EAAMy5B,UAA6B,CACnC,MAAME,EAAUnB,GAAmBx4B,EAAO,SAAU,SAC9C05B,EAAWlB,GAAmBx4B,EAAO,WAC3C6nB,GAAS6R,EAAS7R,MAAQ8R,EAAQ9R,MAClCuF,GAAUsM,EAAStM,OAASuM,EAAQvM,MACxC,CACAvF,EAAQzkB,KAAKC,IAAI,EAAGwkB,EAAQ4S,EAAQ5S,OACpCuF,EAAShqB,KAAKC,IAAI,EAAGm3B,EAAc3S,EAAQ2S,EAAcpN,EAASqN,EAAQrN,QAC1EvF,EAAQuS,GAAOh3B,KAAKE,IAAIukB,EAAOmJ,EAAU0J,EAAc1J,WACvD5D,EAASgN,GAAOh3B,KAAKE,IAAI8pB,EAAQyM,EAAWa,EAAcb,YACtDhS,IAAUuF,IAGVA,EAASgN,GAAOvS,EAAQ,IAE5B,MAAM8S,OAA6Br1B,IAAZg1B,QAAsCh1B,IAAbi1B,EAKhD,OAJII,GAAkBH,GAAeE,EAActN,QAAUA,EAASsN,EAActN,SAChFA,EAASsN,EAActN,OACvBvF,EAAQuS,GAAOh3B,KAAK0X,MAAMsS,EAASoN,KAEhC,CACH3S,QACAuF,SAER,CAMI,SAASwN,GAAY9U,EAAO+U,EAAYC,GACxC,MAAMC,EAAaF,GAAc,EAC3BG,EAAe53B,KAAK0X,MAAMgL,EAAMsH,OAAS2N,GACzCE,EAAc73B,KAAK0X,MAAMgL,EAAM+B,MAAQkT,GAC7CjV,EAAMsH,OAAShqB,KAAK0X,MAAMgL,EAAMsH,QAChCtH,EAAM+B,MAAQzkB,KAAK0X,MAAMgL,EAAM+B,OAC/B,MAAMkF,EAASjH,EAAMiH,OAQrB,OAJIA,EAAO/sB,QAAU86B,IAAe/N,EAAO/sB,MAAMotB,SAAWL,EAAO/sB,MAAM6nB,SACrEkF,EAAO/sB,MAAMotB,OAAS,GAAGtH,EAAMsH,WAC/BL,EAAO/sB,MAAM6nB,MAAQ,GAAG/B,EAAM+B,YAE9B/B,EAAM8G,0BAA4BmO,GAAchO,EAAOK,SAAW4N,GAAgBjO,EAAOlF,QAAUoT,KACnGnV,EAAM8G,wBAA0BmO,EAChChO,EAAOK,OAAS4N,EAChBjO,EAAOlF,MAAQoT,EACfnV,EAAMyE,IAAI2Q,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGf,CAKI,MAAMI,GAA+B,WACrC,IAAIC,GAAmB,EACvB,IACI,MAAMz4B,EAAU,CACR04B,cAEA,OADAD,GAAmB,GACZ,CACX,GAEJ1b,OAAO4b,iBAAiB,OAAQ,KAAM34B,GACtC+c,OAAO6b,oBAAoB,OAAQ,KAAM54B,EAC7C,CAAE,MAAO2B,GAET,CACA,OAAO82B,CACX,CAfyC,GAwBrC,SAASI,GAAavD,EAASrc,GAC/B,MAAMjG,EAAQyiB,GAASH,EAASrc,GAC1B8V,EAAU/b,GAASA,EAAMgc,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKpsB,CACnC,CAqCA,MAAMm2B,GAAwB,SAASC,EAAO7T,GAC1C,MAAO,CACHzgB,EAAGA,GACC,OAAOs0B,EAAQA,EAAQ7T,EAAQzgB,CACnC,EACAu0B,SAAU71B,GACN+hB,EAAQ/hB,CACZ,EACA2pB,UAAWpP,GACP,MAAc,WAAVA,EACOA,EAEM,UAAVA,EAAoB,OAAS,OACxC,EACAub,MAAOx0B,EAAGuO,GACN,OAAOvO,EAAIuO,CACf,EACAkmB,WAAYz0B,EAAG00B,GACX,OAAO10B,EAAI00B,CACf,EAER,EACMC,GAAwB,WAC1B,MAAO,CACH30B,EAAGA,GACC,OAAOA,CACX,EACAu0B,SAAU71B,GAAI,EACd2pB,UAAWpP,GACP,OAAOA,CACX,EACAub,MAAOx0B,EAAGuO,GACN,OAAOvO,EAAIuO,CACf,EACAkmB,WAAYz0B,EAAG40B,GACX,OAAO50B,CACX,EAER,EACA,SAAS60B,GAAcvb,EAAKgb,EAAO7T,GAC/B,OAAOnH,EAAM+a,GAAsBC,EAAO7T,GAASkU,IACvD,CACA,SAASG,GAAsB3R,EAAK4R,GAChC,IAAIn8B,EAAOo8B,EACO,QAAdD,GAAqC,QAAdA,IACvBn8B,EAAQuqB,EAAIwC,OAAO/sB,MACnBo8B,EAAW,CACPp8B,EAAMs4B,iBAAiB,aACvBt4B,EAAMq8B,oBAAoB,cAE9Br8B,EAAMs8B,YAAY,YAAaH,EAAW,aAC1C5R,EAAIgS,kBAAoBH,EAEhC,CACA,SAASI,GAAqBjS,EAAK6R,QACd92B,IAAb82B,WACO7R,EAAIgS,kBACXhS,EAAIwC,OAAO/sB,MAAMs8B,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAExE;;;;;;;ACx4EA,MAAMK,GACFzoB,cACIE,KAAKwoB,SAAW,KAChBxoB,KAAKyoB,QAAU,IAAI9X,IACnB3Q,KAAK0oB,UAAW,EAChB1oB,KAAK2oB,eAAYv3B,CACrB,CACHw3B,QAAQhX,EAAOiX,EAAO56B,EAAM8R,GACrB,MAAM+oB,EAAYD,EAAMre,UAAUzK,GAC5BgpB,EAAWF,EAAMxZ,SACvByZ,EAAUle,SAASlI,GAAKA,EAAG,CACnBkP,QACAoX,QAASH,EAAMG,QACfD,WACAE,YAAa/5B,KAAKE,IAAInB,EAAO46B,EAAM/f,MAAOigB,MAEtD,CACHG,WACWlpB,KAAKwoB,WAGTxoB,KAAK0oB,UAAW,EAChB1oB,KAAKwoB,SAAWjd,GAAiB3J,KAAK4J,QAAQ,KAC1CxL,KAAKmpB,UACLnpB,KAAKwoB,SAAW,KACZxoB,KAAK0oB,UACL1oB,KAAKkpB,UACT,IAER,CACHC,QAAQl7B,EAAOm7B,KAAKC,OACb,IAAIC,EAAY,EAChBtpB,KAAKyoB,QAAQ7d,SAAQ,CAACie,EAAOjX,KACzB,IAAKiX,EAAMU,UAAYV,EAAM/6B,MAAMmD,OAC/B,OAEJ,MAAMnD,EAAQ+6B,EAAM/6B,MACpB,IAEIC,EAFA+D,EAAIhE,EAAMmD,OAAS,EACnBu4B,GAAO,EAEX,KAAM13B,GAAK,IAAKA,EACZ/D,EAAOD,EAAMgE,GACT/D,EAAK07B,SACD17B,EAAK27B,OAASb,EAAMxZ,WACpBwZ,EAAMxZ,SAAWthB,EAAK27B,QAE1B37B,EAAK47B,KAAK17B,GACVu7B,GAAO,IAEP17B,EAAMgE,GAAKhE,EAAMA,EAAMmD,OAAS,GAChCnD,EAAMqZ,OAGVqiB,IACA5X,EAAM4X,OACNxpB,KAAK4oB,QAAQhX,EAAOiX,EAAO56B,EAAM,aAEhCH,EAAMmD,SACP43B,EAAMU,SAAU,EAChBvpB,KAAK4oB,QAAQhX,EAAOiX,EAAO56B,EAAM,YACjC46B,EAAMG,SAAU,GAEpBM,GAAax7B,EAAMmD,MAAM,IAE7B+O,KAAK2oB,UAAY16B,EACC,IAAdq7B,IACAtpB,KAAK0oB,UAAW,EAExB,CACHkB,UAAUhY,GACH,MAAMiY,EAAS7pB,KAAKyoB,QACpB,IAAII,EAAQgB,EAAO3Y,IAAIU,GAavB,OAZKiX,IACDA,EAAQ,CACJU,SAAS,EACTP,SAAS,EACTl7B,MAAO,GACP0c,UAAW,CACPsf,SAAU,GACVC,SAAU,KAGlBF,EAAOxe,IAAIuG,EAAOiX,IAEfA,CACX,CACHmB,OAAOpY,EAAOyT,EAAO4E,GACdjqB,KAAK4pB,UAAUhY,GAAOpH,UAAU6a,GAAOrgB,KAAKilB,EAChD,CACHlL,IAAInN,EAAO9jB,GACCA,GAAUA,EAAMmD,QAGrB+O,KAAK4pB,UAAUhY,GAAO9jB,MAAMkX,QAAQlX,EACxC,CACH4X,IAAIkM,GACG,OAAO5R,KAAK4pB,UAAUhY,GAAO9jB,MAAMmD,OAAS,CAChD,CACH6X,MAAM8I,GACC,MAAMiX,EAAQ7oB,KAAKyoB,QAAQvX,IAAIU,GAC1BiX,IAGLA,EAAMU,SAAU,EAChBV,EAAM/f,MAAQsgB,KAAKC,MACnBR,EAAMxZ,SAAWwZ,EAAM/6B,MAAMo8B,QAAO,CAACC,EAAKC,IAAMl7B,KAAKC,IAAIg7B,EAAKC,EAAIC,YAAY,GAC9ErqB,KAAKkpB,WACT,CACAK,QAAQ3X,GACJ,IAAK5R,KAAK0oB,SACN,OAAO,EAEX,MAAMG,EAAQ7oB,KAAKyoB,QAAQvX,IAAIU,GAC/B,SAAKiX,GAAUA,EAAMU,SAAYV,EAAM/6B,MAAMmD,OAIjD,CACHq5B,KAAK1Y,GACE,MAAMiX,EAAQ7oB,KAAKyoB,QAAQvX,IAAIU,GAC/B,IAAKiX,IAAUA,EAAM/6B,MAAMmD,OACvB,OAEJ,MAAMnD,EAAQ+6B,EAAM/6B,MACpB,IAAIgE,EAAIhE,EAAMmD,OAAS,EACvB,KAAMa,GAAK,IAAKA,EACZhE,EAAMgE,GAAGy4B,SAEb1B,EAAM/6B,MAAQ,GACdkS,KAAK4oB,QAAQhX,EAAOiX,EAAOO,KAAKC,MAAO,WAC3C,CACHmB,OAAO5Y,GACA,OAAO5R,KAAKyoB,QAAQpG,OAAOzQ,EAC/B,EAEJ,IAAI6Y,GAA2B,IAAIlC,GAEnC,MAAM/pB,GAAc,cACdksB,GAAgB,CAClBC,QAAS7rB,EAAM7S,EAAI2+B,GACf,OAAOA,EAAS,GAAM3+B,EAAK6S,CAC/B,EACHwB,MAAOxB,EAAM7S,EAAI2+B,GACV,MAAMC,EAAKvqB,GAAMxB,GAAQN,IACnBgC,EAAKqqB,EAAG1qB,OAASG,GAAMrU,GAAMuS,IACnC,OAAOgC,GAAMA,EAAGL,MAAQK,EAAGH,IAAIwqB,EAAID,GAAQz5B,YAAclF,CAC7D,EACA6+B,OAAQhsB,EAAM7S,EAAI2+B,GACd,OAAO9rB,GAAQ7S,EAAK6S,GAAQ8rB,CAChC,GAEJ,MAAMG,GACFjrB,YAAYkrB,EAAKtnB,EAAQqa,EAAM9xB,GAC3B,MAAMg/B,EAAevnB,EAAOqa,GAC5B9xB,EAAKsyB,GAAQ,CACTyM,EAAI/+B,GACJA,EACAg/B,EACAD,EAAIlsB,OAER,MAAMA,EAAOyf,GAAQ,CACjByM,EAAIlsB,KACJmsB,EACAh/B,IAEJ+T,KAAKypB,SAAU,EACfzpB,KAAKkrB,IAAMF,EAAItoB,IAAMgoB,GAAcM,EAAIjrB,aAAejB,GACtDkB,KAAKmrB,QAAUre,GAAQke,EAAI1b,SAAWxC,GAAQC,OAC9C/M,KAAKorB,OAASl8B,KAAK0X,MAAMwiB,KAAKC,OAAS2B,EAAIlf,OAAS,IACpD9L,KAAKqqB,UAAYrqB,KAAK0pB,OAASx6B,KAAK0X,MAAMokB,EAAI3b,UAC9CrP,KAAKqrB,QAAUL,EAAIzb,KACnBvP,KAAKsrB,QAAU5nB,EACf1D,KAAKurB,MAAQxN,EACb/d,KAAKwrB,MAAQ1sB,EACbkB,KAAKyrB,IAAMx/B,EACX+T,KAAK0rB,eAAYt6B,CACrB,CACA0e,SACI,OAAO9P,KAAKypB,OAChB,CACAkC,OAAOX,EAAK/+B,EAAIgC,GACZ,GAAI+R,KAAKypB,QAAS,CACdzpB,KAAK4oB,SAAQ,GACb,MAAMqC,EAAejrB,KAAKsrB,QAAQtrB,KAAKurB,OACjCK,EAAU39B,EAAO+R,KAAKorB,OACtB9Y,EAAStS,KAAKqqB,UAAYuB,EAChC5rB,KAAKorB,OAASn9B,EACd+R,KAAKqqB,UAAYn7B,KAAK0X,MAAM1X,KAAKC,IAAImjB,EAAQ0Y,EAAI3b,WACjDrP,KAAK0pB,QAAUkC,EACf5rB,KAAKqrB,QAAUL,EAAIzb,KACnBvP,KAAKyrB,IAAMlN,GAAQ,CACfyM,EAAI/+B,GACJA,EACAg/B,EACAD,EAAIlsB,OAERkB,KAAKwrB,MAAQjN,GAAQ,CACjByM,EAAIlsB,KACJmsB,EACAh/B,GAER,CACJ,CACAs+B,SACQvqB,KAAKypB,UACLzpB,KAAK2pB,KAAKP,KAAKC,OACfrpB,KAAKypB,SAAU,EACfzpB,KAAK4oB,SAAQ,GAErB,CACAe,KAAK17B,GACD,MAAM29B,EAAU39B,EAAO+R,KAAKorB,OACtB/b,EAAWrP,KAAKqqB,UAChBtM,EAAO/d,KAAKurB,MACZzsB,EAAOkB,KAAKwrB,MACZjc,EAAOvP,KAAKqrB,MACZp/B,EAAK+T,KAAKyrB,IAChB,IAAIb,EAEJ,GADA5qB,KAAKypB,QAAU3qB,IAAS7S,IAAOsjB,GAAQqc,EAAUvc,IAC5CrP,KAAKypB,QAGN,OAFAzpB,KAAKsrB,QAAQvN,GAAQ9xB,OACrB+T,KAAK4oB,SAAQ,GAGbgD,EAAU,EACV5rB,KAAKsrB,QAAQvN,GAAQjf,GAGzB8rB,EAASgB,EAAUvc,EAAW,EAC9Bub,EAASrb,GAAQqb,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS5qB,KAAKmrB,QAAQj8B,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAGy7B,KAC9C5qB,KAAKsrB,QAAQvN,GAAQ/d,KAAKkrB,IAAIpsB,EAAM7S,EAAI2+B,GAC5C,CACAiB,OACI,MAAMC,EAAW9rB,KAAK0rB,YAAc1rB,KAAK0rB,UAAY,IACrD,OAAO,IAAIK,SAAQ,CAAChhB,EAAKihB,KACrBF,EAAS9mB,KAAK,CACV+F,MACAihB,OACF,GAEV,CACApD,QAAQqD,GACJ,MAAMphB,EAASohB,EAAW,MAAQ,MAC5BH,EAAW9rB,KAAK0rB,WAAa,GACnC,IAAI,IAAI55B,EAAI,EAAGA,EAAIg6B,EAAS76B,OAAQa,IAChCg6B,EAASh6B,GAAG+Y,IAEpB,EAGJ,MAAMqhB,GACFpsB,YAAY8R,EAAOua,GACfnsB,KAAKosB,OAASxa,EACd5R,KAAKqsB,YAAc,IAAI1b,IACvB3Q,KAAKssB,UAAUH,EACnB,CACAG,UAAUH,GACN,IAAKrqB,GAASqqB,GACV,OAEJ,MAAMI,EAAmBxuB,OAAOD,KAAKsR,GAASW,WACxCyc,EAAgBxsB,KAAKqsB,YAC3BtuB,OAAO0uB,oBAAoBN,GAAQvhB,SAAS5c,IACxC,MAAMg9B,EAAMmB,EAAOn+B,GACnB,IAAK8T,GAASkpB,GACV,OAEJ,MAAMiB,EAAW,CAAC,EAClB,IAAK,MAAMS,KAAUH,EACjBN,EAASS,GAAU1B,EAAI0B,IAE1Bt6B,GAAQ44B,EAAInb,aAAemb,EAAInb,YAAc,CAC1C7hB,IACD4c,SAASmT,IACJA,IAAS/vB,GAAQw+B,EAAc9mB,IAAIqY,IACnCyO,EAAcnhB,IAAI0S,EAAMkO,EAC5B,GACF,GAEV,CACHU,gBAAgBjpB,EAAQyG,GACjB,MAAMyiB,EAAaziB,EAAO1b,QACpBA,EAAUo+B,GAAqBnpB,EAAQkpB,GAC7C,IAAKn+B,EACD,MAAO,GAEX,MAAMyhB,EAAalQ,KAAK8sB,kBAAkBr+B,EAASm+B,GAOnD,OANIA,EAAWG,SACXC,GAAStpB,EAAOjV,QAAQw+B,YAAaL,GAAYM,MAAK,KAClDxpB,EAAOjV,QAAUm+B,CAAU,IAC5B,SAGA1c,CACX,CACH4c,kBAAkBppB,EAAQyG,GACnB,MAAMqiB,EAAgBxsB,KAAKqsB,YACrBnc,EAAa,GACbqZ,EAAU7lB,EAAOupB,cAAgBvpB,EAAOupB,YAAc,CAAC,GACvDrP,EAAQ7f,OAAOD,KAAKqM,GACpBlc,EAAOm7B,KAAKC,MAClB,IAAIv3B,EACJ,IAAIA,EAAI8rB,EAAM3sB,OAAS,EAAGa,GAAK,IAAKA,EAAE,CAClC,MAAMisB,EAAOH,EAAM9rB,GACnB,GAAuB,MAAnBisB,EAAKne,OAAO,GACZ,SAEJ,GAAa,YAATme,EAAoB,CACpB7N,EAAWlL,QAAQhF,KAAK2sB,gBAAgBjpB,EAAQyG,IAChD,QACJ,CACA,MAAM1I,EAAQ0I,EAAO4T,GACrB,IAAIhO,EAAYwZ,EAAQxL,GACxB,MAAMiN,EAAMwB,EAActb,IAAI6M,GAC9B,GAAIhO,EAAW,CACX,GAAIib,GAAOjb,EAAUD,SAAU,CAC3BC,EAAU4b,OAAOX,EAAKvpB,EAAOxT,GAC7B,QACJ,CACI8hB,EAAUwa,QAElB,CACKS,GAAQA,EAAI3b,UAIjBka,EAAQxL,GAAQhO,EAAY,IAAIgb,GAAUC,EAAKtnB,EAAQqa,EAAMtc,GAC7DyO,EAAWlL,KAAK+K,IAJZrM,EAAOqa,GAAQtc,CAKvB,CACA,OAAOyO,CACX,CACHyb,OAAOjoB,EAAQyG,GACR,GAA8B,IAA1BnK,KAAKqsB,YAAY5mB,KAEjB,YADA1H,OAAOyB,OAAOkE,EAAQyG,GAG1B,MAAM+F,EAAalQ,KAAK8sB,kBAAkBppB,EAAQyG,GAClD,OAAI+F,EAAWjf,QACXw5B,GAAS1L,IAAI/e,KAAKosB,OAAQlc,IACnB,QAFX,CAIJ,EAEJ,SAAS8c,GAAS9c,EAAYL,GAC1B,MAAM0Z,EAAU,GACVzrB,EAAOC,OAAOD,KAAK+R,GACzB,IAAI,IAAI/d,EAAI,EAAGA,EAAIgM,EAAK7M,OAAQa,IAAI,CAChC,MAAMq7B,EAAOjd,EAAWpS,EAAKhM,IACzBq7B,GAAQA,EAAKrd,UACbyZ,EAAQvkB,KAAKmoB,EAAKtB,OAE1B,CACA,OAAOE,QAAQqB,IAAI7D,EACvB,CACA,SAASsD,GAAqBnpB,EAAQkpB,GAClC,IAAKA,EACD,OAEJ,IAAIn+B,EAAUiV,EAAOjV,QACrB,GAAKA,EAUL,OANIA,EAAQs+B,UACRrpB,EAAOjV,QAAUA,EAAUsP,OAAOyB,OAAO,CAAC,EAAG/Q,EAAS,CAClDs+B,SAAS,EACTE,YAAa,CAAC,KAGfx+B,EATHiV,EAAOjV,QAAUm+B,CAUzB,CAEA,SAASS,GAAUlW,EAAOmW,GACtB,MAAMlS,EAAOjE,GAASA,EAAM1oB,SAAW,CAAC,EAClCuU,EAAUoY,EAAKpY,QACf5T,OAAmBgC,IAAbgqB,EAAKhsB,IAAoBk+B,EAAkB,EACjDn+B,OAAmBiC,IAAbgqB,EAAKjsB,IAAoBm+B,EAAkB,EACvD,MAAO,CACHxkB,MAAO9F,EAAU7T,EAAMC,EACvB2Z,IAAK/F,EAAU5T,EAAMD,EAE7B,CACA,SAASo+B,GAAYC,EAAQC,EAAQH,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAMp6B,EAAIm6B,GAAUG,EAAQF,GACtB3oB,EAAI0oB,GAAUI,EAAQH,GAC5B,MAAO,CACH9c,IAAK7L,EAAEoE,IACPwD,MAAOrZ,EAAE6V,IACT0H,OAAQ9L,EAAEmE,MACVwD,KAAMpZ,EAAE4V,MAEhB,CACA,SAAS4kB,GAAOjsB,GACZ,IAAIvC,EAAGvO,EAAGV,EAAGjB,EASb,OARI8S,GAASL,IACTvC,EAAIuC,EAAM+O,IACV7f,EAAI8Q,EAAM8K,MACVtc,EAAIwR,EAAMgP,OACVzhB,EAAIyS,EAAM6K,MAEVpN,EAAIvO,EAAIV,EAAIjB,EAAIyS,EAEb,CACH+O,IAAKtR,EACLqN,MAAO5b,EACP8f,OAAQxgB,EACRqc,KAAMtd,EACN2+B,UAAoB,IAAVlsB,EAElB,CACA,SAASmsB,GAAwBhc,EAAOic,GACpC,MAAM/vB,EAAO,GACPgwB,EAAWlc,EAAMmc,uBAAuBF,GAC9C,IAAI/7B,EAAGsR,EACP,IAAItR,EAAI,EAAGsR,EAAO0qB,EAAS78B,OAAQa,EAAIsR,IAAQtR,EAC3CgM,EAAKkH,KAAK8oB,EAASh8B,GAAG0R,OAE1B,OAAO1F,CACX,CACA,SAASkwB,GAAWC,EAAOxsB,EAAOysB,EAASz/B,EAAU,CAAC,GAClD,MAAMqP,EAAOmwB,EAAMnwB,KACbqwB,EAA8B,WAAjB1/B,EAAQioB,KAC3B,IAAI5kB,EAAGsR,EAAMG,EAAc6qB,EAC3B,GAAc,OAAV3sB,EAAJ,CAGA,IAAI3P,EAAI,EAAGsR,EAAOtF,EAAK7M,OAAQa,EAAIsR,IAAQtR,EAAE,CAEzC,GADAyR,GAAgBzF,EAAKhM,GACjByR,IAAiB2qB,EAAS,CAC1B,GAAIz/B,EAAQ2+B,IACR,SAEJ,KACJ,CACAgB,EAAaH,EAAM9jB,OAAO5G,GACtBxB,GAAeqsB,KAAgBD,GAAwB,IAAV1sB,GAAe4E,GAAK5E,KAAW4E,GAAK+nB,MACjF3sB,GAAS2sB,EAEjB,CACA,OAAO3sB,CAdP,CAeJ,CACA,SAAS4sB,GAAyB1/B,GAC9B,MAAMmP,EAAOC,OAAOD,KAAKnP,GACnB2/B,EAAQ,IAAIn8B,MAAM2L,EAAK7M,QAC7B,IAAIa,EAAGsR,EAAMpV,EACb,IAAI8D,EAAI,EAAGsR,EAAOtF,EAAK7M,OAAQa,EAAIsR,IAAQtR,EACvC9D,EAAM8P,EAAKhM,GACXw8B,EAAMx8B,GAAK,CACPoB,EAAGlF,EACH2W,EAAGhW,EAAKX,IAGhB,OAAOsgC,CACX,CACA,SAASC,GAAUpX,EAAOqX,GACtB,MAAMC,EAAUtX,GAASA,EAAM1oB,QAAQggC,QACvC,OAAOA,QAAuBr9B,IAAZq9B,QAAwCr9B,IAAfo9B,EAAKP,KACpD,CACA,SAASS,GAAYC,EAAYC,EAAYJ,GACzC,MAAO,GAAGG,EAAWngC,MAAMogC,EAAWpgC,MAAMggC,EAAKP,OAASO,EAAKzuB,MACnE,CACA,SAAS8uB,GAAc1X,GACnB,MAAM,IAAE/nB,EAAI,IAAED,EAAI,WAAE2/B,EAAW,WAAEC,GAAgB5X,EAAM0X,gBACvD,MAAO,CACHz/B,IAAK0/B,EAAa1/B,EAAM4S,OAAOgtB,kBAC/B7/B,IAAK4/B,EAAa5/B,EAAM6S,OAAO+D,kBAEvC,CACA,SAASkpB,GAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC5D,CACA,SAASE,GAAoBrB,EAAOsB,EAAQC,EAAUzvB,GAClD,IAAK,MAAMyuB,KAAQe,EAAOE,wBAAwB1vB,GAAMiD,UAAU,CAC9D,MAAMvB,EAAQwsB,EAAMO,EAAKhrB,OACzB,GAAIgsB,GAAY/tB,EAAQ,IAAM+tB,GAAY/tB,EAAQ,EAC9C,OAAO+sB,EAAKhrB,KAEpB,CACA,OAAO,IACX,CACA,SAASksB,GAAaC,EAAYC,GAC9B,MAAM,MAAEhe,EAAQie,YAAarB,GAAUmB,EACjCT,EAAStd,EAAMke,UAAYle,EAAMke,QAAU,CAAC,IAC5C,OAAEC,EAAO,OAAER,EAAS/rB,MAAOD,GAAkBirB,EAC7CwB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfjiC,EAAM0gC,GAAYqB,EAAQR,EAAQf,GAClCprB,EAAOwsB,EAAO3+B,OACpB,IAAIg9B,EACJ,IAAI,IAAIn8B,EAAI,EAAGA,EAAIsR,IAAQtR,EAAE,CACzB,MAAM/D,EAAO6hC,EAAO99B,IACZ,CAACk+B,GAAQxsB,EAAQ,CAAC0sB,GAAQzuB,GAAW1T,EACvCoiC,EAAapiC,EAAK+hC,UAAY/hC,EAAK+hC,QAAU,CAAC,GACpD7B,EAAQkC,EAAWD,GAASjB,GAAiBC,EAAQlhC,EAAKwV,GAC1DyqB,EAAM1qB,GAAgB9B,EACtBwsB,EAAMmC,KAAOd,GAAoBrB,EAAOsB,GAAQ,EAAMf,EAAKzuB,MAC3DkuB,EAAMoC,QAAUf,GAAoBrB,EAAOsB,GAAQ,EAAOf,EAAKzuB,MAC/D,MAAMuwB,EAAerC,EAAMsC,gBAAkBtC,EAAMsC,cAAgB,CAAC,GACpED,EAAa/sB,GAAgB9B,CACjC,CACJ,CACA,SAAS+uB,GAAgB5e,EAAOqe,GAC5B,MAAM7Y,EAASxF,EAAMwF,OACrB,OAAOrZ,OAAOD,KAAKsZ,GAAQoL,QAAQx0B,GAAMopB,EAAOppB,GAAKiiC,OAASA,IAAMQ,OACxE,CACA,SAASC,GAAqB/N,EAAQnf,GAClC,OAAOwb,GAAc2D,EAAQ,CACzB7S,QAAQ,EACR6gB,aAASv/B,EACTmS,aAAcC,EACdA,QACAkT,KAAM,UACN3W,KAAM,WAEd,CACA,SAAS6wB,GAAkBjO,EAAQnf,EAAOugB,GACtC,OAAO/E,GAAc2D,EAAQ,CACzB7S,QAAQ,EACR+gB,UAAWrtB,EACXosB,YAAQx+B,EACR0/B,SAAK1/B,EACL2yB,UACAvgB,QACAkT,KAAM,UACN3W,KAAM,QAEd,CACA,SAASgxB,GAAYvC,EAAM1gC,GACvB,MAAMyV,EAAeirB,EAAKmB,WAAWnsB,MAC/BysB,EAAOzB,EAAKe,QAAUf,EAAKe,OAAOU,KACxC,GAAKA,EAAL,CAGAniC,EAAQA,GAAS0gC,EAAKwC,QACtB,IAAK,MAAMpB,KAAU9hC,EAAM,CACvB,MAAMohC,EAASU,EAAOE,QACtB,IAAKZ,QAA2B99B,IAAjB89B,EAAOe,SAAsD7+B,IAA/B89B,EAAOe,GAAM1sB,GACtD,cAEG2rB,EAAOe,GAAM1sB,QACenS,IAA/B89B,EAAOe,GAAMM,oBAA4En/B,IAA7C89B,EAAOe,GAAMM,cAAchtB,WAChE2rB,EAAOe,GAAMM,cAAchtB,EAE1C,CAXA,CAYJ,CACA,MAAM0tB,GAAsBva,GAAgB,UAATA,GAA6B,SAATA,EACjDwa,GAAmB,CAACC,EAAQC,IAASA,EAASD,EAASpzB,OAAOyB,OAAO,CAAC,EAAG2xB,GACzEE,GAAc,CAACC,EAAU9C,EAAM5c,IAAQ0f,IAAa9C,EAAK+C,QAAU/C,EAAKgD,UAAY,CAClF1zB,KAAM8vB,GAAwBhc,GAAO,GACrCzH,OAAQ,MAEhB,MAAMsnB,GACLC,gBAAkB,CAAC,EACnBA,0BAA4B,KAC5BA,uBAAyB,KACzB5xB,YAAY8R,EAAOrO,GACZvD,KAAK4R,MAAQA,EACb5R,KAAKsT,KAAO1B,EAAMyE,IAClBrW,KAAKwD,MAAQD,EACbvD,KAAK2xB,gBAAkB,CAAC,EACxB3xB,KAAK6vB,YAAc7vB,KAAK4xB,UACxB5xB,KAAK6xB,MAAQ7xB,KAAK6vB,YAAY9vB,KAC9BC,KAAKvR,aAAU2C,EACd4O,KAAK8xB,UAAW,EACjB9xB,KAAK+xB,WAAQ3gC,EACb4O,KAAKgyB,iBAAc5gC,EACnB4O,KAAKiyB,oBAAiB7gC,EACtB4O,KAAKkyB,gBAAa9gC,EAClB4O,KAAKmyB,gBAAa/gC,EAClB4O,KAAKoyB,qBAAsB,EAC3BpyB,KAAKqyB,oBAAqB,EAC1BryB,KAAKsyB,cAAWlhC,EAChB4O,KAAKuyB,UAAY,GACjBvyB,KAAKwyB,8BAAgCA,mBACrCxyB,KAAKyyB,2BAA6BA,gBAClCzyB,KAAK0yB,YACT,CACAA,aACI,MAAMlE,EAAOxuB,KAAK6vB,YAClB7vB,KAAKssB,YACLtsB,KAAK2yB,aACLnE,EAAKgD,SAAWjD,GAAUC,EAAKe,OAAQf,GACvCxuB,KAAK4yB,cACD5yB,KAAKvR,QAAQgsB,OAASza,KAAK4R,MAAMihB,gBAAgB,WACjDxU,QAAQC,KAAK,qKAErB,CACAwU,YAAYvvB,GACJvD,KAAKwD,QAAUD,GACfwtB,GAAY/wB,KAAK6vB,aAErB7vB,KAAKwD,MAAQD,CACjB,CACAovB,aACI,MAAM/gB,EAAQ5R,KAAK4R,MACb4c,EAAOxuB,KAAK6vB,YACZc,EAAU3wB,KAAK+yB,aACfC,EAAW,CAAC/C,EAAM/8B,EAAGyR,EAAGhU,IAAa,MAATs/B,EAAe/8B,EAAa,MAAT+8B,EAAet/B,EAAIgU,EAClEsuB,EAAMzE,EAAK0E,QAAU9wB,GAAeuuB,EAAQuC,QAAS1C,GAAgB5e,EAAO,MAC5EuhB,EAAM3E,EAAK4E,QAAUhxB,GAAeuuB,EAAQyC,QAAS5C,GAAgB5e,EAAO,MAC5EyhB,EAAM7E,EAAK8E,QAAUlxB,GAAeuuB,EAAQ2C,QAAS9C,GAAgB5e,EAAO,MAC5E4E,EAAYgY,EAAKhY,UACjB+c,EAAM/E,EAAKgF,QAAUR,EAASxc,EAAWyc,EAAKE,EAAKE,GACnDI,EAAMjF,EAAKkF,QAAUV,EAASxc,EAAW2c,EAAKF,EAAKI,GACzD7E,EAAKhB,OAASxtB,KAAK2zB,cAAcV,GACjCzE,EAAKf,OAASztB,KAAK2zB,cAAcR,GACjC3E,EAAKoF,OAAS5zB,KAAK2zB,cAAcN,GACjC7E,EAAKuB,OAAS/vB,KAAK2zB,cAAcJ,GACjC/E,EAAKe,OAASvvB,KAAK2zB,cAAcF,EACrC,CACAV,aACI,OAAO/yB,KAAK4R,MAAMjjB,KAAK8mB,SAASzV,KAAKwD,MACzC,CACAouB,UACI,OAAO5xB,KAAK4R,MAAMiiB,eAAe7zB,KAAKwD,MAC1C,CACHmwB,cAAcG,GACP,OAAO9zB,KAAK4R,MAAMwF,OAAO0c,EAC7B,CACHC,eAAe5c,GACR,MAAMqX,EAAOxuB,KAAK6vB,YAClB,OAAO1Y,IAAUqX,EAAKuB,OAASvB,EAAKe,OAASf,EAAKuB,MACtD,CACAiE,QACIh0B,KAAKmpB,QAAQ,QACjB,CACH8K,WACO,MAAMzF,EAAOxuB,KAAK6vB,YACd7vB,KAAK+xB,OACL9mB,GAAoBjL,KAAK+xB,MAAO/xB,MAEhCwuB,EAAKgD,UACLT,GAAYvC,EAEpB,CACH0F,aACO,MAAMvD,EAAU3wB,KAAK+yB,aACfpkC,EAAOgiC,EAAQhiC,OAASgiC,EAAQhiC,KAAO,IACvCojC,EAAQ/xB,KAAK+xB,MACnB,GAAIjwB,GAASnT,GACTqR,KAAK+xB,MAAQ1D,GAAyB1/B,QACnC,GAAIojC,IAAUpjC,EAAM,CACvB,GAAIojC,EAAO,CACP9mB,GAAoB8mB,EAAO/xB,MAC3B,MAAMwuB,EAAOxuB,KAAK6vB,YAClBkB,GAAYvC,GACZA,EAAKwC,QAAU,EACnB,CACIriC,GAAQoP,OAAOo2B,aAAaxlC,IAC5B0b,GAAkB1b,EAAMqR,MAE5BA,KAAKuyB,UAAY,GACjBvyB,KAAK+xB,MAAQpjC,CACjB,CACJ,CACAikC,cACI,MAAMpE,EAAOxuB,KAAK6vB,YAClB7vB,KAAKk0B,aACDl0B,KAAKwyB,qBACLhE,EAAKmC,QAAU,IAAI3wB,KAAKwyB,mBAEhC,CACA4B,sBAAsBC,GAClB,MAAM7F,EAAOxuB,KAAK6vB,YACZc,EAAU3wB,KAAK+yB,aACrB,IAAIuB,GAAe,EACnBt0B,KAAKk0B,aACL,MAAMK,EAAa/F,EAAKgD,SACxBhD,EAAKgD,SAAWjD,GAAUC,EAAKe,OAAQf,GACnCA,EAAKP,QAAU0C,EAAQ1C,QACvBqG,GAAe,EACfvD,GAAYvC,GACZA,EAAKP,MAAQ0C,EAAQ1C,OAEzBjuB,KAAKw0B,gBAAgBH,IACjBC,GAAgBC,IAAe/F,EAAKgD,WACpC9B,GAAa1vB,KAAMwuB,EAAKwC,QAEhC,CACH1E,YACO,MAAMH,EAASnsB,KAAK4R,MAAMua,OACpBsI,EAAYtI,EAAOuI,iBAAiB10B,KAAK6xB,OACzC1S,EAASgN,EAAOwI,gBAAgB30B,KAAK+yB,aAAc0B,GAAW,GACpEz0B,KAAKvR,QAAU09B,EAAOyI,eAAezV,EAAQnf,KAAK8Y,cAClD9Y,KAAK8xB,SAAW9xB,KAAKvR,QAAQuoB,QAC7BhX,KAAK2xB,gBAAkB,CAAC,CAC5B,CACHkD,MAAM/rB,EAAOgsB,GACN,MAAQjF,YAAarB,EAAOuD,MAAOpjC,GAAUqR,MACvC,OAAE+vB,EAAO,SAAEyB,GAAchD,EACzBwB,EAAQD,EAAOE,KACrB,IAEIn+B,EAAGs4B,EAAKwF,EAFRmF,EAAmB,IAAVjsB,GAAegsB,IAAUnmC,EAAKsC,QAAgBu9B,EAAKwG,QAC5DC,EAAOnsB,EAAQ,GAAK0lB,EAAKwC,QAAQloB,EAAQ,GAE7C,IAAsB,IAAlB9I,KAAK8xB,SACLtD,EAAKwC,QAAUriC,EACf6/B,EAAKwG,SAAU,EACfpF,EAASjhC,MACN,CAECihC,EADAx9B,GAAQzD,EAAKma,IACJ9I,KAAKk1B,eAAe1G,EAAM7/B,EAAMma,EAAOgsB,GACzChzB,GAASnT,EAAKma,IACZ9I,KAAKm1B,gBAAgB3G,EAAM7/B,EAAMma,EAAOgsB,GAExC90B,KAAKo1B,mBAAmB5G,EAAM7/B,EAAMma,EAAOgsB,GAExD,MAAMO,EAA6B,IAAmB,OAAfjL,EAAI4F,IAAmBiF,GAAQ7K,EAAI4F,GAASiF,EAAKjF,GACxF,IAAIl+B,EAAI,EAAGA,EAAIgjC,IAAShjC,EACpB08B,EAAKwC,QAAQl/B,EAAIgX,GAASshB,EAAMwF,EAAO99B,GACnCijC,IACIM,MACAN,GAAS,GAEbE,EAAO7K,GAGfoE,EAAKwG,QAAUD,CACnB,CACIvD,GACA9B,GAAa1vB,KAAM4vB,EAE3B,CACHwF,mBAAmB5G,EAAM7/B,EAAMma,EAAOgsB,GAC/B,MAAM,OAAE/E,EAAO,OAAER,GAAYf,EACvBwB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfqF,EAASvF,EAAOwF,YAChBC,EAAczF,IAAWR,EACzBK,EAAS,IAAIz9B,MAAM2iC,GACzB,IAAIhjC,EAAGsR,EAAMI,EACb,IAAI1R,EAAI,EAAGsR,EAAO0xB,EAAOhjC,EAAIsR,IAAQtR,EACjC0R,EAAQ1R,EAAIgX,EACZ8mB,EAAO99B,GAAK,CACR,CAACk+B,GAAQwF,GAAezF,EAAO8E,MAAMS,EAAO9xB,GAAQA,GACpD,CAAC0sB,GAAQX,EAAOsF,MAAMlmC,EAAK6U,GAAQA,IAG3C,OAAOosB,CACX,CACHsF,eAAe1G,EAAM7/B,EAAMma,EAAOgsB,GAC3B,MAAM,OAAEtH,EAAO,OAAEC,GAAYe,EACvBoB,EAAS,IAAIz9B,MAAM2iC,GACzB,IAAIhjC,EAAGsR,EAAMI,EAAOzV,EACpB,IAAI+D,EAAI,EAAGsR,EAAO0xB,EAAOhjC,EAAIsR,IAAQtR,EACjC0R,EAAQ1R,EAAIgX,EACZ/a,EAAOY,EAAK6U,GACZosB,EAAO99B,GAAK,CACRoB,EAAGs6B,EAAOqH,MAAM9mC,EAAK,GAAIyV,GACzBmB,EAAG8oB,EAAOoH,MAAM9mC,EAAK,GAAIyV,IAGjC,OAAOosB,CACX,CACHuF,gBAAgB3G,EAAM7/B,EAAMma,EAAOgsB,GAC5B,MAAM,OAAEtH,EAAO,OAAEC,GAAYe,GACvB,SAAEiH,EAAU,IAAI,SAAEC,EAAU,KAAS11B,KAAK8xB,SAC1ClC,EAAS,IAAIz9B,MAAM2iC,GACzB,IAAIhjC,EAAGsR,EAAMI,EAAOzV,EACpB,IAAI+D,EAAI,EAAGsR,EAAO0xB,EAAOhjC,EAAIsR,IAAQtR,EACjC0R,EAAQ1R,EAAIgX,EACZ/a,EAAOY,EAAK6U,GACZosB,EAAO99B,GAAK,CACRoB,EAAGs6B,EAAOqH,MAAM3vB,GAAiBnX,EAAM0nC,GAAWjyB,GAClDmB,EAAG8oB,EAAOoH,MAAM3vB,GAAiBnX,EAAM2nC,GAAWlyB,IAG1D,OAAOosB,CACX,CACH+F,UAAUnyB,GACH,OAAOxD,KAAK6vB,YAAYmB,QAAQxtB,EACpC,CACHoyB,eAAepyB,GACR,OAAOxD,KAAK6vB,YAAYlhC,KAAK6U,EACjC,CACHwqB,WAAW7W,EAAOyY,EAAQlZ,GACnB,MAAM9E,EAAQ5R,KAAK4R,MACb4c,EAAOxuB,KAAK6vB,YACZpuB,EAAQmuB,EAAOzY,EAAM8Y,MACrBhC,EAAQ,CACVnwB,KAAM8vB,GAAwBhc,GAAO,GACrCzH,OAAQylB,EAAOE,QAAQ3Y,EAAM8Y,MAAMM,eAEvC,OAAOvC,GAAWC,EAAOxsB,EAAO+sB,EAAKhrB,MAAO,CACxCkT,QAER,CACHmf,sBAAsB5jC,EAAOklB,EAAOyY,EAAQ3B,GACrC,MAAM6H,EAAclG,EAAOzY,EAAM8Y,MACjC,IAAIxuB,EAAwB,OAAhBq0B,EAAuBC,IAAMD,EACzC,MAAM3rB,EAAS8jB,GAAS2B,EAAOE,QAAQ3Y,EAAM8Y,MACzChC,GAAS9jB,IACT8jB,EAAM9jB,OAASA,EACf1I,EAAQusB,GAAWC,EAAO6H,EAAa91B,KAAK6vB,YAAYrsB,QAE5DvR,EAAM7C,IAAMF,KAAKE,IAAI6C,EAAM7C,IAAKqS,GAChCxP,EAAM9C,IAAMD,KAAKC,IAAI8C,EAAM9C,IAAKsS,EACpC,CACHu0B,UAAU7e,EAAOma,GACV,MAAM9C,EAAOxuB,KAAK6vB,YACZmB,EAAUxC,EAAKwC,QACf+D,EAASvG,EAAKwG,SAAW7d,IAAUqX,EAAKuB,OACxC3sB,EAAO4tB,EAAQ//B,OACfglC,EAAaj2B,KAAK+zB,eAAe5c,GACjC8W,EAAQoD,GAAYC,EAAU9C,EAAMxuB,KAAK4R,OACzC3f,EAAQ,CACV7C,IAAK4S,OAAO+D,kBACZ5W,IAAK6S,OAAOgtB,oBAER5/B,IAAK8mC,EAAW/mC,IAAKgnC,GAActH,GAAcoH,GACzD,IAAInkC,EAAG89B,EACP,SAASwG,IACLxG,EAASoB,EAAQl/B,GACjB,MAAMs8B,EAAawB,EAAOqG,EAAWhG,MACrC,OAAQluB,GAAe6tB,EAAOzY,EAAM8Y,QAAUiG,EAAW9H,GAAc+H,EAAW/H,CACtF,CACA,IAAIt8B,EAAI,EAAGA,EAAIsR,IAAQtR,EACnB,IAAIskC,MAGJp2B,KAAK61B,sBAAsB5jC,EAAOklB,EAAOyY,EAAQ3B,GAC7C8G,GACA,MAGR,GAAIA,EACA,IAAIjjC,EAAIsR,EAAO,EAAGtR,GAAK,IAAKA,EACxB,IAAIskC,IAAJ,CAGAp2B,KAAK61B,sBAAsB5jC,EAAOklB,EAAOyY,EAAQ3B,GACjD,KAFA,CAKR,OAAOh8B,CACX,CACAokC,mBAAmBlf,GACf,MAAMyY,EAAS5vB,KAAK6vB,YAAYmB,QAC1B7mB,EAAS,GACf,IAAIrY,EAAGsR,EAAM3B,EACb,IAAI3P,EAAI,EAAGsR,EAAOwsB,EAAO3+B,OAAQa,EAAIsR,IAAQtR,EACzC2P,EAAQmuB,EAAO99B,GAAGqlB,EAAM8Y,MACpBluB,GAAeN,IACf0I,EAAOnF,KAAKvD,GAGpB,OAAO0I,CACX,CACHmsB,iBACO,OAAO,CACX,CACHC,iBAAiB/yB,GACV,MAAMgrB,EAAOxuB,KAAK6vB,YACZE,EAASvB,EAAKuB,OACdR,EAASf,EAAKe,OACdK,EAAS5vB,KAAK21B,UAAUnyB,GAC9B,MAAO,CACHgzB,MAAOzG,EAAS,GAAKA,EAAO0G,iBAAiB7G,EAAOG,EAAOE,OAAS,GACpExuB,MAAO8tB,EAAS,GAAKA,EAAOkH,iBAAiB7G,EAAOL,EAAOU,OAAS,GAE5E,CACH9G,QAAQzS,GACD,MAAM8X,EAAOxuB,KAAK6vB,YAClB7vB,KAAK2rB,OAAOjV,GAAQ,WACpB8X,EAAKkI,MAAQhJ,GAAOtrB,GAAepC,KAAKvR,QAAQwsB,KAAMsS,GAAYiB,EAAKhB,OAAQgB,EAAKf,OAAQztB,KAAKs2B,mBACrG,CACH3K,OAAOjV,GAAO,CACX8S,OACI,MAAMnT,EAAMrW,KAAKsT,KACX1B,EAAQ5R,KAAK4R,MACb4c,EAAOxuB,KAAK6vB,YACZ/Z,EAAW0Y,EAAK7/B,MAAQ,GACxBmsB,EAAOlJ,EAAM+kB,UACb7mB,EAAS,GACThH,EAAQ9I,KAAKkyB,YAAc,EAC3B4C,EAAQ90B,KAAKmyB,YAAcrc,EAAS7kB,OAAS6X,EAC7CwO,EAA0BtX,KAAKvR,QAAQ6oB,wBAC7C,IAAIxlB,EAIJ,IAHI08B,EAAKmC,SACLnC,EAAKmC,QAAQnH,KAAKnT,EAAKyE,EAAMhS,EAAOgsB,GAEpChjC,EAAIgX,EAAOhX,EAAIgX,EAAQgsB,IAAShjC,EAAE,CAClC,MAAMiyB,EAAUjO,EAAShkB,GACrBiyB,EAAQwN,SAGRxN,EAAQjU,QAAUwH,EAClBxH,EAAO9K,KAAK+e,GAEZA,EAAQyF,KAAKnT,EAAKyE,GAE1B,CACA,IAAIhpB,EAAI,EAAGA,EAAIge,EAAO7e,SAAUa,EAC5Bge,EAAOhe,GAAG03B,KAAKnT,EAAKyE,EAE5B,CACHoJ,SAAS1gB,EAAOsM,GACT,MAAM4G,EAAO5G,EAAS,SAAW,UACjC,YAAiB1e,IAAVoS,GAAuBxD,KAAK6vB,YAAYc,QAAU3wB,KAAK42B,6BAA6BlgB,GAAQ1W,KAAK62B,0BAA0BrzB,GAAS,EAAGkT,EAClJ,CACHoC,WAAWtV,EAAOsM,EAAQ4G,GACnB,MAAMia,EAAU3wB,KAAK+yB,aACrB,IAAIpd,EACJ,GAAInS,GAAS,GAAKA,EAAQxD,KAAK6vB,YAAYlhC,KAAKsC,OAAQ,CACpD,MAAM8yB,EAAU/jB,KAAK6vB,YAAYlhC,KAAK6U,GACtCmS,EAAUoO,EAAQuO,WAAavO,EAAQuO,SAAW1B,GAAkB5wB,KAAK8Y,aAActV,EAAOugB,IAC9FpO,EAAQia,OAAS5vB,KAAK21B,UAAUnyB,GAChCmS,EAAQmb,IAAMH,EAAQhiC,KAAK6U,GAC3BmS,EAAQnS,MAAQmS,EAAQkb,UAAYrtB,CACxC,MACImS,EAAU3V,KAAKsyB,WAAatyB,KAAKsyB,SAAW5B,GAAqB1wB,KAAK4R,MAAMkH,aAAc9Y,KAAKwD,QAC/FmS,EAAQgb,QAAUA,EAClBhb,EAAQnS,MAAQmS,EAAQpS,aAAevD,KAAKwD,MAIhD,OAFAmS,EAAQ7F,SAAWA,EACnB6F,EAAQe,KAAOA,EACRf,CACX,CACHihB,6BAA6BlgB,GACtB,OAAO1W,KAAK82B,uBAAuB92B,KAAKwyB,mBAAmBhkC,GAAIkoB,EACnE,CACHmgB,0BAA0BrzB,EAAOkT,GAC1B,OAAO1W,KAAK82B,uBAAuB92B,KAAKyyB,gBAAgBjkC,GAAIkoB,EAAMlT,EACtE,CACHszB,uBAAuBC,EAAargB,EAAO,UAAWlT,GAC/C,MAAMsM,EAAkB,WAAT4G,EACT+I,EAAQzf,KAAK2xB,gBACb7gB,EAAWimB,EAAc,IAAMrgB,EAC/Bya,EAAS1R,EAAM3O,GACfkmB,EAAUh3B,KAAKoyB,qBAAuB9sB,GAAQ9B,GACpD,GAAI2tB,EACA,OAAOD,GAAiBC,EAAQ6F,GAEpC,MAAM7K,EAASnsB,KAAK4R,MAAMua,OACpBsI,EAAYtI,EAAO8K,wBAAwBj3B,KAAK6xB,MAAOkF,GACvD3X,EAAWtP,EAAS,CACtB,GAAGinB,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEE5X,EAASgN,EAAOwI,gBAAgB30B,KAAK+yB,aAAc0B,GACnDn2B,EAAQP,OAAOD,KAAKsR,GAAS0G,SAASihB,IACtCphB,EAAU,IAAI3V,KAAK8Y,WAAWtV,EAAOsM,EAAQ4G,GAC7CvM,EAASgiB,EAAO+K,oBAAoB/X,EAAQ7gB,EAAOqX,EAASyJ,GAKlE,OAJIjV,EAAO4iB,UACP5iB,EAAO4iB,QAAUiK,EACjBvX,EAAM3O,GAAY/S,OAAOo5B,OAAOjG,GAAiB/mB,EAAQ6sB,KAEtD7sB,CACX,CACHitB,mBAAmB5zB,EAAO6zB,EAAYvnB,GAC/B,MAAM8B,EAAQ5R,KAAK4R,MACb6N,EAAQzf,KAAK2xB,gBACb7gB,EAAW,aAAaumB,IACxBlG,EAAS1R,EAAM3O,GACrB,GAAIqgB,EACA,OAAOA,EAEX,IAAI1iC,EACJ,IAAgC,IAA5BmjB,EAAMnjB,QAAQshB,UAAqB,CACnC,MAAMoc,EAASnsB,KAAK4R,MAAMua,OACpBsI,EAAYtI,EAAOmL,0BAA0Bt3B,KAAK6xB,MAAOwF,GACzDlY,EAASgN,EAAOwI,gBAAgB30B,KAAK+yB,aAAc0B,GACzDhmC,EAAU09B,EAAOyI,eAAezV,EAAQnf,KAAK8Y,WAAWtV,EAAOsM,EAAQunB,GAC3E,CACA,MAAMnnB,EAAa,IAAIgc,GAAWta,EAAOnjB,GAAWA,EAAQyhB,YAI5D,OAHIzhB,GAAWA,EAAQmxB,aACnBH,EAAM3O,GAAY/S,OAAOo5B,OAAOjnB,IAE7BA,CACX,CACHqnB,iBAAiB9oC,GACV,GAAKA,EAAQs+B,QAGb,OAAO/sB,KAAKiyB,iBAAmBjyB,KAAKiyB,eAAiBl0B,OAAOyB,OAAO,CAAC,EAAG/Q,GAC3E,CACH+oC,eAAe9gB,EAAM+gB,GACd,OAAQA,GAAiBxG,GAAmBva,IAAS1W,KAAK4R,MAAM8lB,mBACpE,CACHC,kBAAkB7uB,EAAO4N,GAClB,MAAMkhB,EAAY53B,KAAK62B,0BAA0B/tB,EAAO4N,GAClDmhB,EAA0B73B,KAAKiyB,eAC/BwF,EAAgBz3B,KAAKu3B,iBAAiBK,GACtCJ,EAAiBx3B,KAAKw3B,eAAe9gB,EAAM+gB,IAAkBA,IAAkBI,EAErF,OADA73B,KAAK83B,oBAAoBL,EAAe/gB,EAAMkhB,GACvC,CACHH,gBACAD,iBAER,CACHO,cAAchU,EAASvgB,EAAOqM,EAAY6G,GAC/Bua,GAAmBva,GACnB3Y,OAAOyB,OAAOukB,EAASlU,GAEvB7P,KAAKo3B,mBAAmB5zB,EAAOkT,GAAMiV,OAAO5H,EAASlU,EAE7D,CACHioB,oBAAoBL,EAAe/gB,EAAMkW,GAC9B6K,IAAkBxG,GAAmBva,IACrC1W,KAAKo3B,wBAAmBhmC,EAAWslB,GAAMiV,OAAO8L,EAAe7K,EAEvE,CACHoL,UAAUjU,EAASvgB,EAAOkT,EAAM5G,GACzBiU,EAAQjU,OAASA,EACjB,MAAMrhB,EAAUuR,KAAKkkB,SAAS1gB,EAAOsM,GACrC9P,KAAKo3B,mBAAmB5zB,EAAOkT,EAAM5G,GAAQ6b,OAAO5H,EAAS,CACzDt1B,SAAUqhB,GAAU9P,KAAKu3B,iBAAiB9oC,IAAYA,GAE9D,CACAwpC,iBAAiBlU,EAASxgB,EAAcC,GACpCxD,KAAKg4B,UAAUjU,EAASvgB,EAAO,UAAU,EAC7C,CACA00B,cAAcnU,EAASxgB,EAAcC,GACjCxD,KAAKg4B,UAAUjU,EAASvgB,EAAO,UAAU,EAC7C,CACH20B,2BACO,MAAMpU,EAAU/jB,KAAK6vB,YAAYc,QAC7B5M,GACA/jB,KAAKg4B,UAAUjU,OAAS3yB,EAAW,UAAU,EAErD,CACHgnC,wBACO,MAAMrU,EAAU/jB,KAAK6vB,YAAYc,QAC7B5M,GACA/jB,KAAKg4B,UAAUjU,OAAS3yB,EAAW,UAAU,EAErD,CACHojC,gBAAgBH,GACT,MAAM1lC,EAAOqR,KAAK+xB,MACZjc,EAAW9V,KAAK6vB,YAAYlhC,KAClC,IAAK,MAAOkc,EAAQwtB,EAAMC,KAASt4B,KAAKuyB,UACpCvyB,KAAK6K,GAAQwtB,EAAMC,GAEvBt4B,KAAKuyB,UAAY,GACjB,MAAMgG,EAAUziB,EAAS7kB,OACnBunC,EAAU7pC,EAAKsC,OACf6jC,EAAQ5lC,KAAKE,IAAIopC,EAASD,GAC5BzD,GACA90B,KAAK60B,MAAM,EAAGC,GAEd0D,EAAUD,EACVv4B,KAAKy4B,gBAAgBF,EAASC,EAAUD,EAASlE,GAC1CmE,EAAUD,GACjBv4B,KAAK04B,gBAAgBF,EAASD,EAAUC,EAEhD,CACHC,gBAAgB3vB,EAAOgsB,EAAOT,GAAmB,GAC1C,MAAM7F,EAAOxuB,KAAK6vB,YACZlhC,EAAO6/B,EAAK7/B,KACZoa,EAAMD,EAAQgsB,EACpB,IAAIhjC,EACJ,MAAM6mC,EAAQpW,IAEV,IADAA,EAAItxB,QAAU6jC,EACVhjC,EAAIywB,EAAItxB,OAAS,EAAGa,GAAKiX,EAAKjX,IAC9BywB,EAAIzwB,GAAKywB,EAAIzwB,EAAIgjC,EACrB,EAGJ,IADA6D,EAAKhqC,GACDmD,EAAIgX,EAAOhX,EAAIiX,IAAOjX,EACtBnD,EAAKmD,GAAK,IAAIkO,KAAKyyB,gBAEnBzyB,KAAK8xB,UACL6G,EAAKnK,EAAKwC,SAEdhxB,KAAK60B,MAAM/rB,EAAOgsB,GACdT,GACAr0B,KAAK44B,eAAejqC,EAAMma,EAAOgsB,EAAO,QAEhD,CACA8D,eAAe7U,EAASjb,EAAOgsB,EAAOpe,GAAO,CAChDgiB,gBAAgB5vB,EAAOgsB,GAChB,MAAMtG,EAAOxuB,KAAK6vB,YAClB,GAAI7vB,KAAK8xB,SAAU,CACf,MAAM+G,EAAUrK,EAAKwC,QAAQ7lB,OAAOrC,EAAOgsB,GACvCtG,EAAKgD,UACLT,GAAYvC,EAAMqK,EAE1B,CACArK,EAAK7/B,KAAKwc,OAAOrC,EAAOgsB,EAC5B,CACHgE,MAAMn2B,GACC,GAAI3C,KAAK8xB,SACL9xB,KAAKuyB,UAAUvtB,KAAKrC,OACjB,CACH,MAAOkI,EAAQwtB,EAAMC,GAAQ31B,EAC7B3C,KAAK6K,GAAQwtB,EAAMC,EACvB,CACAt4B,KAAK4R,MAAMmnB,aAAa/zB,KAAK,CACzBhF,KAAKwD,SACFb,GAEX,CACAq2B,cACI,MAAMlE,EAAQmE,UAAUhoC,OACxB+O,KAAK84B,MAAM,CACP,kBACA94B,KAAK+yB,aAAapkC,KAAKsC,OAAS6jC,EAChCA,GAER,CACAoE,aACIl5B,KAAK84B,MAAM,CACP,kBACA94B,KAAK6vB,YAAYlhC,KAAKsC,OAAS,EAC/B,GAER,CACAkoC,eACIn5B,KAAK84B,MAAM,CACP,kBACA,EACA,GAER,CACAM,cAActwB,EAAOgsB,GACbA,GACA90B,KAAK84B,MAAM,CACP,kBACAhwB,EACAgsB,IAGR,MAAMuE,EAAWJ,UAAUhoC,OAAS,EAChCooC,GACAr5B,KAAK84B,MAAM,CACP,kBACAhwB,EACAuwB,GAGZ,CACAC,iBACIt5B,KAAK84B,MAAM,CACP,kBACA,EACAG,UAAUhoC,QAElB,EAGJ,SAASsoC,GAAkBpiB,EAAOpX,GAC9B,IAAKoX,EAAMqiB,OAAOC,KAAM,CACpB,MAAMC,EAAeviB,EAAMsY,wBAAwB1vB,GACnD,IAAIoK,EAAS,GACb,IAAI,IAAIrY,EAAI,EAAGsR,EAAOs2B,EAAazoC,OAAQa,EAAIsR,EAAMtR,IACjDqY,EAASA,EAAOwvB,OAAOD,EAAa5nC,GAAG69B,WAAW0G,mBAAmBlf,IAEzEA,EAAMqiB,OAAOC,KAAOruB,GAAajB,EAAOjD,MAAK,CAAClX,EAAGC,IAAID,EAAIC,IAC7D,CACA,OAAOknB,EAAMqiB,OAAOC,IACxB,CACC,SAASG,GAAqBpL,GAC3B,MAAMrX,EAAQqX,EAAKuB,OACb5lB,EAASovB,GAAkBpiB,EAAOqX,EAAKzuB,MAC7C,IACIjO,EAAGsR,EAAMy2B,EAAM5E,EADf7lC,EAAM+nB,EAAM2iB,QAEhB,MAAMC,EAAmB,KACR,QAATF,IAA4B,QAAVA,IAGlBv0B,GAAQ2vB,KACR7lC,EAAMF,KAAKE,IAAIA,EAAKF,KAAKsX,IAAIqzB,EAAO5E,IAAS7lC,IAEjD6lC,EAAO4E,EAAI,EAEf,IAAI/nC,EAAI,EAAGsR,EAAO+G,EAAOlZ,OAAQa,EAAIsR,IAAQtR,EACzC+nC,EAAO1iB,EAAM6iB,iBAAiB7vB,EAAOrY,IACrCioC,IAGJ,IADA9E,OAAO7jC,EACHU,EAAI,EAAGsR,EAAO+T,EAAMxF,MAAM1gB,OAAQa,EAAIsR,IAAQtR,EAC9C+nC,EAAO1iB,EAAM8iB,gBAAgBnoC,GAC7BioC,IAEJ,OAAO3qC,CACX,CACC,SAAS8qC,GAAyB12B,EAAO22B,EAAO1rC,EAAS2rC,GACtD,MAAMC,EAAY5rC,EAAQ6rC,aAC1B,IAAI70B,EAAMrG,EAQV,OAPIoC,GAAc64B,IACd50B,EAAO00B,EAAM/qC,IAAMX,EAAQ8rC,mBAC3Bn7B,EAAQ3Q,EAAQ+rC,gBAEhB/0B,EAAO40B,EAAYD,EACnBh7B,EAAQ,GAEL,CACHq7B,MAAOh1B,EAAO20B,EACdh7B,QACA0J,MAAOqxB,EAAMO,OAAOl3B,GAASiC,EAAO,EAE5C,CACC,SAASk1B,GAA0Bn3B,EAAO22B,EAAO1rC,EAAS2rC,GACvD,MAAMM,EAASP,EAAMO,OACfb,EAAOa,EAAOl3B,GACpB,IAAIyxB,EAAOzxB,EAAQ,EAAIk3B,EAAOl3B,EAAQ,GAAK,KACvCo3B,EAAOp3B,EAAQk3B,EAAOzpC,OAAS,EAAIypC,EAAOl3B,EAAQ,GAAK,KAC3D,MAAMq3B,EAAUpsC,EAAQ8rC,mBACX,OAATtF,IACAA,EAAO4E,GAAiB,OAATe,EAAgBT,EAAMpxB,IAAMoxB,EAAMrxB,MAAQ8xB,EAAOf,IAEvD,OAATe,IACAA,EAAOf,EAAOA,EAAO5E,GAEzB,MAAMnsB,EAAQ+wB,GAAQA,EAAO3qC,KAAKE,IAAI6lC,EAAM2F,IAAS,EAAIC,EACnDp1B,EAAOvW,KAAKsX,IAAIo0B,EAAO3F,GAAQ,EAAI4F,EACzC,MAAO,CACHJ,MAAOh1B,EAAO20B,EACdh7B,MAAO3Q,EAAQ+rC,cACf1xB,QAER,CACA,SAASgyB,GAAcC,EAAOhtC,EAAMwhC,EAAQz9B,GACxC,MAAMkpC,EAAazL,EAAOsF,MAAMkG,EAAM,GAAIjpC,GACpCmpC,EAAW1L,EAAOsF,MAAMkG,EAAM,GAAIjpC,GAClC1C,EAAMF,KAAKE,IAAI4rC,EAAYC,GAC3B9rC,EAAMD,KAAKC,IAAI6rC,EAAYC,GACjC,IAAIC,EAAW9rC,EACX+rC,EAAShsC,EACTD,KAAKsX,IAAIpX,GAAOF,KAAKsX,IAAIrX,KACzB+rC,EAAW/rC,EACXgsC,EAAS/rC,GAEbrB,EAAKwhC,EAAOU,MAAQkL,EACpBptC,EAAKqtC,QAAU,CACXF,WACAC,SACAryB,MAAOkyB,EACPjyB,IAAKkyB,EACL7rC,MACAD,MAER,CACA,SAASksC,GAAWN,EAAOhtC,EAAMwhC,EAAQz9B,GAMrC,OALIM,GAAQ2oC,GACRD,GAAcC,EAAOhtC,EAAMwhC,EAAQz9B,GAEnC/D,EAAKwhC,EAAOU,MAAQV,EAAOsF,MAAMkG,EAAOjpC,GAErC/D,CACX,CACA,SAASutC,GAAsB9M,EAAM7/B,EAAMma,EAAOgsB,GAC9C,MAAM/E,EAASvB,EAAKuB,OACdR,EAASf,EAAKe,OACd+F,EAASvF,EAAOwF,YAChBC,EAAczF,IAAWR,EACzBK,EAAS,GACf,IAAI99B,EAAGsR,EAAMrV,EAAMgtC,EACnB,IAAIjpC,EAAIgX,EAAO1F,EAAO0F,EAAQgsB,EAAOhjC,EAAIsR,IAAQtR,EAC7CipC,EAAQpsC,EAAKmD,GACb/D,EAAO,CAAC,EACRA,EAAKgiC,EAAOE,MAAQuF,GAAezF,EAAO8E,MAAMS,EAAOxjC,GAAIA,GAC3D89B,EAAO5qB,KAAKq2B,GAAWN,EAAOhtC,EAAMwhC,EAAQz9B,IAEhD,OAAO89B,CACX,CACA,SAAS2L,GAAWC,GAChB,OAAOA,QAA8BpqC,IAApBoqC,EAAON,eAA4C9pC,IAAlBoqC,EAAOL,MAC7D,CACA,SAASM,GAAQh2B,EAAM8pB,EAAQmM,GAC3B,OAAa,IAATj2B,EACOY,GAAKZ,IAER8pB,EAAOoM,eAAiB,GAAK,IAAMpM,EAAOngC,KAAOssC,EAAa,GAAK,EAC/E,CACA,SAASE,GAAY/rB,GACjB,IAAI7M,EAAS8F,EAAOC,EAAKyH,EAAKC,EAiB9B,OAhBIZ,EAAWgsB,YACX74B,EAAU6M,EAAW/E,KAAO+E,EAAW3c,EACvC4V,EAAQ,OACRC,EAAM,UAEN/F,EAAU6M,EAAW/E,KAAO+E,EAAWlL,EACvCmE,EAAQ,SACRC,EAAM,OAEN/F,GACAwN,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEN,CACH3H,QACAC,MACA/F,UACAwN,MACAC,SAER,CACA,SAASqrB,GAAiBjsB,EAAYphB,EAASw/B,EAAOzqB,GAClD,IAAIu4B,EAAOttC,EAAQutC,cACnB,MAAMjxB,EAAM,CAAC,EACb,IAAKgxB,EAED,YADAlsB,EAAWmsB,cAAgBjxB,GAG/B,IAAa,IAATgxB,EAOA,YANAlsB,EAAWmsB,cAAgB,CACvBxrB,KAAK,EACLjE,OAAO,EACPkE,QAAQ,EACRnE,MAAM,IAId,MAAM,MAAExD,EAAM,IAAEC,EAAI,QAAE/F,EAAQ,IAAEwN,EAAI,OAAEC,GAAYmrB,GAAY/rB,GACjD,WAATksB,GAAqB9N,IACrBpe,EAAWosB,oBAAqB,GAC3BhO,EAAMmC,MAAQ,KAAO5sB,EACtBu4B,EAAOvrB,GACCyd,EAAMoC,SAAW,KAAO7sB,EAChCu4B,EAAOtrB,GAEP1F,EAAImxB,GAAUzrB,EAAQ3H,EAAOC,EAAK/F,KAAY,EAC9C+4B,EAAOvrB,IAGfzF,EAAImxB,GAAUH,EAAMjzB,EAAOC,EAAK/F,KAAY,EAC5C6M,EAAWmsB,cAAgBjxB,CAC/B,CACA,SAASmxB,GAAUH,EAAM/rC,EAAGC,EAAG+S,GAO3B,OANIA,GACA+4B,EAAOI,GAAKJ,EAAM/rC,EAAGC,GACrB8rC,EAAOK,GAASL,EAAM9rC,EAAGD,IAEzB+rC,EAAOK,GAASL,EAAM/rC,EAAGC,GAEtB8rC,CACX,CACA,SAASI,GAAKE,EAAM/4B,EAAIg5B,GACpB,OAAOD,IAAS/4B,EAAKg5B,EAAKD,IAASC,EAAKh5B,EAAK+4B,CACjD,CACA,SAASD,GAASttC,EAAGga,EAAOC,GACxB,MAAa,UAANja,EAAgBga,EAAc,QAANha,EAAcia,EAAMja,CACvD,CACA,SAASytC,GAAiB1sB,GAAY,cAAE2sB,GAAkBp9B,GACtDyQ,EAAW2sB,cAAkC,SAAlBA,EAAqC,IAAVp9B,EAAc,IAAO,EAAIo9B,CACnF,CACA,MAAMC,WAAsBhL,GACxBC,UAAY,MACfA,gBAAkB,CACXc,oBAAoB,EACpBC,gBAAiB,MACjB8H,mBAAoB,GACpBC,cAAe,GACfkC,SAAS,EACTxsB,WAAY,CACRjB,QAAS,CACLlP,KAAM,SACN8P,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnB6hB,iBAAmB,CACZta,OAAQ,CACJulB,QAAS,CACL58B,KAAM,WACN6S,QAAQ,EACRI,KAAM,CACFJ,QAAQ,IAGhBgqB,QAAS,CACL78B,KAAM,SACN8S,aAAa,KAI5BuiB,mBAAmB5G,EAAM7/B,EAAMma,EAAOgsB,GAC/B,OAAOwG,GAAsB9M,EAAM7/B,EAAMma,EAAOgsB,EACpD,CACHI,eAAe1G,EAAM7/B,EAAMma,EAAOgsB,GAC3B,OAAOwG,GAAsB9M,EAAM7/B,EAAMma,EAAOgsB,EACpD,CACHK,gBAAgB3G,EAAM7/B,EAAMma,EAAOgsB,GAC5B,MAAM,OAAE/E,EAAO,OAAER,GAAYf,GACvB,SAAEiH,EAAU,IAAI,SAAEC,EAAU,KAAS11B,KAAK8xB,SAC1C+K,EAA2B,MAAhB9M,EAAOE,KAAewF,EAAWC,EAC5CoH,EAA2B,MAAhBvN,EAAOU,KAAewF,EAAWC,EAC5C9F,EAAS,GACf,IAAI99B,EAAGsR,EAAMrV,EAAMqS,EACnB,IAAItO,EAAIgX,EAAO1F,EAAO0F,EAAQgsB,EAAOhjC,EAAIsR,IAAQtR,EAC7CsO,EAAMzR,EAAKmD,GACX/D,EAAO,CAAC,EACRA,EAAKgiC,EAAOE,MAAQF,EAAO8E,MAAM3vB,GAAiB9E,EAAKy8B,GAAW/qC,GAClE89B,EAAO5qB,KAAKq2B,GAAWn2B,GAAiB9E,EAAK08B,GAAW/uC,EAAMwhC,EAAQz9B,IAE1E,OAAO89B,CACX,CACHiG,sBAAsB5jC,EAAOklB,EAAOyY,EAAQ3B,GACrC8O,MAAMlH,sBAAsB5jC,EAAOklB,EAAOyY,EAAQ3B,GAClD,MAAMuN,EAAS5L,EAAOwL,QAClBI,GAAUrkB,IAAUnX,KAAK6vB,YAAYN,SACrCt9B,EAAM7C,IAAMF,KAAKE,IAAI6C,EAAM7C,IAAKosC,EAAOpsC,KACvC6C,EAAM9C,IAAMD,KAAKC,IAAI8C,EAAM9C,IAAKqsC,EAAOrsC,KAE/C,CACHmnC,iBACO,OAAO,CACX,CACHC,iBAAiB/yB,GACV,MAAMgrB,EAAOxuB,KAAK6vB,aACZ,OAAEE,EAAO,OAAER,GAAYf,EACvBoB,EAAS5vB,KAAK21B,UAAUnyB,GACxBg4B,EAAS5L,EAAOwL,QAChB35B,EAAQ85B,GAAWC,GAAU,IAAMA,EAAO1yB,MAAQ,KAAO0yB,EAAOzyB,IAAM,IAAM,GAAKwmB,EAAOkH,iBAAiB7G,EAAOL,EAAOU,OAC7H,MAAO,CACHuG,MAAO,GAAKzG,EAAO0G,iBAAiB7G,EAAOG,EAAOE,OAClDxuB,QAER,CACAixB,aACI1yB,KAAKoyB,qBAAsB,EAC3B2K,MAAMrK,aACN,MAAMlE,EAAOxuB,KAAK6vB,YAClBrB,EAAKP,MAAQjuB,KAAK+yB,aAAa9E,KACnC,CACAtC,OAAOjV,GACH,MAAM8X,EAAOxuB,KAAK6vB,YAClB7vB,KAAK44B,eAAepK,EAAK7/B,KAAM,EAAG6/B,EAAK7/B,KAAKsC,OAAQylB,EACxD,CACAkiB,eAAeoE,EAAMl0B,EAAOgsB,EAAOpe,GAC/B,MAAMsd,EAAiB,UAATtd,GACR,MAAElT,EAAQqsB,aAAa,OAAEN,IAAevvB,KACxC8K,EAAOykB,EAAO0N,eACdpB,EAAatM,EAAOoM,eACpBxB,EAAQn6B,KAAKk9B,aACb,cAAEzF,EAAc,eAAED,GAAoBx3B,KAAK23B,kBAAkB7uB,EAAO4N,GAC1E,IAAI,IAAI5kB,EAAIgX,EAAOhX,EAAIgX,EAAQgsB,EAAOhjC,IAAI,CACtC,MAAM89B,EAAS5vB,KAAK21B,UAAU7jC,GACxBqrC,EAAUnJ,GAASxyB,GAAcouB,EAAOL,EAAOU,OAAS,CAC1DnlB,OACAsyB,KAAMtyB,GACN9K,KAAKq9B,yBAAyBvrC,GAC5BwrC,EAAUt9B,KAAKu9B,yBAAyBzrC,EAAGqoC,GAC3ClM,GAAS2B,EAAOE,SAAW,CAAC,GAAGP,EAAOU,MACtCpgB,EAAa,CACfgsB,aACA/wB,KAAMqyB,EAAQryB,KACdmxB,oBAAqBhO,GAASsN,GAAW3L,EAAOwL,UAAY53B,IAAUyqB,EAAMmC,MAAQ5sB,IAAUyqB,EAAMoC,QACpGn9B,EAAG2oC,EAAasB,EAAQC,KAAOE,EAAQE,OACvC74B,EAAGk3B,EAAayB,EAAQE,OAASL,EAAQC,KACzClkB,OAAQ2iB,EAAayB,EAAQ73B,KAAOvW,KAAKsX,IAAI22B,EAAQ13B,MACrDkO,MAAOkoB,EAAa3sC,KAAKsX,IAAI22B,EAAQ13B,MAAQ63B,EAAQ73B,MAErD+xB,IACA3nB,EAAWphB,QAAUgpC,GAAiBz3B,KAAK62B,0BAA0B/kC,EAAGkrC,EAAKlrC,GAAGge,OAAS,SAAW4G,IAExG,MAAMjoB,EAAUohB,EAAWphB,SAAWuuC,EAAKlrC,GAAGrD,QAC9CqtC,GAAiBjsB,EAAYphB,EAASw/B,EAAOzqB,GAC7C+4B,GAAiB1sB,EAAYphB,EAAS0rC,EAAM/6B,OAC5CY,KAAK+3B,cAAciF,EAAKlrC,GAAIA,EAAG+d,EAAY6G,EAC/C,CACJ,CACH+mB,WAAW1zB,EAAM8mB,GACV,MAAM,OAAEd,GAAY/vB,KAAK6vB,YACnB/B,EAAWiC,EAAON,wBAAwBzvB,KAAK6xB,OAAOrP,QAAQgM,GAAOA,EAAKmB,WAAWlhC,QAAQiuC,UAC7FjO,EAAUsB,EAAOthC,QAAQggC,QACzBS,EAAS,GACTwO,EAAYlP,IACd,MAAMoB,EAASpB,EAAKmB,WAAWgG,UAAU9E,GACnC9vB,EAAM6uB,GAAUA,EAAOpB,EAAKe,OAAOU,MACzC,GAAIzuB,GAAcT,IAAQsG,MAAMtG,GAC5B,OAAO,CACX,EAEJ,IAAK,MAAMytB,KAAQV,EACf,SAAkB18B,IAAdy/B,IAA2B6M,EAASlP,QAGxB,IAAZC,IAAqD,IAAhCS,EAAOprB,QAAQ0qB,EAAKP,aAA6B78B,IAAZq9B,QAAwCr9B,IAAfo9B,EAAKP,QACxFiB,EAAOlqB,KAAKwpB,EAAKP,OAEjBO,EAAKhrB,QAAUuG,GACf,MAMR,OAHKmlB,EAAOj+B,QACRi+B,EAAOlqB,UAAK5T,GAET89B,CACX,CACHyO,eAAen6B,GACR,OAAOxD,KAAKy9B,gBAAWrsC,EAAWoS,GAAOvS,MAC7C,CACH2sC,eAAer6B,EAAcqM,EAAMihB,GAC5B,MAAM3B,EAASlvB,KAAKy9B,WAAWl6B,EAAcstB,GACvCrtB,OAAiBpS,IAATwe,EAAqBsf,EAAOprB,QAAQ8L,IAAS,EAC3D,OAAkB,IAAXpM,EAAe0rB,EAAOj+B,OAAS,EAAIuS,CAC9C,CACH05B,YACO,MAAM9hB,EAAOpb,KAAKvR,QACZ+/B,EAAOxuB,KAAK6vB,YACZE,EAASvB,EAAKuB,OACd2K,EAAS,GACf,IAAI5oC,EAAGsR,EACP,IAAItR,EAAI,EAAGsR,EAAOorB,EAAK7/B,KAAKsC,OAAQa,EAAIsR,IAAQtR,EAC5C4oC,EAAO11B,KAAK+qB,EAAOiK,iBAAiBh6B,KAAK21B,UAAU7jC,GAAGi+B,EAAOE,MAAOn+B,IAExE,MAAMwoC,EAAelf,EAAKkf,aACpBlrC,EAAMkrC,GAAgBV,GAAqBpL,GACjD,MAAO,CACHp/B,MACAsrC,SACA5xB,MAAOinB,EAAO8N,YACd90B,IAAKgnB,EAAO+N,UACZ1D,WAAYp6B,KAAK29B,iBACjBxmB,MAAO4Y,EACP2M,QAASthB,EAAKshB,QACdt9B,MAAOk7B,EAAe,EAAIlf,EAAKmf,mBAAqBnf,EAAKof,cAEjE,CACH6C,yBAAyB75B,GAClB,MAAQqsB,aAAa,OAAEN,EAAO,SAAEiC,EAAWhuB,MAAOD,GAAkB9U,SAAWqc,KAAMizB,EAAU,aAAEC,IAAqBh+B,KAChH07B,EAAaqC,GAAa,EAC1BnO,EAAS5vB,KAAK21B,UAAUnyB,GACxBg4B,EAAS5L,EAAOwL,QAChB6C,EAAW1C,GAAWC,GAC5B,IAGI4B,EAAM33B,EAHNhE,EAAQmuB,EAAOL,EAAOU,MACtBnnB,EAAQ,EACR7X,EAASugC,EAAWxxB,KAAKguB,WAAWuB,EAAQK,EAAQ4B,GAAY/vB,EAEhExQ,IAAWwQ,IACXqH,EAAQ7X,EAASwQ,EACjBxQ,EAASwQ,GAETw8B,IACAx8B,EAAQ+5B,EAAON,SACfjqC,EAASuqC,EAAOL,OAASK,EAAON,SAClB,IAAVz5B,GAAe4E,GAAK5E,KAAW4E,GAAKm1B,EAAOL,UAC3CryB,EAAQ,GAEZA,GAASrH,GAEb,MAAMu5B,EAAcx5B,GAAcu8B,IAAeE,EAAuBn1B,EAAZi1B,EAC5D,IAAIjzB,EAAOykB,EAAOyK,iBAAiBgB,GAOnC,GALIoC,EADAp9B,KAAK4R,MAAMssB,kBAAkB16B,GACtB+rB,EAAOyK,iBAAiBlxB,EAAQ7X,GAEhC6Z,EAEXrF,EAAO23B,EAAOtyB,EACV5b,KAAKsX,IAAIf,GAAQu4B,EAAc,CAC/Bv4B,EAAOg2B,GAAQh2B,EAAM8pB,EAAQmM,GAAcsC,EACvCv8B,IAAUi6B,IACV5wB,GAAQrF,EAAO,GAEnB,MAAM04B,EAAa5O,EAAO6O,mBAAmB,GACvCC,EAAW9O,EAAO6O,mBAAmB,GACrChvC,EAAMF,KAAKE,IAAI+uC,EAAYE,GAC3BlvC,EAAMD,KAAKC,IAAIgvC,EAAYE,GACjCvzB,EAAO5b,KAAKC,IAAID,KAAKE,IAAI0b,EAAM3b,GAAMC,GACrCguC,EAAOtyB,EAAOrF,EACV+rB,IAAayM,IACbrO,EAAOE,QAAQP,EAAOU,MAAMM,cAAchtB,GAAgBgsB,EAAO+O,iBAAiBlB,GAAQ7N,EAAO+O,iBAAiBxzB,GAE1H,CACA,GAAIA,IAASykB,EAAOyK,iBAAiB0B,GAAa,CAC9C,MAAM6C,EAAWl4B,GAAKZ,GAAQ8pB,EAAOiP,qBAAqB9C,GAAc,EACxE5wB,GAAQyzB,EACR94B,GAAQ84B,CACZ,CACA,MAAO,CACH94B,OACAqF,OACAsyB,OACAI,OAAQJ,EAAO33B,EAAO,EAE9B,CACH83B,yBAAyB/5B,EAAO22B,GACzB,MAAMhjB,EAAQgjB,EAAMhjB,MACd1oB,EAAUuR,KAAKvR,QACfivC,EAAWjvC,EAAQivC,SACnBe,EAAkBr8B,GAAe3T,EAAQgwC,gBAAiBC,KAChE,IAAIlB,EAAQ/3B,EACZ,GAAI00B,EAAMuC,QAAS,CACf,MAAMtC,EAAasD,EAAW19B,KAAK29B,eAAen6B,GAAS22B,EAAMC,WAC3DnoC,EAAiC,SAAzBxD,EAAQ6rC,aAA0BK,GAA0Bn3B,EAAO22B,EAAO1rC,EAAS2rC,GAAcF,GAAyB12B,EAAO22B,EAAO1rC,EAAS2rC,GACzJuE,EAAa3+B,KAAK49B,eAAe59B,KAAKwD,MAAOxD,KAAK6vB,YAAY5B,MAAOyP,EAAWl6B,OAAQpS,GAC9FosC,EAASvrC,EAAM6W,MAAQ7W,EAAMwoC,MAAQkE,EAAa1sC,EAAMwoC,MAAQ,EAChEh1B,EAAOvW,KAAKE,IAAIqvC,EAAiBxsC,EAAMwoC,MAAQxoC,EAAMmN,MACzD,MACIo+B,EAASrmB,EAAM6iB,iBAAiBh6B,KAAK21B,UAAUnyB,GAAO2T,EAAM8Y,MAAOzsB,GACnEiC,EAAOvW,KAAKE,IAAIqvC,EAAiBtE,EAAM/qC,IAAM+qC,EAAM/6B,OAEvD,MAAO,CACH0L,KAAM0yB,EAAS/3B,EAAO,EACtB23B,KAAMI,EAAS/3B,EAAO,EACtB+3B,SACA/3B,OAER,CACA+jB,OACI,MAAMgF,EAAOxuB,KAAK6vB,YACZN,EAASf,EAAKe,OACdqP,EAAQpQ,EAAK7/B,KACbyU,EAAOw7B,EAAM3tC,OACnB,IAAIa,EAAI,EACR,KAAMA,EAAIsR,IAAQtR,EACyB,OAAnCkO,KAAK21B,UAAU7jC,GAAGy9B,EAAOU,OACzB2O,EAAM9sC,GAAG03B,KAAKxpB,KAAKsT,KAG/B,EAk6BA,SAAS,KACT,MAAM,IAAI6O,MAAM,kFACpB,CAMI,MAAM0c,GAUJnN,gBAAgBoN,GACd/gC,OAAOyB,OAAOq/B,GAAgBn9B,UAAWo9B,EAC7C,CACArwC,QACAqR,YAAYrR,GACRuR,KAAKvR,QAAUA,GAAW,CAAC,CAC/B,CAEAswC,OAAQ,CACRC,UACI,OAAO,IACX,CACAnK,QACI,OAAO,IACX,CACAtjB,SACI,OAAO,IACX,CACAwN,MACI,OAAO,IACX,CACAkgB,OACI,OAAO,IACX,CACAC,UACI,OAAO,IACX,CACAC,QACI,OAAO,IACX,EAEJ,IAAIC,GAAW,CACXC,MAAOR,IAGX,SAASS,GAAaC,EAAStP,EAAMxuB,EAAOkV,GACxC,MAAM,WAAEgZ,EAAW,KAAEhhC,EAAK,QAAEqmC,GAAauK,EACnCxP,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgB+E,GAAWrmC,EAAKsC,OAAQ,CAC1E,MAAMuuC,EAAezP,EAAO0P,eAAiBx1B,GAAgBH,GAC7D,IAAK6M,EACD,OAAO6oB,EAAa7wC,EAAMshC,EAAMxuB,GAC7B,GAAIkuB,EAAWsC,eAAgB,CAClC,MAAM9N,EAAKx1B,EAAK,GACVsD,EAA+B,oBAAhBkyB,EAAGub,UAA2Bvb,EAAGub,SAASzP,GAC/D,GAAIh+B,EAAO,CACP,MAAM6W,EAAQ02B,EAAa7wC,EAAMshC,EAAMxuB,EAAQxP,GACzC8W,EAAMy2B,EAAa7wC,EAAMshC,EAAMxuB,EAAQxP,GAC7C,MAAO,CACH4X,GAAIf,EAAMe,GACVD,GAAIb,EAAIa,GAEhB,CACJ,CACJ,CACA,MAAO,CACHC,GAAI,EACJD,GAAIjb,EAAKsC,OAAS,EAE1B,CACC,SAAS0uC,GAAyB/tB,EAAOqe,EAAM2P,EAAUC,EAASlpB,GAC/D,MAAMmX,EAAWlc,EAAMkuB,+BACjBr+B,EAAQm+B,EAAS3P,GACvB,IAAI,IAAIn+B,EAAI,EAAGsR,EAAO0qB,EAAS78B,OAAQa,EAAIsR,IAAQtR,EAAE,CACjD,MAAM,MAAE0R,EAAM,KAAE7U,GAAUm/B,EAASh8B,IAC7B,GAAE+X,EAAG,GAAED,GAAQ01B,GAAaxR,EAASh8B,GAAIm+B,EAAMxuB,EAAOkV,GAC5D,IAAI,IAAI1Y,EAAI4L,EAAI5L,GAAK2L,IAAM3L,EAAE,CACzB,MAAM8lB,EAAUp1B,EAAKsP,GAChB8lB,EAAQgc,MACTF,EAAQ9b,EAASvgB,EAAOvF,EAEhC,CACJ,CACJ,CACC,SAAS+hC,GAAyB/P,GAC/B,MAAMgQ,GAA8B,IAAvBhQ,EAAKnsB,QAAQ,KACpBo8B,GAA8B,IAAvBjQ,EAAKnsB,QAAQ,KAC1B,OAAO,SAAS4E,EAAKC,GACjB,MAAMw3B,EAASF,EAAO/wC,KAAKsX,IAAIkC,EAAIxV,EAAIyV,EAAIzV,GAAK,EAC1CktC,EAASF,EAAOhxC,KAAKsX,IAAIkC,EAAI/D,EAAIgE,EAAIhE,GAAK,EAChD,OAAOzV,KAAK+X,KAAK/X,KAAK2P,IAAIshC,EAAQ,GAAKjxC,KAAK2P,IAAIuhC,EAAQ,GAC5D,CACJ,CACC,SAASC,GAAkBzuB,EAAOguB,EAAU3P,EAAMqQ,EAAkB1pB,GACjE,MAAM9oB,EAAQ,GACd,IAAK8oB,IAAqBhF,EAAM2uB,cAAcX,GAC1C,OAAO9xC,EAEX,MAAM0yC,EAAiB,SAASzc,EAASxgB,EAAcC,IAC9CoT,GAAqBgE,GAAemJ,EAASnS,EAAM+kB,UAAW,KAG/D5S,EAAQ0c,QAAQb,EAAS1sC,EAAG0sC,EAASj7B,EAAG27B,IACxCxyC,EAAMkX,KAAK,CACP+e,UACAxgB,eACAC,SAGZ,EAEA,OADAm8B,GAAyB/tB,EAAOqe,EAAM2P,EAAUY,GAAgB,GACzD1yC,CACX,CACC,SAAS4yC,GAAsB9uB,EAAOguB,EAAU3P,EAAMqQ,GACnD,IAAIxyC,EAAQ,GACZ,SAAS0yC,EAAezc,EAASxgB,EAAcC,GAC3C,MAAM,WAAEm9B,EAAW,SAAEC,GAAc7c,EAAQ8c,SAAS,CAChD,aACA,YACDP,IACG,MAAEh4B,GAAWN,GAAkB+b,EAAS,CAC1C7wB,EAAG0sC,EAAS1sC,EACZyR,EAAGi7B,EAASj7B,IAEZkE,GAAcP,EAAOq4B,EAAYC,IACjC9yC,EAAMkX,KAAK,CACP+e,UACAxgB,eACAC,SAGZ,CAEA,OADAm8B,GAAyB/tB,EAAOqe,EAAM2P,EAAUY,GACzC1yC,CACX,CACC,SAASgzC,GAAyBlvB,EAAOguB,EAAU3P,EAAMtZ,EAAW2pB,EAAkB1pB,GACnF,IAAI9oB,EAAQ,GACZ,MAAMizC,EAAiBf,GAAyB/P,GAChD,IAAI+Q,EAAch/B,OAAO+D,kBACzB,SAASy6B,EAAezc,EAASxgB,EAAcC,GAC3C,MAAMi9B,EAAU1c,EAAQ0c,QAAQb,EAAS1sC,EAAG0sC,EAASj7B,EAAG27B,GACxD,GAAI3pB,IAAc8pB,EACd,OAEJ,MAAMjD,EAASzZ,EAAQkd,eAAeX,GAChCY,IAAgBtqB,GAAoBhF,EAAM2uB,cAAc/C,GAC9D,IAAK0D,IAAgBT,EACjB,OAEJ,MAAMj4B,EAAWu4B,EAAenB,EAAUpC,GACtCh1B,EAAWw4B,GACXlzC,EAAQ,CACJ,CACIi2B,UACAxgB,eACAC,UAGRw9B,EAAcx4B,GACPA,IAAaw4B,GACpBlzC,EAAMkX,KAAK,CACP+e,UACAxgB,eACAC,SAGZ,CAEA,OADAm8B,GAAyB/tB,EAAOqe,EAAM2P,EAAUY,GACzC1yC,CACX,CACC,SAASqzC,GAAgBvvB,EAAOguB,EAAU3P,EAAMtZ,EAAW2pB,EAAkB1pB,GAC1E,OAAKA,GAAqBhF,EAAM2uB,cAAcX,GAG9B,MAAT3P,GAAiBtZ,EAA6EmqB,GAAyBlvB,EAAOguB,EAAU3P,EAAMtZ,EAAW2pB,EAAkB1pB,GAA9I8pB,GAAsB9uB,EAAOguB,EAAU3P,EAAMqQ,GAFtE,EAGf,CACC,SAASc,GAAaxvB,EAAOguB,EAAU3P,EAAMtZ,EAAW2pB,GACrD,MAAMxyC,EAAQ,GACRuzC,EAAuB,MAATpR,EAAe,WAAa,WAChD,IAAIqR,GAAiB,EAWrB,OAVA3B,GAAyB/tB,EAAOqe,EAAM2P,GAAU,CAAC7b,EAASxgB,EAAcC,KAChEugB,EAAQsd,GAAazB,EAAS3P,GAAOqQ,KACrCxyC,EAAMkX,KAAK,CACP+e,UACAxgB,eACAC,UAEJ89B,EAAiBA,GAAkBvd,EAAQ0c,QAAQb,EAAS1sC,EAAG0sC,EAASj7B,EAAG27B,GAC/E,IAEA3pB,IAAc2qB,EACP,GAEJxzC,CACX,CACC,IAAIyzC,GAAc,CACf5B,4BACA6B,MAAO,CACVh+B,MAAOoO,EAAOxhB,EAAG3B,EAAS6xC,GACf,MAAMV,EAAWxa,GAAoBh1B,EAAGwhB,GAClCqe,EAAOxhC,EAAQwhC,MAAQ,IACvBrZ,EAAmBnoB,EAAQmoB,mBAAoB,EAC/C9oB,EAAQW,EAAQkoB,UAAY0pB,GAAkBzuB,EAAOguB,EAAU3P,EAAMqQ,EAAkB1pB,GAAoBuqB,GAAgBvvB,EAAOguB,EAAU3P,GAAM,EAAOqQ,EAAkB1pB,GAC3Kd,EAAW,GACjB,OAAKhoB,EAAMmD,QAGX2gB,EAAMkuB,+BAA+Bl1B,SAAS4jB,IAC1C,MAAMhrB,EAAQ1V,EAAM,GAAG0V,MACjBugB,EAAUyK,EAAK7/B,KAAK6U,GACtBugB,IAAYA,EAAQgc,MACpBjqB,EAAS9Q,KAAK,CACV+e,UACAxgB,aAAcirB,EAAKhrB,MACnBA,SAER,IAEGsS,GAbI,EAcf,EACP6a,QAAS/e,EAAOxhB,EAAG3B,EAAS6xC,GACjB,MAAMV,EAAWxa,GAAoBh1B,EAAGwhB,GAClCqe,EAAOxhC,EAAQwhC,MAAQ,KACvBrZ,EAAmBnoB,EAAQmoB,mBAAoB,EACrD,IAAI9oB,EAAQW,EAAQkoB,UAAY0pB,GAAkBzuB,EAAOguB,EAAU3P,EAAMqQ,EAAkB1pB,GAAoBuqB,GAAgBvvB,EAAOguB,EAAU3P,GAAM,EAAOqQ,EAAkB1pB,GAC/K,GAAI9oB,EAAMmD,OAAS,EAAG,CAClB,MAAMsS,EAAezV,EAAM,GAAGyV,aACxB5U,EAAOijB,EAAMiiB,eAAetwB,GAAc5U,KAChDb,EAAQ,GACR,IAAI,IAAIgE,EAAI,EAAGA,EAAInD,EAAKsC,SAAUa,EAC9BhE,EAAMkX,KAAK,CACP+e,QAASp1B,EAAKmD,GACdyR,eACAC,MAAO1R,GAGnB,CACA,OAAOhE,CACX,EACP+sB,MAAOjJ,EAAOxhB,EAAG3B,EAAS6xC,GACf,MAAMV,EAAWxa,GAAoBh1B,EAAGwhB,GAClCqe,EAAOxhC,EAAQwhC,MAAQ,KACvBrZ,EAAmBnoB,EAAQmoB,mBAAoB,EACrD,OAAOypB,GAAkBzuB,EAAOguB,EAAU3P,EAAMqQ,EAAkB1pB,EACtE,EACP6qB,QAAS7vB,EAAOxhB,EAAG3B,EAAS6xC,GACjB,MAAMV,EAAWxa,GAAoBh1B,EAAGwhB,GAClCqe,EAAOxhC,EAAQwhC,MAAQ,KACvBrZ,EAAmBnoB,EAAQmoB,mBAAoB,EACrD,OAAOuqB,GAAgBvvB,EAAOguB,EAAU3P,EAAMxhC,EAAQkoB,UAAW2pB,EAAkB1pB,EACvF,EACP1jB,EAAG0e,EAAOxhB,EAAG3B,EAAS6xC,GACX,MAAMV,EAAWxa,GAAoBh1B,EAAGwhB,GACxC,OAAOwvB,GAAaxvB,EAAOguB,EAAU,IAAKnxC,EAAQkoB,UAAW2pB,EACjE,EACP37B,EAAGiN,EAAOxhB,EAAG3B,EAAS6xC,GACX,MAAMV,EAAWxa,GAAoBh1B,EAAGwhB,GACxC,OAAOwvB,GAAaxvB,EAAOguB,EAAU,IAAKnxC,EAAQkoB,UAAW2pB,EACjE,IAIR,MAAMoB,GAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,GAAiBl6B,EAAOm4B,GAC7B,OAAOn4B,EAAM+a,QAAQ1zB,GAAIA,EAAE21B,MAAQmb,GACvC,CACA,SAASgC,GAA4Bn6B,EAAOwoB,GACxC,OAAOxoB,EAAM+a,QAAQ1zB,IAAyC,IAArC4yC,GAAiB59B,QAAQhV,EAAE21B,MAAe31B,EAAEk2B,IAAIiL,OAASA,GACtF,CACA,SAAS4R,GAAap6B,EAAOzE,GACzB,OAAOyE,EAAMP,MAAK,CAAClX,EAAGC,KAClB,MAAMoT,EAAKL,EAAU/S,EAAID,EACnBsT,EAAKN,EAAUhT,EAAIC,EACzB,OAAOoT,EAAG9C,SAAW+C,EAAG/C,OAAS8C,EAAGG,MAAQF,EAAGE,MAAQH,EAAG9C,OAAS+C,EAAG/C,MAAM,GAEpF,CACA,SAASuhC,GAAUC,GACf,MAAMC,EAAc,GACpB,IAAIlwC,EAAGsR,EAAM4hB,EAAKP,EAAKwJ,EAAOgU,EAC9B,IAAInwC,EAAI,EAAGsR,GAAQ2+B,GAAS,IAAI9wC,OAAQa,EAAIsR,IAAQtR,EAChDkzB,EAAM+c,EAAMjwC,KACT8tC,SAAUnb,EAAMh2B,SAAWw/B,QAAQgU,cAAa,IAAUjd,GAC7Dgd,EAAYh9B,KAAK,CACbxB,MAAO1R,EACPkzB,MACAP,MACAoX,WAAY7W,EAAI2W,eAChBp7B,OAAQykB,EAAIzkB,OACZ0tB,MAAOA,GAASxJ,EAAMwJ,EACtBgU,gBAGR,OAAOD,CACX,CACA,SAASE,GAAYC,GACjB,MAAMjT,EAAS,CAAC,EAChB,IAAK,MAAMkT,KAAQD,EAAQ,CACvB,MAAM,MAAElU,EAAM,IAAExJ,EAAI,YAAEwd,GAAiBG,EACvC,IAAKnU,IAAUyT,GAAiBlvB,SAASiS,GACrC,SAEJ,MAAMtD,EAAS+N,EAAOjB,KAAWiB,EAAOjB,GAAS,CAC7C6G,MAAO,EACPuN,OAAQ,EACR9hC,OAAQ,EACRkF,KAAM,IAEV0b,EAAO2T,QACP3T,EAAO5gB,QAAU0hC,CACrB,CACA,OAAO/S,CACX,CACC,SAASoT,GAAcH,EAASI,GAC7B,MAAMrT,EAASgT,GAAYC,IACrB,aAAEK,EAAa,cAAEC,GAAmBF,EAC1C,IAAIzwC,EAAGsR,EAAMs/B,EACb,IAAI5wC,EAAI,EAAGsR,EAAO++B,EAAQlxC,OAAQa,EAAIsR,IAAQtR,EAAE,CAC5C4wC,EAASP,EAAQrwC,GACjB,MAAM,SAAE6wC,GAAcD,EAAO1d,IACvBiJ,EAAQiB,EAAOwT,EAAOzU,OACtBrD,EAASqD,GAASyU,EAAOT,YAAchU,EAAM1tB,OAC/CmiC,EAAO7G,YACP6G,EAAO/uB,MAAQiX,EAASA,EAAS4X,EAAeG,GAAYJ,EAAOK,eACnEF,EAAOxpB,OAASupB,IAEhBC,EAAO/uB,MAAQ6uB,EACfE,EAAOxpB,OAAS0R,EAASA,EAAS6X,EAAgBE,GAAYJ,EAAOM,gBAE7E,CACA,OAAO3T,CACX,CACA,SAAS4T,GAAiBf,GACtB,MAAMC,EAAcF,GAAUC,GACxBY,EAAWd,GAAaG,EAAYxf,QAAQ4f,GAAOA,EAAKpd,IAAI2d,YAAW,GACvEr2B,EAAOu1B,GAAaF,GAAiBK,EAAa,SAAS,GAC3Dz1B,EAAQs1B,GAAaF,GAAiBK,EAAa,UACnDxxB,EAAMqxB,GAAaF,GAAiBK,EAAa,QAAQ,GACzDvxB,EAASoxB,GAAaF,GAAiBK,EAAa,WACpDe,EAAmBnB,GAA4BI,EAAa,KAC5DgB,EAAiBpB,GAA4BI,EAAa,KAChE,MAAO,CACHW,WACAM,WAAY32B,EAAKqtB,OAAOnpB,GACxB0yB,eAAgB32B,EAAMotB,OAAOqJ,GAAgBrJ,OAAOlpB,GAAQkpB,OAAOoJ,GACnEpM,UAAWgL,GAAiBK,EAAa,aACzCmB,SAAU72B,EAAKqtB,OAAOptB,GAAOotB,OAAOqJ,GACpCnH,WAAYrrB,EAAImpB,OAAOlpB,GAAQkpB,OAAOoJ,GAE9C,CACA,SAASK,GAAeC,EAAY1M,EAAW3mC,EAAGC,GAC9C,OAAOf,KAAKC,IAAIk0C,EAAWrzC,GAAI2mC,EAAU3mC,IAAMd,KAAKC,IAAIk0C,EAAWpzC,GAAI0mC,EAAU1mC,GACrF,CACA,SAASqzC,GAAiBD,EAAYE,GAClCF,EAAW7yB,IAAMthB,KAAKC,IAAIk0C,EAAW7yB,IAAK+yB,EAAW/yB,KACrD6yB,EAAW/2B,KAAOpd,KAAKC,IAAIk0C,EAAW/2B,KAAMi3B,EAAWj3B,MACvD+2B,EAAW5yB,OAASvhB,KAAKC,IAAIk0C,EAAW5yB,OAAQ8yB,EAAW9yB,QAC3D4yB,EAAW92B,MAAQrd,KAAKC,IAAIk0C,EAAW92B,MAAOg3B,EAAWh3B,MAC7D,CACA,SAASi3B,GAAW7M,EAAW4L,EAAQG,EAAQxT,GAC3C,MAAM,IAAEzK,EAAI,IAAEO,GAAS0d,EACjBW,EAAa1M,EAAU0M,WAC7B,IAAKvhC,GAAS2iB,GAAM,CACZie,EAAOj9B,OACPkxB,EAAUlS,IAAQie,EAAOj9B,MAE7B,MAAMwoB,EAAQiB,EAAOwT,EAAOzU,QAAU,CAClCxoB,KAAM,EACNqvB,MAAO,GAEX7G,EAAMxoB,KAAOvW,KAAKC,IAAI8+B,EAAMxoB,KAAMi9B,EAAO7G,WAAa7W,EAAI9L,OAAS8L,EAAIrR,OACvE+uB,EAAOj9B,KAAOwoB,EAAMxoB,KAAOwoB,EAAM6G,MACjC6B,EAAUlS,IAAQie,EAAOj9B,IAC7B,CACIuf,EAAIye,YACJH,GAAiBD,EAAYre,EAAIye,cAErC,MAAMC,EAAWx0C,KAAKC,IAAI,EAAGozC,EAAOoB,WAAaP,GAAeC,EAAY1M,EAAW,OAAQ,UACzFiN,EAAY10C,KAAKC,IAAI,EAAGozC,EAAOsB,YAAcT,GAAeC,EAAY1M,EAAW,MAAO,WAC1FmN,EAAeJ,IAAa/M,EAAU/kC,EACtCmyC,EAAgBH,IAAcjN,EAAU1nC,EAG9C,OAFA0nC,EAAU/kC,EAAI8xC,EACd/M,EAAU1nC,EAAI20C,EACPlB,EAAO7G,WAAa,CACvBmI,KAAMF,EACNG,MAAOF,GACP,CACAC,KAAMD,EACNE,MAAOH,EAEf,CACA,SAASI,GAAiBvN,GACtB,MAAM0M,EAAa1M,EAAU0M,WAC7B,SAASc,EAAU1f,GACf,MAAM5F,EAAS3vB,KAAKC,IAAIk0C,EAAW5e,GAAOkS,EAAUlS,GAAM,GAE1D,OADAkS,EAAUlS,IAAQ5F,EACXA,CACX,CACA8X,EAAUhyB,GAAKw/B,EAAU,OACzBxN,EAAUzjC,GAAKixC,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CACA,SAASC,GAAWvI,EAAYlF,GAC5B,MAAM0M,EAAa1M,EAAU0M,WAC7B,SAASgB,EAAmBhgB,GACxB,MAAMtJ,EAAS,CACXzO,KAAM,EACNkE,IAAK,EACLjE,MAAO,EACPkE,OAAQ,GAKZ,OAHA4T,EAAUzZ,SAAS6Z,IACf1J,EAAO0J,GAAOv1B,KAAKC,IAAIwnC,EAAUlS,GAAM4e,EAAW5e,GAAK,IAEpD1J,CACX,CACA,OAAoBspB,EAAbxI,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAASyI,GAASvC,EAAOpL,EAAW4L,EAAQrT,GACxC,MAAMqV,EAAa,GACnB,IAAIzyC,EAAGsR,EAAMs/B,EAAQ1d,EAAKwf,EAAOC,EACjC,IAAI3yC,EAAI,EAAGsR,EAAO2+B,EAAM9wC,OAAQuzC,EAAQ,EAAG1yC,EAAIsR,IAAQtR,EAAE,CACrD4wC,EAASX,EAAMjwC,GACfkzB,EAAM0d,EAAO1d,IACbA,EAAI2G,OAAO+W,EAAO/uB,OAASgjB,EAAU/kC,EAAG8wC,EAAOxpB,QAAUyd,EAAU1nC,EAAGm1C,GAAW1B,EAAO7G,WAAYlF,IACpG,MAAM,KAAEqN,EAAK,MAAEC,GAAWT,GAAW7M,EAAW4L,EAAQG,EAAQxT,GAChEsV,GAASR,GAAQO,EAAWtzC,OAC5BwzC,EAAUA,GAAWR,EAChBjf,EAAI2d,UACL4B,EAAWv/B,KAAK09B,EAExB,CACA,OAAO8B,GAASF,GAASC,EAAY5N,EAAW4L,EAAQrT,IAAWuV,CACvE,CACA,SAASC,GAAW1f,EAAK1Y,EAAMkE,EAAKmD,EAAOuF,GACvC8L,EAAIxU,IAAMA,EACVwU,EAAI1Y,KAAOA,EACX0Y,EAAIzY,MAAQD,EAAOqH,EACnBqR,EAAIvU,OAASD,EAAM0I,EACnB8L,EAAIrR,MAAQA,EACZqR,EAAI9L,OAASA,CACjB,CACA,SAASyrB,GAAW5C,EAAOpL,EAAW4L,EAAQrT,GAC1C,MAAM0V,EAAcrC,EAAOhyB,QAC3B,IAAI,EAAErd,EAAE,EAAEyR,GAAOgyB,EACjB,IAAK,MAAM+L,KAAUX,EAAM,CACvB,MAAM/c,EAAM0d,EAAO1d,IACbiJ,EAAQiB,EAAOwT,EAAOzU,QAAU,CAClC6G,MAAO,EACPuN,OAAQ,EACR9hC,OAAQ,GAENA,EAASmiC,EAAOT,YAAchU,EAAM1tB,QAAU,EACpD,GAAImiC,EAAO7G,WAAY,CACnB,MAAMloB,EAAQgjB,EAAU/kC,EAAI2O,EACtB2Y,EAAS+U,EAAMxoB,MAAQuf,EAAI9L,OAC7B5T,GAAQ2oB,EAAMnlB,SACdnE,EAAIspB,EAAMnlB,OAEVkc,EAAI2d,SACJ+B,GAAW1f,EAAK4f,EAAYt4B,KAAM3H,EAAG49B,EAAOoB,WAAaiB,EAAYr4B,MAAQq4B,EAAYt4B,KAAM4M,GAE/FwrB,GAAW1f,EAAK2R,EAAUrqB,KAAO2hB,EAAMoU,OAAQ19B,EAAGgP,EAAOuF,GAE7D+U,EAAMnlB,MAAQnE,EACdspB,EAAMoU,QAAU1uB,EAChBhP,EAAIqgB,EAAIvU,MACZ,KAAO,CACH,MAAMyI,EAASyd,EAAU1nC,EAAIsR,EACvBoT,EAAQsa,EAAMxoB,MAAQuf,EAAIrR,MAC5BrO,GAAQ2oB,EAAMnlB,SACd5V,EAAI+6B,EAAMnlB,OAEVkc,EAAI2d,SACJ+B,GAAW1f,EAAK9xB,EAAG0xC,EAAYp0B,IAAKmD,EAAO4uB,EAAOsB,YAAce,EAAYn0B,OAASm0B,EAAYp0B,KAEjGk0B,GAAW1f,EAAK9xB,EAAGyjC,EAAUnmB,IAAMyd,EAAMoU,OAAQ1uB,EAAOuF,GAE5D+U,EAAMnlB,MAAQ5V,EACd+6B,EAAMoU,QAAUnpB,EAChBhmB,EAAI8xB,EAAIzY,KACZ,CACJ,CACAoqB,EAAUzjC,EAAIA,EACdyjC,EAAUhyB,EAAIA,CAClB,CACA,IAAIw9B,GAAU,CACb0C,OAAQjzB,EAAO7jB,GACH6jB,EAAMmwB,QACPnwB,EAAMmwB,MAAQ,IAElBh0C,EAAK40C,SAAW50C,EAAK40C,WAAY,EACjC50C,EAAK6xC,SAAW7xC,EAAK6xC,UAAY,MACjC7xC,EAAKwS,OAASxS,EAAKwS,QAAU,EAC7BxS,EAAK+2C,QAAU/2C,EAAK+2C,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACHvb,KAAMmN,GACF5oC,EAAKy7B,KAAKmN,EACd,GAGZ,EACA/kB,EAAMmwB,MAAM/8B,KAAKjX,EACrB,EACHi3C,UAAWpzB,EAAOqzB,GACX,MAAMzhC,EAAQoO,EAAMmwB,MAAQnwB,EAAMmwB,MAAMj+B,QAAQmhC,IAAe,GAChD,IAAXzhC,GACAoO,EAAMmwB,MAAM52B,OAAO3H,EAAO,EAElC,EACH8oB,UAAW1a,EAAO7jB,EAAMU,GACjBV,EAAK40C,SAAWl0C,EAAQk0C,SACxB50C,EAAK6xC,SAAWnxC,EAAQmxC,SACxB7xC,EAAKwS,OAAS9R,EAAQ8R,MAC1B,EACHorB,OAAQ/Z,EAAO+B,EAAOuF,EAAQgsB,GACvB,IAAKtzB,EACD,OAEJ,MAAMrB,EAAU2N,GAAUtM,EAAMnjB,QAAQi0C,OAAOnyB,SACzCqyB,EAAiB1zC,KAAKC,IAAIwkB,EAAQpD,EAAQoD,MAAO,GACjDkvB,EAAkB3zC,KAAKC,IAAI+pB,EAAS3I,EAAQ2I,OAAQ,GACpD6oB,EAAQe,GAAiBlxB,EAAMmwB,OAC/BoD,EAAgBpD,EAAMoB,SACtBiC,EAAkBrD,EAAMlG,WAC9B/4B,GAAK8O,EAAMmwB,OAAQ/c,IACiB,oBAArBA,EAAIqgB,cACXrgB,EAAIqgB,cACR,IAEJ,MAAMC,EAA0BH,EAAcjb,QAAO,CAACqb,EAAOnD,IAAOA,EAAKpd,IAAIv2B,UAAwC,IAA7B2zC,EAAKpd,IAAIv2B,QAAQkkB,QAAoB4yB,EAAQA,EAAQ,GAAG,IAAM,EAChJhD,EAASxkC,OAAOo5B,OAAO,CACzBwM,WAAYhwB,EACZkwB,YAAa3qB,EACb3I,UACAqyB,iBACAC,kBACAL,aAAcI,EAAiB,EAAI0C,EACnC7C,cAAeI,EAAkB,IAE/BQ,EAAatlC,OAAOyB,OAAO,CAAC,EAAG+Q,GACrC+yB,GAAiBD,EAAYnlB,GAAUgnB,IACvC,MAAMvO,EAAY54B,OAAOyB,OAAO,CAC5B6jC,aACAzxC,EAAGgxC,EACH3zC,EAAG4zC,EACH3vC,EAAGqd,EAAQjE,KACX3H,EAAG4L,EAAQC,KACZD,GACG2e,EAASoT,GAAc6C,EAAcxL,OAAOyL,GAAkB7C,GACpE+B,GAASvC,EAAMY,SAAUhM,EAAW4L,EAAQrT,GAC5CoV,GAASa,EAAexO,EAAW4L,EAAQrT,GACvCoV,GAASc,EAAiBzO,EAAW4L,EAAQrT,IAC7CoV,GAASa,EAAexO,EAAW4L,EAAQrT,GAE/CgV,GAAiBvN,GACjBgO,GAAW5C,EAAMkB,WAAYtM,EAAW4L,EAAQrT,GAChDyH,EAAUzjC,GAAKyjC,EAAU/kC,EACzB+kC,EAAUhyB,GAAKgyB,EAAU1nC,EACzB01C,GAAW5C,EAAMmB,eAAgBvM,EAAW4L,EAAQrT,GACpDtd,EAAM+kB,UAAY,CACdrqB,KAAMqqB,EAAUrqB,KAChBkE,IAAKmmB,EAAUnmB,IACfjE,MAAOoqB,EAAUrqB,KAAOqqB,EAAU/kC,EAClC6e,OAAQkmB,EAAUnmB,IAAMmmB,EAAU1nC,EAClCiqB,OAAQyd,EAAU1nC,EAClB0kB,MAAOgjB,EAAU/kC,GAErBkR,GAAKi/B,EAAMpL,WAAY+L,IACnB,MAAM1d,EAAM0d,EAAO1d,IACnBjnB,OAAOyB,OAAOwlB,EAAKpT,EAAM+kB,WACzB3R,EAAI2G,OAAOgL,EAAU/kC,EAAG+kC,EAAU1nC,EAAG,CACjCqd,KAAM,EACNkE,IAAK,EACLjE,MAAO,EACPkE,OAAQ,GACV,GAEV,GAGJ,MAAM+0B,GACLC,eAAe5sB,EAAQyN,GAAc,CACrCof,eAAe/vB,GACR,OAAO,CACX,CACHyR,iBAAiBxV,EAAO7R,EAAMuK,GAAW,CACzC+c,oBAAoBzV,EAAO7R,EAAMuK,GAAW,CAC5CuL,sBACO,OAAO,CACX,CACHsQ,eAAepC,EAASpQ,EAAOuF,EAAQoN,GAGhC,OAFA3S,EAAQzkB,KAAKC,IAAI,EAAGwkB,GAASoQ,EAAQpQ,OACrCuF,EAASA,GAAU6K,EAAQ7K,OACpB,CACHvF,QACAuF,OAAQhqB,KAAKC,IAAI,EAAGm3B,EAAcp3B,KAAK0X,MAAM+M,EAAQ2S,GAAepN,GAE5E,CACHysB,WAAW9sB,GACJ,OAAO,CACX,CACH+sB,aAAazZ,GACV,EAGJ,MAAM0Z,WAAsBL,GACxBC,eAAe13C,GACX,OAAOA,GAAQA,EAAK+qB,YAAc/qB,EAAK+qB,WAAW,OAAS,IAC/D,CACA8sB,aAAazZ,GACTA,EAAO19B,QAAQshB,WAAY,CAC/B,EAGJ,MAAM+1B,GAAc,WACbC,GAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEVC,GAAiBhlC,GAAkB,OAAVA,GAA4B,KAAVA,EAChD,SAASilC,GAAW7tB,EAAQyN,GACzB,MAAMx6B,EAAQ+sB,EAAO/sB,MACf66C,EAAe9tB,EAAO+tB,aAAa,UACnCC,EAAchuB,EAAO+tB,aAAa,SAcxC,GAbA/tB,EAAOitB,IAAe,CAClB9c,QAAS,CACL9P,OAAQytB,EACRhzB,MAAOkzB,EACP/6C,MAAO,CACH6mB,QAAS7mB,EAAM6mB,QACfuG,OAAQptB,EAAMotB,OACdvF,MAAO7nB,EAAM6nB,SAIzB7nB,EAAM6mB,QAAU7mB,EAAM6mB,SAAW,QACjC7mB,EAAMy5B,UAAYz5B,EAAMy5B,WAAa,aACjCkhB,GAAcI,GAAc,CAC5B,MAAMC,EAAexf,GAAazO,EAAQ,cACrBznB,IAAjB01C,IACAjuB,EAAOlF,MAAQmzB,EAEvB,CACA,GAAIL,GAAcE,GACd,GAA4B,KAAxB9tB,EAAO/sB,MAAMotB,OACbL,EAAOK,OAASL,EAAOlF,OAAS2S,GAAe,OAC5C,CACH,MAAMygB,EAAgBzf,GAAazO,EAAQ,eACrBznB,IAAlB21C,IACAluB,EAAOK,OAAS6tB,EAExB,CAEJ,OAAOluB,CACX,CACA,MAAMmuB,KAAuB/f,IAA+B,CACxDE,SAAS,GAEb,SAAS8f,GAAYhyB,EAAMlV,EAAMuK,GAC7B2K,EAAKmS,iBAAiBrnB,EAAMuK,EAAU08B,GAC1C,CACA,SAASE,GAAet1B,EAAO7R,EAAMuK,GACjCsH,EAAMiH,OAAOwO,oBAAoBtnB,EAAMuK,EAAU08B,GACrD,CACA,SAASG,GAAgB9hB,EAAOzT,GAC5B,MAAM7R,EAAOgmC,GAAY1gB,EAAMtlB,OAASslB,EAAMtlB,MACxC,EAAE7M,EAAE,EAAEyR,GAAOygB,GAAoBC,EAAOzT,GAC9C,MAAO,CACH7R,OACA6R,QACAw1B,OAAQ/hB,EACRnyB,OAAS9B,IAAN8B,EAAkBA,EAAI,KACzByR,OAASvT,IAANuT,EAAkBA,EAAI,KAEjC,CACA,SAAS0iC,GAAiBC,EAAUzuB,GAChC,IAAK,MAAM5D,KAAQqyB,EACf,GAAIryB,IAAS4D,GAAU5D,EAAKsyB,SAAS1uB,GACjC,OAAO,CAGnB,CACA,SAAS2uB,GAAqB51B,EAAO7R,EAAMuK,GACvC,MAAMuO,EAASjH,EAAMiH,OACf4uB,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAM7M,KAAS4M,EAChBC,EAAUA,GAAWP,GAAiBtM,EAAM8M,WAAYhvB,GACxD+uB,EAAUA,IAAYP,GAAiBtM,EAAM+M,aAAcjvB,GAE3D+uB,GACAt9B,GACJ,IAMJ,OAJAm9B,EAASM,QAAQ1kB,SAAU,CACvB2kB,WAAW,EACXC,SAAS,IAENR,CACX,CACA,SAASS,GAAqBt2B,EAAO7R,EAAMuK,GACvC,MAAMuO,EAASjH,EAAMiH,OACf4uB,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAM7M,KAAS4M,EAChBC,EAAUA,GAAWP,GAAiBtM,EAAM+M,aAAcjvB,GAC1D+uB,EAAUA,IAAYP,GAAiBtM,EAAM8M,WAAYhvB,GAEzD+uB,GACAt9B,GACJ,IAMJ,OAJAm9B,EAASM,QAAQ1kB,SAAU,CACvB2kB,WAAW,EACXC,SAAS,IAENR,CACX,CACA,MAAMU,GAAqB,IAAIx3B,IAC/B,IAAIy3B,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAM98B,OAAOkK,iBACf4yB,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBv9B,SAAQ,CAACoF,EAAQ4B,KAC5BA,EAAM8G,0BAA4B4vB,GAClCt4B,GACJ,IAER,CACA,SAASu4B,GAA8B32B,EAAO5B,GACrCm4B,GAAmB1iC,MACpB+F,OAAO4b,iBAAiB,SAAUihB,IAEtCF,GAAmB98B,IAAIuG,EAAO5B,EAClC,CACA,SAASw4B,GAAgC52B,GACrCu2B,GAAmB9lB,OAAOzQ,GACrBu2B,GAAmB1iC,MACpB+F,OAAO6b,oBAAoB,SAAUghB,GAE7C,CACA,SAASI,GAAqB72B,EAAO7R,EAAMuK,GACvC,MAAMuO,EAASjH,EAAMiH,OACf+M,EAAY/M,GAAUyK,GAAezK,GAC3C,IAAK+M,EACD,OAEJ,MAAM5V,EAAStE,IAAU,CAACiI,EAAOuF,KAC7B,MAAMtnB,EAAIg0B,EAAUI,YACpB1b,EAASqJ,EAAOuF,GACZtnB,EAAIg0B,EAAUI,aACd1b,GACJ,GACDkB,QACGi8B,EAAW,IAAIiB,gBAAgBf,IACjC,MAAM5M,EAAQ4M,EAAQ,GAChBh0B,EAAQonB,EAAM4N,YAAYh1B,MAC1BuF,EAAS6hB,EAAM4N,YAAYzvB,OACnB,IAAVvF,GAA0B,IAAXuF,GAGnBlJ,EAAO2D,EAAOuF,EAAO,IAIzB,OAFAuuB,EAASM,QAAQniB,GACjB2iB,GAA8B32B,EAAO5B,GAC9By3B,CACX,CACA,SAASmB,GAAgBh3B,EAAO7R,EAAM0nC,GAC9BA,GACAA,EAASoB,aAEA,WAAT9oC,GACAyoC,GAAgC52B,EAExC,CACA,SAASk3B,GAAqBl3B,EAAO7R,EAAMuK,GACvC,MAAMuO,EAASjH,EAAMiH,OACfgI,EAAQnV,IAAW2Z,IACH,OAAdzT,EAAMyE,KACN/L,EAAS68B,GAAgB9hB,EAAOzT,GACpC,GACDA,GAEH,OADAq1B,GAAYpuB,EAAQ9Y,EAAM8gB,GACnBA,CACX,CACC,MAAMkoB,WAAoBvD,GAC1BC,eAAe5sB,EAAQyN,GAChB,MAAM3Q,EAAUkD,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MACjE,OAAInD,GAAWA,EAAQkD,SAAWA,GAC9B6tB,GAAW7tB,EAAQyN,GACZ3Q,GAEJ,IACX,CACH+vB,eAAe/vB,GACR,MAAMkD,EAASlD,EAAQkD,OACvB,IAAKA,EAAOitB,IACR,OAAO,EAEX,MAAM9c,EAAUnQ,EAAOitB,IAAa9c,QACpC,CACI,SACA,SACFpe,SAASmT,IACP,MAAMtc,EAAQunB,EAAQjL,GAClBvc,GAAcC,GACdoX,EAAOmwB,gBAAgBjrB,GAEvBlF,EAAOowB,aAAalrB,EAAMtc,EAC9B,IAEJ,MAAM3V,EAAQk9B,EAAQl9B,OAAS,CAAC,EAMhC,OALAiS,OAAOD,KAAKhS,GAAO8e,SAAS5c,IACxB6qB,EAAO/sB,MAAMkC,GAAOlC,EAAMkC,EAAI,IAElC6qB,EAAOlF,MAAQkF,EAAOlF,aACfkF,EAAOitB,KACP,CACX,CACH1e,iBAAiBxV,EAAO7R,EAAMuK,GACvBtK,KAAKqnB,oBAAoBzV,EAAO7R,GAChC,MAAMmpC,EAAUt3B,EAAMu3B,WAAav3B,EAAMu3B,SAAW,CAAC,GAC/CC,EAAW,CACbC,OAAQ7B,GACR8B,OAAQpB,GACRl4B,OAAQy4B,IAEN5I,EAAUuJ,EAASrpC,IAAS+oC,GAClCI,EAAQnpC,GAAQ8/B,EAAQjuB,EAAO7R,EAAMuK,EACzC,CACH+c,oBAAoBzV,EAAO7R,GACpB,MAAMmpC,EAAUt3B,EAAMu3B,WAAav3B,EAAMu3B,SAAW,CAAC,GAC/CtoB,EAAQqoB,EAAQnpC,GACtB,IAAK8gB,EACD,OAEJ,MAAMuoB,EAAW,CACbC,OAAQT,GACRU,OAAQV,GACR54B,OAAQ44B,IAEN/I,EAAUuJ,EAASrpC,IAASmnC,GAClCrH,EAAQjuB,EAAO7R,EAAM8gB,GACrBqoB,EAAQnpC,QAAQ3O,CACpB,CACAykB,sBACI,OAAOrK,OAAOkK,gBAClB,CACHyQ,eAAetN,EAAQlF,EAAOuF,EAAQoN,GAC/B,OAAOH,GAAetN,EAAQlF,EAAOuF,EAAQoN,EACjD,CACHqf,WAAW9sB,GACJ,MAAM+M,EAAYtC,GAAezK,GACjC,SAAU+M,IAAaA,EAAU2jB,YACrC,EAGJ,SAASC,GAAgB3wB,GACrB,OAAKuK,MAAgD,qBAApBqmB,iBAAmC5wB,aAAkB4wB,gBAC3E5D,GAEJkD,EACX,CAEA,MAAMW,GACFhY,gBAAkB,CAAC,EACnBA,0BAAuBtgC,EACvB8B,EACAyR,EACAmL,QAAS,EACTrhB,QACAw+B,YACA0c,gBAAgBrJ,GACZ,MAAM,EAAEptC,EAAE,EAAEyR,GAAO3E,KAAK6gC,SAAS,CAC7B,IACA,KACDP,GACH,MAAO,CACHptC,IACAyR,IAER,CACAilC,WACI,OAAOxiC,GAASpH,KAAK9M,IAAMkU,GAASpH,KAAK2E,EAC7C,CACAk8B,SAASjjB,EAAOisB,GACZ,MAAMhhB,EAAQ7oB,KAAKitB,YACnB,IAAK4c,IAAUhhB,EAEX,OAAO7oB,KAEX,MAAMjP,EAAM,CAAC,EAIb,OAHA6sB,EAAMhT,SAASmT,IACXhtB,EAAIgtB,GAAQ8K,EAAM9K,IAAS8K,EAAM9K,GAAMjO,SAAW+Y,EAAM9K,GAAM0N,IAAMzrB,KAAK+d,EAAK,IAE3EhtB,CACX,EAGJ,SAASojB,GAASgD,EAAOxF,GACrB,MAAMm4B,EAAW3yB,EAAM1oB,QAAQkjB,MACzBo4B,EAAqBC,GAAkB7yB,GACvC8yB,EAAa/6C,KAAKE,IAAI06C,EAASI,eAAiBH,EAAoBA,GACpEI,EAAeL,EAASv1B,MAAM61B,QAAUC,GAAgB14B,GAAS,GACjE24B,EAAkBH,EAAal5C,OAC/Bs5C,EAAQJ,EAAa,GACrBpgC,EAAOogC,EAAaG,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBL,EAElB,OADAQ,GAAW94B,EAAO64B,EAAUL,EAAcG,EAAkBL,GACrDO,EAEX,MAAME,EAAUC,GAAiBR,EAAcx4B,EAAOs4B,GACtD,GAAIK,EAAkB,EAAG,CACrB,IAAIx4C,EAAGsR,EACP,MAAMwnC,EAAkBN,EAAkB,EAAIp7C,KAAKL,OAAOkb,EAAOwgC,IAAUD,EAAkB,IAAM,KAEnG,IADAvK,GAAKpuB,EAAO64B,EAAUE,EAASlpC,GAAcopC,GAAmB,EAAIL,EAAQK,EAAiBL,GACzFz4C,EAAI,EAAGsR,EAAOknC,EAAkB,EAAGx4C,EAAIsR,EAAMtR,IAC7CiuC,GAAKpuB,EAAO64B,EAAUE,EAASP,EAAar4C,GAAIq4C,EAAar4C,EAAI,IAGrE,OADAiuC,GAAKpuB,EAAO64B,EAAUE,EAAS3gC,EAAMvI,GAAcopC,GAAmBj5B,EAAM1gB,OAAS8Y,EAAO6gC,GACrFJ,CACX,CAEA,OADAzK,GAAKpuB,EAAO64B,EAAUE,GACfF,CACX,CACA,SAASR,GAAkB7yB,GACvB,MAAMvE,EAASuE,EAAM1oB,QAAQmkB,OACvBQ,EAAa+D,EAAM0zB,YACnBC,EAAW3zB,EAAM2iB,QAAU1mB,GAAcR,EAAS,EAAI,GACtDm4B,EAAW5zB,EAAM6zB,WAAa53B,EACpC,OAAOlkB,KAAK0X,MAAM1X,KAAKE,IAAI07C,EAAUC,GACzC,CACC,SAASJ,GAAiBR,EAAcx4B,EAAOs4B,GAC5C,MAAMgB,EAAmBC,GAAef,GAClCO,EAAU/4B,EAAM1gB,OAASg5C,EAC/B,IAAKgB,EACD,OAAO/7C,KAAKC,IAAIu7C,EAAS,GAE7B,MAAMS,EAAUpkC,GAAWkkC,GAC3B,IAAI,IAAIn5C,EAAI,EAAGsR,EAAO+nC,EAAQl6C,OAAS,EAAGa,EAAIsR,EAAMtR,IAAI,CACpD,MAAM84B,EAASugB,EAAQr5C,GACvB,GAAI84B,EAAS8f,EACT,OAAO9f,CAEf,CACA,OAAO17B,KAAKC,IAAIu7C,EAAS,EAC7B,CACC,SAASL,GAAgB14B,GACtB,MAAM3K,EAAS,GACf,IAAIlV,EAAGsR,EACP,IAAItR,EAAI,EAAGsR,EAAOuO,EAAM1gB,OAAQa,EAAIsR,EAAMtR,IAClC6f,EAAM7f,GAAGyiB,OACTvN,EAAOhC,KAAKlT,GAGpB,OAAOkV,CACX,CACC,SAASyjC,GAAW94B,EAAO64B,EAAUL,EAAcO,GAChD,IAEI54C,EAFAgjC,EAAQ,EACR8F,EAAOuP,EAAa,GAGxB,IADAO,EAAUx7C,KAAKk8C,KAAKV,GAChB54C,EAAI,EAAGA,EAAI6f,EAAM1gB,OAAQa,IACrBA,IAAM8oC,IACN4P,EAASxlC,KAAK2M,EAAM7f,IACpBgjC,IACA8F,EAAOuP,EAAarV,EAAQ4V,GAGxC,CACC,SAAS3K,GAAKpuB,EAAO64B,EAAUE,EAASW,EAAYC,GACjD,MAAMxiC,EAAQ1G,GAAeipC,EAAY,GACnCtiC,EAAM7Z,KAAKE,IAAIgT,GAAekpC,EAAU35B,EAAM1gB,QAAS0gB,EAAM1gB,QACnE,IACIA,EAAQa,EAAG8oC,EADX9F,EAAQ,EAEZ4V,EAAUx7C,KAAKk8C,KAAKV,GAChBY,IACAr6C,EAASq6C,EAAWD,EACpBX,EAAUz5C,EAAS/B,KAAK0X,MAAM3V,EAASy5C,IAE3C9P,EAAO9xB,EACP,MAAM8xB,EAAO,EACT9F,IACA8F,EAAO1rC,KAAKL,MAAMia,EAAQgsB,EAAQ4V,GAEtC,IAAI54C,EAAI5C,KAAKC,IAAI2Z,EAAO,GAAIhX,EAAIiX,EAAKjX,IAC7BA,IAAM8oC,IACN4P,EAASxlC,KAAK2M,EAAM7f,IACpBgjC,IACA8F,EAAO1rC,KAAKL,MAAMia,EAAQgsB,EAAQ4V,GAG9C,CACC,SAASQ,GAAe3oB,GACrB,MAAMvxB,EAAMuxB,EAAItxB,OAChB,IAAIa,EAAGmtC,EACP,GAAIjuC,EAAM,EACN,OAAO,EAEX,IAAIiuC,EAAO1c,EAAI,GAAIzwB,EAAI,EAAGA,EAAId,IAAOc,EACjC,GAAIywB,EAAIzwB,GAAKywB,EAAIzwB,EAAI,KAAOmtC,EACxB,OAAO,EAGf,OAAOA,CACX,CAEA,MAAMsM,GAAgBp/B,GAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAClFq/B,GAAiB,CAACr0B,EAAO4kB,EAAMnpB,IAAkB,QAATmpB,GAA2B,SAATA,EAAkB5kB,EAAM4kB,GAAQnpB,EAASuE,EAAM4kB,GAAQnpB,EACjH64B,GAAgB,CAACC,EAAaxB,IAAgBh7C,KAAKE,IAAI86C,GAAiBwB,EAAaA,GAC1F,SAASC,GAAOppB,EAAKqpB,GAClB,MAAM5kC,EAAS,GACT6kC,EAAYtpB,EAAItxB,OAAS26C,EACzB56C,EAAMuxB,EAAItxB,OAChB,IAAIa,EAAI,EACR,KAAMA,EAAId,EAAKc,GAAK+5C,EAChB7kC,EAAOhC,KAAKud,EAAIrzB,KAAK0X,MAAM9U,KAE/B,OAAOkV,CACX,CACC,SAAS8kC,GAAoB30B,EAAO3T,EAAOuoC,GACxC,MAAM96C,EAASkmB,EAAMxF,MAAM1gB,OACrB+6C,EAAa98C,KAAKE,IAAIoU,EAAOvS,EAAS,GACtC6X,EAAQqO,EAAM0mB,YACd90B,EAAMoO,EAAM2mB,UACZv3B,EAAU,KAChB,IACIqM,EADAq5B,EAAY90B,EAAM8iB,gBAAgB+R,GAEtC,KAAID,IAEIn5B,EADW,IAAX3hB,EACS/B,KAAKC,IAAI88C,EAAYnjC,EAAOC,EAAMkjC,GAC1B,IAAVzoC,GACG2T,EAAM8iB,gBAAgB,GAAKgS,GAAa,GAExCA,EAAY90B,EAAM8iB,gBAAgB+R,EAAa,IAAM,EAEnEC,GAAaD,EAAaxoC,EAAQoP,GAAUA,EACxCq5B,EAAYnjC,EAAQvC,GAAW0lC,EAAYljC,EAAMxC,IAIzD,OAAO0lC,CACX,CACC,SAASC,GAAeC,EAAQl7C,GAC7B6R,GAAKqpC,GAAS1sB,IACV,MAAMtH,EAAKsH,EAAMtH,GACXi0B,EAAQj0B,EAAGlnB,OAAS,EAC1B,IAAIa,EACJ,GAAIs6C,EAAQn7C,EAAQ,CAChB,IAAIa,EAAI,EAAGA,EAAIs6C,IAASt6C,SACb2tB,EAAM9wB,KAAKwpB,EAAGrmB,IAEzBqmB,EAAGhN,OAAO,EAAGihC,EACjB,IAER,CACC,SAASC,GAAkB59C,GACxB,OAAOA,EAAQ0kB,UAAY1kB,EAAQ2kB,WAAa,CACpD,CACC,SAASk5B,GAAe79C,EAAS2vB,GAC9B,IAAK3vB,EAAQkkB,QACT,OAAO,EAEX,MAAMqD,EAAOmI,GAAO1vB,EAAQunB,KAAMoI,GAC5B7N,EAAU2N,GAAUzvB,EAAQ8hB,SAC5BkM,EAAQrqB,GAAQ3D,EAAQolB,MAAQplB,EAAQolB,KAAK5iB,OAAS,EAC5D,OAAOwrB,EAAQzG,EAAKE,WAAa3F,EAAQ2I,MAC7C,CACA,SAASqzB,GAAmB5pB,EAAQxL,GAChC,OAAO6H,GAAc2D,EAAQ,CACzBxL,QACApX,KAAM,SAEd,CACA,SAASysC,GAAkB7pB,EAAQnf,EAAOmmB,GACtC,OAAO3K,GAAc2D,EAAQ,CACzBgH,OACAnmB,QACAzD,KAAM,QAEd,CACA,SAAS0sC,GAAWtgC,EAAOyzB,EAAU58B,GAChC,IAAIjS,EAAMmb,GAAmBC,GAI9B,OAHInJ,GAAwB,UAAb48B,IAAyB58B,GAAwB,UAAb48B,KAC/C7uC,EAAMw6C,GAAax6C,IAEhBA,CACX,CACA,SAAS27C,GAAUv1B,EAAOvE,EAAQgtB,EAAUzzB,GACxC,MAAM,IAAEqE,EAAI,KAAElE,EAAK,OAAEmE,EAAO,MAAElE,EAAM,MAAEqF,GAAWuF,GAC3C,UAAEwf,EAAU,OAAEvf,GAAYxF,EAChC,IACIkL,EAAU6vB,EAAQC,EADlBhzB,EAAW,EAEf,MAAMV,EAASzI,EAASD,EAClBmD,EAAQpH,EAAQD,EACtB,GAAI6K,EAAMwkB,eAAgB,CAEtB,GADAgR,EAASvgC,GAAeD,EAAOG,EAAMC,GACjCzK,GAAS89B,GAAW,CACpB,MAAMiN,EAAiB9uC,OAAOD,KAAK8hC,GAAU,GACvCn+B,EAAQm+B,EAASiN,GACvBD,EAASx1B,EAAOy1B,GAAgB7S,iBAAiBv4B,GAASyX,EAAStG,CACvE,MACIg6B,EADoB,WAAbhN,GACGjJ,EAAUlmB,OAASkmB,EAAUnmB,KAAO,EAAI0I,EAAStG,EAElD44B,GAAer0B,EAAOyoB,EAAUhtB,GAE7CkK,EAAWvQ,EAAQD,CACvB,KAAO,CACH,GAAIxK,GAAS89B,GAAW,CACpB,MAAMiN,EAAiB9uC,OAAOD,KAAK8hC,GAAU,GACvCn+B,EAAQm+B,EAASiN,GACvBF,EAASv1B,EAAOy1B,GAAgB7S,iBAAiBv4B,GAASkS,EAAQf,CACtE,MACI+5B,EADoB,WAAb/M,GACGjJ,EAAUrqB,KAAOqqB,EAAUpqB,OAAS,EAAIoH,EAAQf,EAEjD44B,GAAer0B,EAAOyoB,EAAUhtB,GAE7Cg6B,EAASxgC,GAAeD,EAAOsE,EAAQD,GACvCoJ,EAAwB,SAAbgmB,GAAuB35B,GAAUA,EAChD,CACA,MAAO,CACH0mC,SACAC,SACA9vB,WACAlD,WAER,CACA,MAAMkzB,WAAcpD,GAChB5pC,YAAYkrB,GACR+R,QACC/8B,KAAKxR,GAAKw8B,EAAIx8B,GACdwR,KAAKD,KAAOirB,EAAIjrB,KAChBC,KAAKvR,aAAU2C,EACf4O,KAAKqW,IAAM2U,EAAI3U,IACfrW,KAAK4R,MAAQoZ,EAAIpZ,MACjB5R,KAAKwQ,SAAMpf,EACX4O,KAAKyQ,YAASrf,EACd4O,KAAKsM,UAAOlb,EACZ4O,KAAKuM,WAAQnb,EACb4O,KAAK2T,WAAQviB,EACb4O,KAAKkZ,YAAS9nB,EACf4O,KAAK+sC,SAAW,CACZzgC,KAAM,EACNC,MAAO,EACPiE,IAAK,EACLC,OAAQ,GAEXzQ,KAAK8c,cAAW1rB,EAChB4O,KAAK2lB,eAAYv0B,EACjB4O,KAAKgtC,gBAAa57C,EAClB4O,KAAKitC,mBAAgB77C,EACrB4O,KAAKktC,iBAAc97C,EACnB4O,KAAKmtC,kBAAe/7C,EACpB4O,KAAKiwB,UAAO7+B,EACZ4O,KAAKotC,mBAAgBh8C,EACtB4O,KAAK5Q,SAAMgC,EACX4O,KAAK7Q,SAAMiC,EACX4O,KAAKqtC,YAASj8C,EACb4O,KAAK2R,MAAQ,GACb3R,KAAKstC,eAAiB,KACtBttC,KAAKutC,YAAc,KACnBvtC,KAAKwtC,YAAc,KACpBxtC,KAAK85B,QAAU,EACf95B,KAAKgrC,WAAa,EAClBhrC,KAAKytC,kBAAoB,CAAC,EACzBztC,KAAK69B,iBAAczsC,EACnB4O,KAAK89B,eAAY1sC,EAClB4O,KAAKy/B,gBAAiB,EACtBz/B,KAAK0tC,cAAWt8C,EAChB4O,KAAK2tC,cAAWv8C,EAChB4O,KAAK4tC,mBAAgBx8C,EACrB4O,KAAK6tC,mBAAgBz8C,EACrB4O,KAAK8tC,aAAe,EACpB9tC,KAAK+tC,aAAe,EACpB/tC,KAAKw5B,OAAS,CAAC,EACfx5B,KAAKguC,mBAAoB,EACzBhuC,KAAKsyB,cAAWlhC,CACpB,CACH2tC,KAAKtwC,GACEuR,KAAKvR,QAAUA,EAAQ2yB,WAAWphB,KAAK8Y,cACvC9Y,KAAKiwB,KAAOxhC,EAAQwhC,KACpBjwB,KAAK2tC,SAAW3tC,KAAK60B,MAAMpmC,EAAQW,KACnC4Q,KAAK0tC,SAAW1tC,KAAK60B,MAAMpmC,EAAQU,KACnC6Q,KAAK6tC,cAAgB7tC,KAAK60B,MAAMpmC,EAAQw/C,cACxCjuC,KAAK4tC,cAAgB5tC,KAAK60B,MAAMpmC,EAAQy/C,aAC5C,CACHrZ,MAAM/D,EAAKttB,GACJ,OAAOstB,CACX,CACHjC,gBACO,IAAI,SAAE8e,EAAS,SAAED,EAAS,cAAEG,EAAc,cAAED,GAAmB5tC,KAK/D,OAJA2tC,EAAWzrC,GAAgByrC,EAAU3rC,OAAO+D,mBAC5C2nC,EAAWxrC,GAAgBwrC,EAAU1rC,OAAOgtB,mBAC5C6e,EAAgB3rC,GAAgB2rC,EAAe7rC,OAAO+D,mBACtD6nC,EAAgB1rC,GAAgB0rC,EAAe5rC,OAAOgtB,mBAC/C,CACH5/B,IAAK8S,GAAgByrC,EAAUE,GAC/B1+C,IAAK+S,GAAgBwrC,EAAUE,GAC/B9e,WAAY/sB,GAAe4rC,GAC3B5e,WAAYhtB,GAAe2rC,GAEnC,CACH1X,UAAU1E,GACH,IACIr/B,GADA,IAAE7C,EAAI,IAAED,EAAI,WAAE2/B,EAAW,WAAEC,GAAgB/uB,KAAK6uB,gBAEpD,GAAIC,GAAcC,EACd,MAAO,CACH3/B,MACAD,OAGR,MAAMg/C,EAAQnuC,KAAKyvB,0BACnB,IAAI,IAAI39B,EAAI,EAAGsR,EAAO+qC,EAAMl9C,OAAQa,EAAIsR,IAAQtR,EAC5CG,EAAQk8C,EAAMr8C,GAAG69B,WAAWqG,UAAUh2B,KAAMsxB,GACvCxC,IACD1/B,EAAMF,KAAKE,IAAIA,EAAK6C,EAAM7C,MAEzB2/B,IACD5/B,EAAMD,KAAKC,IAAIA,EAAK8C,EAAM9C,MAKlC,OAFAC,EAAM2/B,GAAc3/B,EAAMD,EAAMA,EAAMC,EACtCD,EAAM2/B,GAAc1/B,EAAMD,EAAMC,EAAMD,EAC/B,CACHC,IAAK8S,GAAgB9S,EAAK8S,GAAgB/S,EAAKC,IAC/CD,IAAK+S,GAAgB/S,EAAK+S,GAAgB9S,EAAKD,IAEvD,CACHs0C,aACO,MAAO,CACHn3B,KAAMtM,KAAKktC,aAAe,EAC1B18B,IAAKxQ,KAAKgtC,YAAc,EACxBzgC,MAAOvM,KAAKmtC,cAAgB,EAC5B18B,OAAQzQ,KAAKitC,eAAiB,EAEtC,CACHmB,WACO,OAAOpuC,KAAK2R,KAChB,CACH4jB,YACO,MAAM5mC,EAAOqR,KAAK4R,MAAMjjB,KACxB,OAAOqR,KAAKvR,QAAQ6mC,SAAWt1B,KAAK27B,eAAiBhtC,EAAK0/C,QAAU1/C,EAAK2/C,UAAY3/C,EAAK2mC,QAAU,EACxG,CACHiZ,cAAc5X,EAAY32B,KAAK4R,MAAM+kB,WAC9B,MAAM7oC,EAAQkS,KAAKutC,cAAgBvtC,KAAKutC,YAAcvtC,KAAKwuC,mBAAmB7X,IAC9E,OAAO7oC,CACX,CACAu3C,eACIrlC,KAAKw5B,OAAS,CAAC,EACfx5B,KAAKguC,mBAAoB,CAC7B,CACAS,eACIhsC,GAASzC,KAAKvR,QAAQggD,aAAc,CAChCzuC,MAER,CACH2rB,OAAO7O,EAAU6I,EAAWY,GACrB,MAAM,YAAE1T,EAAY,MAAEE,EAAQpB,MAAOm4B,GAAc9pC,KAAKvR,QAClDigD,EAAa5E,EAAS4E,WAC5B1uC,KAAKyuC,eACLzuC,KAAK8c,SAAWA,EAChB9c,KAAK2lB,UAAYA,EACjB3lB,KAAK+sC,SAAWxmB,EAAUxoB,OAAOyB,OAAO,CACpC8M,KAAM,EACNC,MAAO,EACPiE,IAAK,EACLC,OAAQ,GACT8V,GACHvmB,KAAK2R,MAAQ,KACb3R,KAAKwtC,YAAc,KACnBxtC,KAAKstC,eAAiB,KACtBttC,KAAKutC,YAAc,KACnBvtC,KAAK2uC,sBACL3uC,KAAK4uC,gBACL5uC,KAAK6uC,qBACL7uC,KAAKgrC,WAAahrC,KAAK27B,eAAiB37B,KAAK2T,MAAQ4S,EAAQja,KAAOia,EAAQha,MAAQvM,KAAKkZ,OAASqN,EAAQ/V,IAAM+V,EAAQ9V,OACnHzQ,KAAKguC,oBACNhuC,KAAK8uC,mBACL9uC,KAAK+uC,sBACL/uC,KAAKgvC,kBACLhvC,KAAKqtC,OAAS1uB,GAAU3e,KAAM+S,EAAOF,GACrC7S,KAAKguC,mBAAoB,GAE7BhuC,KAAKivC,mBACLjvC,KAAK2R,MAAQ3R,KAAKkvC,cAAgB,GAClClvC,KAAKmvC,kBACL,MAAMC,EAAkBV,EAAa1uC,KAAK2R,MAAM1gB,OAChD+O,KAAKqvC,sBAAsBD,EAAkBzD,GAAO3rC,KAAK2R,MAAO+8B,GAAc1uC,KAAK2R,OACnF3R,KAAKssB,YACLtsB,KAAKsvC,+BACLtvC,KAAKuvC,yBACLvvC,KAAKwvC,8BACD1F,EAASn3B,UAAYm3B,EAAS31B,UAAgC,SAApB21B,EAASrmC,UACnDzD,KAAK2R,MAAQwC,GAASnU,KAAMA,KAAK2R,OACjC3R,KAAKwtC,YAAc,KACnBxtC,KAAKyvC,iBAELL,GACApvC,KAAKqvC,sBAAsBrvC,KAAK2R,OAEpC3R,KAAK0vC,YACL1vC,KAAK2vC,MACL3vC,KAAK4vC,WACL5vC,KAAK6vC,aACT,CACHvjB,YACO,IACI6R,EAAYE,EADZyR,EAAgB9vC,KAAKvR,QAAQuU,QAE7BhD,KAAK27B,gBACLwC,EAAan+B,KAAKsM,KAClB+xB,EAAWr+B,KAAKuM,QAEhB4xB,EAAan+B,KAAKwQ,IAClB6tB,EAAWr+B,KAAKyQ,OAChBq/B,GAAiBA,GAErB9vC,KAAK69B,YAAcM,EACnBn+B,KAAK89B,UAAYO,EACjBr+B,KAAKy/B,eAAiBqQ,EACtB9vC,KAAK85B,QAAUuE,EAAWF,EAC1Bn+B,KAAK+vC,eAAiB/vC,KAAKvR,QAAQuhD,aACvC,CACAH,cACIptC,GAASzC,KAAKvR,QAAQohD,YAAa,CAC/B7vC,MAER,CACA2uC,sBACIlsC,GAASzC,KAAKvR,QAAQkgD,oBAAqB,CACvC3uC,MAER,CACA4uC,gBACQ5uC,KAAK27B,gBACL37B,KAAK2T,MAAQ3T,KAAK8c,SAClB9c,KAAKsM,KAAO,EACZtM,KAAKuM,MAAQvM,KAAK2T,QAElB3T,KAAKkZ,OAASlZ,KAAK2lB,UACnB3lB,KAAKwQ,IAAM,EACXxQ,KAAKyQ,OAASzQ,KAAKkZ,QAEvBlZ,KAAKktC,YAAc,EACnBltC,KAAKgtC,WAAa,EAClBhtC,KAAKmtC,aAAe,EACpBntC,KAAKitC,cAAgB,CACzB,CACA4B,qBACIpsC,GAASzC,KAAKvR,QAAQogD,mBAAoB,CACtC7uC,MAER,CACAiwC,WAAWrgC,GACP5P,KAAK4R,MAAMs+B,cAActgC,EAAM5P,KAAK8Y,cACpCrW,GAASzC,KAAKvR,QAAQmhB,GAAO,CACzB5P,MAER,CACA8uC,mBACI9uC,KAAKiwC,WAAW,mBACpB,CACAlB,sBAAuB,CACvBC,kBACIhvC,KAAKiwC,WAAW,kBACpB,CACAhB,mBACIjvC,KAAKiwC,WAAW,mBACpB,CACHf,aACO,MAAO,EACX,CACAC,kBACInvC,KAAKiwC,WAAW,kBACpB,CACAE,8BACI1tC,GAASzC,KAAKvR,QAAQ0hD,4BAA6B,CAC/CnwC,MAER,CACHowC,mBAAmBz+B,GACZ,MAAMm4B,EAAW9pC,KAAKvR,QAAQkjB,MAC9B,IAAI7f,EAAGsR,EAAMumB,EACb,IAAI73B,EAAI,EAAGsR,EAAOuO,EAAM1gB,OAAQa,EAAIsR,EAAMtR,IACtC63B,EAAOhY,EAAM7f,GACb63B,EAAK6M,MAAQ/zB,GAASqnC,EAASrnC,SAAU,CACrCknB,EAAKloB,MACL3P,EACA6f,GACD3R,KAEX,CACAqwC,6BACI5tC,GAASzC,KAAKvR,QAAQ4hD,2BAA4B,CAC9CrwC,MAER,CACAsvC,+BACI7sC,GAASzC,KAAKvR,QAAQ6gD,6BAA8B,CAChDtvC,MAER,CACAuvC,yBACI,MAAM9gD,EAAUuR,KAAKvR,QACfq7C,EAAWr7C,EAAQkjB,MACnB2+B,EAAW7E,GAAczrC,KAAK2R,MAAM1gB,OAAQxC,EAAQkjB,MAAMu4B,eAC1Dp2B,EAAcg2B,EAASh2B,aAAe,EACtCC,EAAc+1B,EAAS/1B,YAC7B,IACIV,EAAWsS,EAAW4qB,EADtBnD,EAAgBt5B,EAEpB,IAAK9T,KAAKwwC,eAAiB1G,EAASn3B,SAAWmB,GAAeC,GAAeu8B,GAAY,IAAMtwC,KAAK27B,eAEhG,YADA37B,KAAKotC,cAAgBt5B,GAGzB,MAAM28B,EAAazwC,KAAK0wC,iBAClBC,EAAgBF,EAAWG,OAAOj9B,MAClCk9B,EAAiBJ,EAAWK,QAAQ53B,OACpC4D,EAAWzT,GAAYrJ,KAAK4R,MAAM+B,MAAQg9B,EAAe,EAAG3wC,KAAK8c,UACvEzJ,EAAY5kB,EAAQmkB,OAAS5S,KAAK8c,SAAWwzB,EAAWxzB,GAAYwzB,EAAW,GAC3EK,EAAgB,EAAIt9B,IACpBA,EAAYyJ,GAAYwzB,GAAY7hD,EAAQmkB,OAAS,GAAM,IAC3D+S,EAAY3lB,KAAK2lB,UAAY0mB,GAAkB59C,EAAQukB,MAAQ82B,EAASv5B,QAAU+7B,GAAe79C,EAAQmlB,MAAO5T,KAAK4R,MAAMnjB,QAAQunB,MACnIu6B,EAAmBrhD,KAAK+X,KAAK0pC,EAAgBA,EAAgBE,EAAiBA,GAC9EzD,EAAgBvlC,GAAU3Y,KAAKE,IAAIF,KAAK6hD,KAAK1nC,IAAaonC,EAAWK,QAAQ53B,OAAS,GAAK7F,GAAY,EAAG,IAAKnkB,KAAK6hD,KAAK1nC,GAAYsc,EAAY4qB,GAAmB,EAAG,IAAMrhD,KAAK6hD,KAAK1nC,GAAYwnC,EAAiBN,GAAmB,EAAG,MAC1OnD,EAAgBl+C,KAAKC,IAAI2kB,EAAa5kB,KAAKE,IAAI2kB,EAAaq5B,KAEhEptC,KAAKotC,cAAgBA,CACzB,CACAoC,8BACI/sC,GAASzC,KAAKvR,QAAQ+gD,4BAA6B,CAC/CxvC,MAER,CACAyvC,gBAAiB,CACjBC,YACIjtC,GAASzC,KAAKvR,QAAQihD,UAAW,CAC7B1vC,MAER,CACA2vC,MACI,MAAMqB,EAAU,CACZr9B,MAAO,EACPuF,OAAQ,IAEN,MAAEtH,EAAQnjB,SAAWkjB,MAAOm4B,EAAWl2B,MAAOq9B,EAAYj+B,KAAMk+B,IAAiBlxC,KACjF2S,EAAU3S,KAAKwwC,aACf7U,EAAe37B,KAAK27B,eAC1B,GAAIhpB,EAAS,CACT,MAAMw+B,EAAc7E,GAAe2E,EAAWr/B,EAAMnjB,QAAQunB,MAQ5D,GAPI2lB,GACAqV,EAAQr9B,MAAQ3T,KAAK8c,SACrBk0B,EAAQ93B,OAASmzB,GAAkB6E,GAAYC,IAE/CH,EAAQ93B,OAASlZ,KAAK2lB,UACtBqrB,EAAQr9B,MAAQ04B,GAAkB6E,GAAYC,GAE9CrH,EAASn3B,SAAW3S,KAAK2R,MAAM1gB,OAAQ,CACvC,MAAM,MAAEs5C,EAAM,KAAExgC,EAAK,OAAE6mC,EAAO,QAAEE,GAAa9wC,KAAK0wC,iBAC5CU,EAAiC,EAAnBtH,EAASv5B,QACvB8gC,EAAe1pC,GAAU3H,KAAKotC,eAC9Bv/B,EAAM3e,KAAK2e,IAAIwjC,GACfzkC,EAAM1d,KAAK0d,IAAIykC,GACrB,GAAI1V,EAAc,CACd,MAAM2V,EAAcxH,EAAS91B,OAAS,EAAIpH,EAAMgkC,EAAOj9B,MAAQ9F,EAAMijC,EAAQ53B,OAC7E83B,EAAQ93B,OAAShqB,KAAKE,IAAI4Q,KAAK2lB,UAAWqrB,EAAQ93B,OAASo4B,EAAcF,EAC7E,KAAO,CACH,MAAMG,EAAazH,EAAS91B,OAAS,EAAInG,EAAM+iC,EAAOj9B,MAAQ/G,EAAMkkC,EAAQ53B,OAC5E83B,EAAQr9B,MAAQzkB,KAAKE,IAAI4Q,KAAK8c,SAAUk0B,EAAQr9B,MAAQ49B,EAAaH,EACzE,CACApxC,KAAKwxC,kBAAkBjH,EAAOxgC,EAAM6C,EAAKiB,EAC7C,CACJ,CACA7N,KAAKyxC,iBACD9V,GACA37B,KAAK2T,MAAQ3T,KAAK85B,QAAUloB,EAAM+B,MAAQ3T,KAAK+sC,SAASzgC,KAAOtM,KAAK+sC,SAASxgC,MAC7EvM,KAAKkZ,OAAS83B,EAAQ93B,SAEtBlZ,KAAK2T,MAAQq9B,EAAQr9B,MACrB3T,KAAKkZ,OAASlZ,KAAK85B,QAAUloB,EAAMsH,OAASlZ,KAAK+sC,SAASv8B,IAAMxQ,KAAK+sC,SAASt8B,OAEtF,CACA+gC,kBAAkBjH,EAAOxgC,EAAM6C,EAAKiB,GAChC,MAAQ8D,OAAO,MAAExF,EAAM,QAAEoE,GAAW,SAAEqvB,GAAc5/B,KAAKvR,QACnDijD,EAAmC,IAAvB1xC,KAAKotC,cACjBuE,EAAgC,QAAb/R,GAAoC,MAAd5/B,KAAKiwB,KACpD,GAAIjwB,KAAK27B,eAAgB,CACrB,MAAMiW,EAAa5xC,KAAKi6B,gBAAgB,GAAKj6B,KAAKsM,KAC5CulC,EAAc7xC,KAAKuM,MAAQvM,KAAKi6B,gBAAgBj6B,KAAK2R,MAAM1gB,OAAS,GAC1E,IAAIi8C,EAAc,EACdC,EAAe,EACfuE,EACIC,GACAzE,EAAcr/B,EAAM08B,EAAM52B,MAC1Bw5B,EAAevgC,EAAM7C,EAAKmP,SAE1Bg0B,EAActgC,EAAM29B,EAAMrxB,OAC1Bi0B,EAAet/B,EAAM9D,EAAK4J,OAEb,UAAVxH,EACPghC,EAAepjC,EAAK4J,MACH,QAAVxH,EACP+gC,EAAc3C,EAAM52B,MACH,UAAVxH,IACP+gC,EAAc3C,EAAM52B,MAAQ,EAC5Bw5B,EAAepjC,EAAK4J,MAAQ,GAEhC3T,KAAKktC,YAAch+C,KAAKC,KAAK+9C,EAAc0E,EAAarhC,GAAWvQ,KAAK2T,OAAS3T,KAAK2T,MAAQi+B,GAAa,GAC3G5xC,KAAKmtC,aAAej+C,KAAKC,KAAKg+C,EAAe0E,EAActhC,GAAWvQ,KAAK2T,OAAS3T,KAAK2T,MAAQk+B,GAAc,EACnH,KAAO,CACH,IAAI7E,EAAajjC,EAAKmP,OAAS,EAC3B+zB,EAAgB1C,EAAMrxB,OAAS,EACrB,UAAV/M,GACA6gC,EAAa,EACbC,EAAgB1C,EAAMrxB,QACL,QAAV/M,IACP6gC,EAAajjC,EAAKmP,OAClB+zB,EAAgB,GAEpBjtC,KAAKgtC,WAAaA,EAAaz8B,EAC/BvQ,KAAKitC,cAAgBA,EAAgB18B,CACzC,CACJ,CACHkhC,iBACWzxC,KAAK+sC,WACL/sC,KAAK+sC,SAASzgC,KAAOpd,KAAKC,IAAI6Q,KAAKktC,YAAaltC,KAAK+sC,SAASzgC,MAC9DtM,KAAK+sC,SAASv8B,IAAMthB,KAAKC,IAAI6Q,KAAKgtC,WAAYhtC,KAAK+sC,SAASv8B,KAC5DxQ,KAAK+sC,SAASxgC,MAAQrd,KAAKC,IAAI6Q,KAAKmtC,aAAcntC,KAAK+sC,SAASxgC,OAChEvM,KAAK+sC,SAASt8B,OAASvhB,KAAKC,IAAI6Q,KAAKitC,cAAejtC,KAAK+sC,SAASt8B,QAE1E,CACAm/B,WACIntC,GAASzC,KAAKvR,QAAQmhD,SAAU,CAC5B5vC,MAER,CACH27B,eACO,MAAM,KAAE1L,EAAK,SAAE2P,GAAc5/B,KAAKvR,QAClC,MAAoB,QAAbmxC,GAAmC,WAAbA,GAAkC,MAAT3P,CAC1D,CACH6hB,aACO,OAAO9xC,KAAKvR,QAAQk0C,QACxB,CACH0M,sBAAsB19B,GAGf,IAAI7f,EAAGsR,EACP,IAHApD,KAAKmwC,8BACLnwC,KAAKowC,mBAAmBz+B,GAEpB7f,EAAI,EAAGsR,EAAOuO,EAAM1gB,OAAQa,EAAIsR,EAAMtR,IAClC0P,GAAcmQ,EAAM7f,GAAG0kC,SACvB7kB,EAAMxG,OAAOrZ,EAAG,GAChBsR,IACAtR,KAGRkO,KAAKqwC,4BACT,CACHK,iBACO,IAAID,EAAazwC,KAAKwtC,YACtB,IAAKiD,EAAY,CACb,MAAM/B,EAAa1uC,KAAKvR,QAAQkjB,MAAM+8B,WACtC,IAAI/8B,EAAQ3R,KAAK2R,MACb+8B,EAAa/8B,EAAM1gB,SACnB0gB,EAAQg6B,GAAOh6B,EAAO+8B,IAE1B1uC,KAAKwtC,YAAciD,EAAazwC,KAAK+xC,mBAAmBpgC,EAAOA,EAAM1gB,OAAQ+O,KAAKvR,QAAQkjB,MAAMu4B,cACpG,CACA,OAAOuG,CACX,CACHsB,mBAAmBpgC,EAAO1gB,EAAQi5C,GAC3B,MAAM,IAAE7zB,EAAMo3B,kBAAmBtB,GAAYnsC,KACvCgyC,EAAS,GACTC,EAAU,GACVpG,EAAY38C,KAAK0X,MAAM3V,EAASw6C,GAAcx6C,EAAQi5C,IAC5D,IAEIp4C,EAAGmM,EAAGi0C,EAAM1b,EAAO2b,EAAUC,EAAY3yB,EAAOvJ,EAAYvC,EAAOuF,EAAQm5B,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAIzgD,EAAI,EAAGA,EAAIb,EAAQa,GAAK+5C,EAAU,CAUlC,GATArV,EAAQ7kB,EAAM7f,GAAG0kC,MACjB2b,EAAWnyC,KAAKwyC,wBAAwB1gD,GACxCukB,EAAIL,KAAOo8B,EAAaD,EAAS95B,OACjCoH,EAAQ0sB,EAAOiG,GAAcjG,EAAOiG,IAAe,CAC/CzjD,KAAM,CAAC,EACPwpB,GAAI,IAERjC,EAAai8B,EAASj8B,WACtBvC,EAAQuF,EAAS,EACZ1X,GAAcg1B,IAAWpkC,GAAQokC,IAG/B,GAAIpkC,GAAQokC,GACf,IAAIv4B,EAAI,EAAGi0C,EAAO1b,EAAMvlC,OAAQgN,EAAIi0C,IAAQj0C,EACxCo0C,EAAe7b,EAAMv4B,GAChBuD,GAAc6wC,IAAiBjgD,GAAQigD,KACxC1+B,EAAQuE,GAAa7B,EAAKoJ,EAAM9wB,KAAM8wB,EAAMtH,GAAIxE,EAAO0+B,GACvDn5B,GAAUhD,QAPlBvC,EAAQuE,GAAa7B,EAAKoJ,EAAM9wB,KAAM8wB,EAAMtH,GAAIxE,EAAO6iB,GACvDtd,EAAShD,EAUb87B,EAAOhtC,KAAK2O,GACZs+B,EAAQjtC,KAAKkU,GACbo5B,EAAkBpjD,KAAKC,IAAIwkB,EAAO2+B,GAClCC,EAAmBrjD,KAAKC,IAAI+pB,EAAQq5B,EACxC,CACArG,GAAeC,EAAQl7C,GACvB,MAAM2/C,EAASoB,EAAOluC,QAAQwuC,GACxBxB,EAAUmB,EAAQnuC,QAAQyuC,GAC1BE,EAAWC,IAAM,CACf/+B,MAAOq+B,EAAOU,IAAQ,EACtBx5B,OAAQ+4B,EAAQS,IAAQ,IAEhC,MAAO,CACHnI,MAAOkI,EAAQ,GACf1oC,KAAM0oC,EAAQxhD,EAAS,GACvB2/C,OAAQ6B,EAAQ7B,GAChBE,QAAS2B,EAAQ3B,GACjBkB,SACAC,UAER,CACHxb,iBAAiBh1B,GACV,OAAOA,CACX,CACHu4B,iBAAiBv4B,EAAO+B,GACjB,OAAOuyB,GACX,CACHuI,iBAAiB7lB,GAAQ,CACzBwhB,gBAAgBz2B,GACT,MAAMmO,EAAQ3R,KAAK2R,MACnB,OAAInO,EAAQ,GAAKA,EAAQmO,EAAM1gB,OAAS,EAC7B,KAEJ+O,KAAKg6B,iBAAiBroB,EAAMnO,GAAO/B,MAC9C,CACH28B,mBAAmBuU,GACR3yC,KAAKy/B,iBACLkT,EAAU,EAAIA,GAElB,MAAMl6B,EAAQzY,KAAK69B,YAAc8U,EAAU3yC,KAAK85B,QAChD,OAAOxwB,GAAYtJ,KAAK+vC,eAAiBv3B,GAAYxY,KAAK4R,MAAO6G,EAAO,GAAKA,EACjF,CACHm6B,mBAAmBn6B,GACZ,MAAMk6B,GAAWl6B,EAAQzY,KAAK69B,aAAe79B,KAAK85B,QAClD,OAAO95B,KAAKy/B,eAAiB,EAAIkT,EAAUA,CAC/C,CACH1V,eACO,OAAOj9B,KAAKg6B,iBAAiBh6B,KAAK6yC,eACtC,CACHA,eACO,MAAM,IAAEzjD,EAAI,IAAED,GAAS6Q,KACvB,OAAO5Q,EAAM,GAAKD,EAAM,EAAIA,EAAMC,EAAM,GAAKD,EAAM,EAAIC,EAAM,CACjE,CACH0pB,WAAWtV,GACJ,MAAMmO,EAAQ3R,KAAK2R,OAAS,GAC5B,GAAInO,GAAS,GAAKA,EAAQmO,EAAM1gB,OAAQ,CACpC,MAAM04B,EAAOhY,EAAMnO,GACnB,OAAOmmB,EAAK2I,WAAa3I,EAAK2I,SAAWka,GAAkBxsC,KAAK8Y,aAActV,EAAOmmB,GACzF,CACA,OAAO3pB,KAAKsyB,WAAatyB,KAAKsyB,SAAWia,GAAmBvsC,KAAK4R,MAAMkH,aAAc9Y,MACzF,CACH6qC,YACO,MAAMiI,EAAc9yC,KAAKvR,QAAQkjB,MAC3BohC,EAAMprC,GAAU3H,KAAKotC,eACrBv/B,EAAM3e,KAAKsX,IAAItX,KAAK2e,IAAIklC,IACxBnmC,EAAM1d,KAAKsX,IAAItX,KAAK0d,IAAImmC,IACxBtC,EAAazwC,KAAK0wC,iBAClBngC,EAAUuiC,EAAY1+B,iBAAmB,EACzCxiB,EAAI6+C,EAAaA,EAAWG,OAAOj9B,MAAQpD,EAAU,EACrDthB,EAAIwhD,EAAaA,EAAWK,QAAQ53B,OAAS3I,EAAU,EAC7D,OAAOvQ,KAAK27B,eAAiB1sC,EAAI4e,EAAMjc,EAAIgb,EAAMhb,EAAIic,EAAM5e,EAAI2d,EAAM3d,EAAI2d,EAAMhb,EAAIic,EAAM5e,EAAI4e,EAAMjc,EAAIgb,CAC3G,CACH4jC,aACO,MAAM79B,EAAU3S,KAAKvR,QAAQkkB,QAC7B,MAAgB,SAAZA,IACSA,EAEN3S,KAAKyvB,0BAA0Bx+B,OAAS,CACnD,CACH+hD,sBAAsBrc,GACf,MAAM1G,EAAOjwB,KAAKiwB,KACZre,EAAQ5R,KAAK4R,MACbnjB,EAAUuR,KAAKvR,SACf,KAAEukB,EAAK,SAAE4sB,EAAS,OAAEpsB,GAAY/kB,EAChCmkB,EAASI,EAAKJ,OACd+oB,EAAe37B,KAAK27B,eACpBhqB,EAAQ3R,KAAK2R,MACb+5B,EAAc/5B,EAAM1gB,QAAU2hB,EAAS,EAAI,GAC3CqgC,EAAK5G,GAAkBr5B,GACvBllB,EAAQ,GACRolD,EAAa1/B,EAAO4N,WAAWphB,KAAK8Y,cACpCq6B,EAAYD,EAAWvgC,QAAUugC,EAAWv/B,MAAQ,EACpDy/B,EAAgBD,EAAY,EAC5BE,EAAmB,SAAS56B,GAC9B,OAAOD,GAAY5G,EAAO6G,EAAO06B,EACrC,EACA,IAAIG,EAAaxhD,EAAGm6C,EAAWsH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbnU,EACA0T,EAAcD,EAAiBrzC,KAAKyQ,QACpCgjC,EAAMzzC,KAAKyQ,OAASwiC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB1c,EAAUnmB,KAAO4iC,EACvCW,EAAKpd,EAAUlmB,YACZ,GAAiB,WAAbmvB,EACP0T,EAAcD,EAAiBrzC,KAAKwQ,KACpCqjC,EAAKld,EAAUnmB,IACfujC,EAAKV,EAAiB1c,EAAUlmB,QAAU2iC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM3zC,KAAKwQ,IAAMyiC,OACd,GAAiB,SAAbrT,EACP0T,EAAcD,EAAiBrzC,KAAKuM,OACpCinC,EAAMxzC,KAAKuM,MAAQ0mC,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB1c,EAAUrqB,MAAQ8mC,EACxCU,EAAKnd,EAAUpqB,WACZ,GAAiB,UAAbqzB,EACP0T,EAAcD,EAAiBrzC,KAAKsM,MACpCsnC,EAAKjd,EAAUrqB,KACfwnC,EAAKT,EAAiB1c,EAAUpqB,OAAS6mC,EACzCI,EAAMF,EAAcF,EACpBM,EAAM1zC,KAAKsM,KAAO2mC,OACf,GAAa,MAAThjB,EAAc,CACrB,GAAiB,WAAb2P,EACA0T,EAAcD,GAAkB1c,EAAUnmB,IAAMmmB,EAAUlmB,QAAU,EAAI,SACrE,GAAI3O,GAAS89B,GAAW,CAC3B,MAAMiN,EAAiB9uC,OAAOD,KAAK8hC,GAAU,GACvCn+B,EAAQm+B,EAASiN,GACvByG,EAAcD,EAAiBrzC,KAAK4R,MAAMwF,OAAOy1B,GAAgB7S,iBAAiBv4B,GACtF,CACAoyC,EAAKld,EAAUnmB,IACfujC,EAAKpd,EAAUlmB,OACfgjC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CAChB,MAAO,GAAa,MAAThjB,EAAc,CACrB,GAAiB,WAAb2P,EACA0T,EAAcD,GAAkB1c,EAAUrqB,KAAOqqB,EAAUpqB,OAAS,QACjE,GAAIzK,GAAS89B,GAAW,CAC3B,MAAMiN,EAAiB9uC,OAAOD,KAAK8hC,GAAU,GACvCn+B,EAAQm+B,EAASiN,GACvByG,EAAcD,EAAiBrzC,KAAK4R,MAAMwF,OAAOy1B,GAAgB7S,iBAAiBv4B,GACtF,CACA+xC,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKjd,EAAUrqB,KACfwnC,EAAKnd,EAAUpqB,KACnB,CACA,MAAMynC,EAAQ5xC,GAAe3T,EAAQkjB,MAAMu4B,cAAewB,GACpDuI,EAAO/kD,KAAKC,IAAI,EAAGD,KAAKk8C,KAAKM,EAAcsI,IACjD,IAAIliD,EAAI,EAAGA,EAAI45C,EAAa55C,GAAKmiD,EAAK,CAClC,MAAMt+B,EAAU3V,KAAK8Y,WAAWhnB,GAC1BoiD,EAAclhC,EAAKoO,WAAWzL,GAC9Bw+B,EAAoB3gC,EAAO4N,WAAWzL,GACtC1C,EAAYihC,EAAYjhC,UACxBmhC,EAAYF,EAAY5zC,MACxB+zC,EAAaF,EAAkB1gC,MAAQ,GACvC6gC,EAAmBH,EAAkBzgC,WACrCL,EAAY6gC,EAAY7gC,UACxBE,EAAY2gC,EAAY3gC,UACxBghC,EAAiBL,EAAYK,gBAAkB,GAC/CC,EAAuBN,EAAYM,qBACzCvI,EAAYH,GAAoB9rC,KAAMlO,EAAG8gB,QACvBxhB,IAAd66C,IAGJsH,EAAmB/6B,GAAY5G,EAAOq6B,EAAWh5B,GAC7C0oB,EACA6X,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1BzlD,EAAMkX,KAAK,CACPwuC,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACApgC,MAAOV,EACP3S,MAAO8zC,EACPC,aACAC,mBACAjhC,YACAE,YACAghC,iBACAC,yBAER,CAGA,OAFAx0C,KAAK8tC,aAAepC,EACpB1rC,KAAK+tC,aAAeuF,EACbxlD,CACX,CACH0gD,mBAAmB7X,GACZ,MAAM1G,EAAOjwB,KAAKiwB,KACZxhC,EAAUuR,KAAKvR,SACf,SAAEmxC,EAAWjuB,MAAOmhC,GAAiBrkD,EACrCktC,EAAe37B,KAAK27B,eACpBhqB,EAAQ3R,KAAK2R,OACb,MAAExF,EAAM,WAAEqI,EAAW,QAAEjE,EAAQ,OAAEyD,GAAY8+B,EAC7CG,EAAK5G,GAAkB59C,EAAQukB,MAC/ByhC,EAAiBxB,EAAK1iC,EACtBmkC,EAAkB1gC,GAAUzD,EAAUkkC,EACtC76B,GAAYjS,GAAU3H,KAAKotC,eAC3Bt/C,EAAQ,GACd,IAAIgE,EAAGsR,EAAMumB,EAAM6M,EAAOtjC,EAAGyR,EAAG4W,EAAW9C,EAAOzC,EAAME,EAAYy+B,EAAWC,EAC3Ep5B,EAAe,SACnB,GAAiB,QAAbokB,EACAj7B,EAAI3E,KAAKyQ,OAASikC,EAClBn5B,EAAYvb,KAAK60C,+BACd,GAAiB,WAAbjV,EACPj7B,EAAI3E,KAAKwQ,IAAMkkC,EACfn5B,EAAYvb,KAAK60C,+BACd,GAAiB,SAAbjV,EAAqB,CAC5B,MAAM7uC,EAAMiP,KAAK80C,wBAAwB7B,GACzC13B,EAAYxqB,EAAIwqB,UAChBroB,EAAInC,EAAImC,CACZ,MAAO,GAAiB,UAAb0sC,EAAsB,CAC7B,MAAM7uC,EAAMiP,KAAK80C,wBAAwB7B,GACzC13B,EAAYxqB,EAAIwqB,UAChBroB,EAAInC,EAAImC,CACZ,MAAO,GAAa,MAAT+8B,EAAc,CACrB,GAAiB,WAAb2P,EACAj7B,GAAKgyB,EAAUnmB,IAAMmmB,EAAUlmB,QAAU,EAAIgkC,OAC1C,GAAI3yC,GAAS89B,GAAW,CAC3B,MAAMiN,EAAiB9uC,OAAOD,KAAK8hC,GAAU,GACvCn+B,EAAQm+B,EAASiN,GACvBloC,EAAI3E,KAAK4R,MAAMwF,OAAOy1B,GAAgB7S,iBAAiBv4B,GAASgzC,CACpE,CACAl5B,EAAYvb,KAAK60C,yBACrB,MAAO,GAAa,MAAT5kB,EAAc,CACrB,GAAiB,WAAb2P,EACA1sC,GAAKyjC,EAAUrqB,KAAOqqB,EAAUpqB,OAAS,EAAIkoC,OAC1C,GAAI3yC,GAAS89B,GAAW,CAC3B,MAAMiN,EAAiB9uC,OAAOD,KAAK8hC,GAAU,GACvCn+B,EAAQm+B,EAASiN,GACvB35C,EAAI8M,KAAK4R,MAAMwF,OAAOy1B,GAAgB7S,iBAAiBv4B,EAC3D,CACA8Z,EAAYvb,KAAK80C,wBAAwB7B,GAAI13B,SACjD,CACa,MAAT0U,IACc,UAAV9jB,EACAqP,EAAe,MACE,QAAVrP,IACPqP,EAAe,WAGvB,MAAMi1B,EAAazwC,KAAK0wC,iBACxB,IAAI5+C,EAAI,EAAGsR,EAAOuO,EAAM1gB,OAAQa,EAAIsR,IAAQtR,EAAE,CAC1C63B,EAAOhY,EAAM7f,GACb0kC,EAAQ7M,EAAK6M,MACb,MAAM0d,EAAcpB,EAAY1xB,WAAWphB,KAAK8Y,WAAWhnB,IAC3D2mB,EAAQzY,KAAKi6B,gBAAgBnoC,GAAKghD,EAAYz+B,YAC9C2B,EAAOhW,KAAKwyC,wBAAwB1gD,GACpCokB,EAAaF,EAAKE,WAClBy+B,EAAYviD,GAAQokC,GAASA,EAAMvlC,OAAS,EAC5C,MAAM8jD,EAAYJ,EAAY,EACxBr0C,EAAQ4zC,EAAY5zC,MACpBqc,EAAcu3B,EAAYhgC,gBAC1BwI,EAAcw3B,EAAYjgC,gBAChC,IAuCI2I,EAvCAo4B,EAAgBz5B,EAwCpB,GAvCIogB,GACAzoC,EAAIulB,EACc,UAAd8C,IAEIy5B,EADAljD,IAAMsR,EAAO,EACIpD,KAAKvR,QAAQuU,QAAoB,OAAV,QAC3B,IAANlR,EACUkO,KAAKvR,QAAQuU,QAAmB,QAAT,OAExB,UAKhB4xC,EAFS,QAAbhV,EACmB,SAAfprB,GAAsC,IAAboF,GACX+6B,EAAYz+B,EAAaA,EAAa,EAC9B,WAAf1B,GACOi8B,EAAWK,QAAQ53B,OAAS,EAAI67B,EAAY7+B,EAAaA,GAEzDu6B,EAAWK,QAAQ53B,OAAShD,EAAa,EAGxC,SAAf1B,GAAsC,IAAboF,EACZ1D,EAAa,EACJ,WAAf1B,EACMi8B,EAAWK,QAAQ53B,OAAS,EAAI67B,EAAY7+B,EAE5Cu6B,EAAWK,QAAQ53B,OAASy7B,EAAYz+B,EAGzDlC,IACA4gC,IAAe,GAEF,IAAbh7B,GAAmBs6B,EAAYz/B,oBAC/BvhB,GAAKgjB,EAAa,EAAIhnB,KAAK0d,IAAIgN,MAGnCjV,EAAI8T,EACJm8B,GAAc,EAAID,GAAaz+B,EAAa,GAG5Cg+B,EAAYz/B,kBAAmB,CAC/B,MAAMwgC,EAAe/2B,GAAUg2B,EAAYv/B,iBACrCuE,EAASu3B,EAAWwB,QAAQngD,GAC5B6hB,EAAQ88B,EAAWuB,OAAOlgD,GAChC,IAAI0e,EAAMokC,EAAaK,EAAazkC,IAChClE,EAAO,EAAI2oC,EAAa3oC,KAC5B,OAAOkP,GACH,IAAK,SACDhL,GAAO0I,EAAS,EAChB,MACJ,IAAK,SACD1I,GAAO0I,EACP,MAER,OAAOqC,GACH,IAAK,SACDjP,GAAQqH,EAAQ,EAChB,MACJ,IAAK,QACDrH,GAAQqH,EACR,MAERiJ,EAAW,CACPtQ,OACAkE,MACAmD,MAAOA,EAAQshC,EAAathC,MAC5BuF,OAAQA,EAAS+7B,EAAa/7B,OAC9B5Y,MAAO4zC,EAAYx/B,cAE3B,CACA5mB,EAAMkX,KAAK,CACPwxB,QACAxgB,OACA4+B,aACAnmD,QAAS,CACLmrB,WACAtZ,QACAqc,cACAD,cACAnB,UAAWy5B,EACXx5B,eACAH,YAAa,CACTnoB,EACAyR,GAEJiY,aAGZ,CACA,OAAO9uB,CACX,CACA+mD,0BACI,MAAM,SAAEjV,EAAS,MAAEjuB,GAAW3R,KAAKvR,QAC7BmrB,GAAYjS,GAAU3H,KAAKotC,eACjC,GAAIxzB,EACA,MAAoB,QAAbgmB,EAAqB,OAAS,QAEzC,IAAIzzB,EAAQ,SAQZ,MAPoB,UAAhBwF,EAAMxF,MACNA,EAAQ,OACe,QAAhBwF,EAAMxF,MACbA,EAAQ,QACe,UAAhBwF,EAAMxF,QACbA,EAAQ,SAELA,CACX,CACA2oC,wBAAwB7B,GACpB,MAAM,SAAErT,EAAWjuB,OAAO,WAAE6C,EAAW,OAAER,EAAO,QAAEzD,IAAgBvQ,KAAKvR,QACjEgiD,EAAazwC,KAAK0wC,iBAClB+D,EAAiBxB,EAAK1iC,EACtBqgC,EAASH,EAAWG,OAAOj9B,MACjC,IAAI4H,EACAroB,EAoDJ,MAnDiB,SAAb0sC,EACI5rB,GACA9gB,EAAI8M,KAAKuM,MAAQgE,EACE,SAAfiE,EACA+G,EAAY,OACU,WAAf/G,GACP+G,EAAY,SACZroB,GAAK09C,EAAS,IAEdr1B,EAAY,QACZroB,GAAK09C,KAGT19C,EAAI8M,KAAKuM,MAAQkoC,EACE,SAAfjgC,EACA+G,EAAY,QACU,WAAf/G,GACP+G,EAAY,SACZroB,GAAK09C,EAAS,IAEdr1B,EAAY,OACZroB,EAAI8M,KAAKsM,OAGG,UAAbszB,EACH5rB,GACA9gB,EAAI8M,KAAKsM,KAAOiE,EACG,SAAfiE,EACA+G,EAAY,QACU,WAAf/G,GACP+G,EAAY,SACZroB,GAAK09C,EAAS,IAEdr1B,EAAY,OACZroB,GAAK09C,KAGT19C,EAAI8M,KAAKsM,KAAOmoC,EACG,SAAfjgC,EACA+G,EAAY,OACU,WAAf/G,GACP+G,EAAY,SACZroB,GAAK09C,EAAS,IAEdr1B,EAAY,QACZroB,EAAI8M,KAAKuM,QAIjBgP,EAAY,QAET,CACHA,YACAroB,IAER,CACHgiD,oBACO,GAAIl1C,KAAKvR,QAAQkjB,MAAMqC,OACnB,OAEJ,MAAMpC,EAAQ5R,KAAK4R,MACbguB,EAAW5/B,KAAKvR,QAAQmxC,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACHpvB,IAAK,EACLlE,KAAMtM,KAAKsM,KACXmE,OAAQmB,EAAMsH,OACd3M,MAAOvM,KAAKuM,OAGH,QAAbqzB,GAAmC,WAAbA,EACf,CACHpvB,IAAKxQ,KAAKwQ,IACVlE,KAAM,EACNmE,OAAQzQ,KAAKyQ,OACblE,MAAOqF,EAAM+B,YALrB,CAQJ,CACHwhC,iBACO,MAAM,IAAE9+B,EAAM5nB,SAAS,gBAAE8mB,GAAmB,KAAEjJ,EAAK,IAAEkE,EAAI,MAAEmD,EAAM,OAAEuF,GAAYlZ,KAC3EuV,IACAc,EAAI0C,OACJ1C,EAAIiF,UAAY/F,EAChBc,EAAIkG,SAASjQ,EAAMkE,EAAKmD,EAAOuF,GAC/B7C,EAAI8C,UAEZ,CACAqlB,qBAAqB/8B,GACjB,MAAMuR,EAAOhT,KAAKvR,QAAQukB,KAC1B,IAAKhT,KAAKwwC,eAAiBx9B,EAAKL,QAC5B,OAAO,EAEX,MAAMhB,EAAQ3R,KAAK2R,MACbnO,EAAQmO,EAAMyjC,WAAWl2C,GAAIA,EAAEuC,QAAUA,IAC/C,GAAI+B,GAAS,EAAG,CACZ,MAAM4X,EAAOpI,EAAKoO,WAAWphB,KAAK8Y,WAAWtV,IAC7C,OAAO4X,EAAKnI,SAChB,CACA,OAAO,CACX,CACHoiC,SAAS1e,GACF,MAAM3jB,EAAOhT,KAAKvR,QAAQukB,KACpBqD,EAAMrW,KAAKqW,IACXvoB,EAAQkS,KAAKstC,iBAAmBttC,KAAKstC,eAAiBttC,KAAKgzC,sBAAsBrc,IACvF,IAAI7kC,EAAGsR,EACP,MAAMkyC,EAAW,CAACziD,EAAIC,EAAIhH,KACjBA,EAAM6nB,OAAU7nB,EAAMwU,QAG3B+V,EAAI0C,OACJ1C,EAAIpD,UAAYnnB,EAAM6nB,MACtB0C,EAAI8F,YAAcrwB,EAAMwU,MACxB+V,EAAIk/B,YAAYzpD,EAAMuoD,YAAc,IACpCh+B,EAAIm/B,eAAiB1pD,EAAMwoD,iBAC3Bj+B,EAAI4D,YACJ5D,EAAIgE,OAAOxnB,EAAGK,EAAGL,EAAG8R,GACpB0R,EAAIiE,OAAOxnB,EAAGI,EAAGJ,EAAG6R,GACpB0R,EAAIsE,SACJtE,EAAI8C,UAAS,EAEjB,GAAInG,EAAKL,QACL,IAAI7gB,EAAI,EAAGsR,EAAOtV,EAAMmD,OAAQa,EAAIsR,IAAQtR,EAAE,CAC1C,MAAM/D,EAAOD,EAAMgE,GACfkhB,EAAKE,iBACLoiC,EAAS,CACLpiD,EAAGnF,EAAK6lD,GACRjvC,EAAG5W,EAAK8lD,IACT,CACC3gD,EAAGnF,EAAK+lD,GACRnvC,EAAG5W,EAAKgmD,IACThmD,GAEHilB,EAAKG,WACLmiC,EAAS,CACLpiD,EAAGnF,EAAKylD,IACR7uC,EAAG5W,EAAK0lD,KACT,CACCvgD,EAAGnF,EAAK2lD,IACR/uC,EAAG5W,EAAK4lD,KACT,CACCrzC,MAAOvS,EAAKwlB,UACZI,MAAO5lB,EAAKslB,UACZghC,WAAYtmD,EAAKwmD,eACjBD,iBAAkBvmD,EAAKymD,sBAGnC,CAER,CACHiB,aACO,MAAM,MAAE7jC,EAAM,IAAEyE,EAAM5nB,SAAS,OAAE+kB,EAAO,KAAER,IAAahT,KACjDkzC,EAAa1/B,EAAO4N,WAAWphB,KAAK8Y,cACpCq6B,EAAY3/B,EAAOb,QAAUugC,EAAWv/B,MAAQ,EACtD,IAAKw/B,EACD,OAEJ,MAAMuC,EAAgB1iC,EAAKoO,WAAWphB,KAAK8Y,WAAW,IAAI7F,UACpDqgC,EAActzC,KAAK+tC,aACzB,IAAI6F,EAAIE,EAAID,EAAIE,EACZ/zC,KAAK27B,gBACLiY,EAAKp7B,GAAY5G,EAAO5R,KAAKsM,KAAM6mC,GAAaA,EAAY,EAC5DW,EAAKt7B,GAAY5G,EAAO5R,KAAKuM,MAAOmpC,GAAiBA,EAAgB,EACrE7B,EAAKE,EAAKT,IAEVO,EAAKr7B,GAAY5G,EAAO5R,KAAKwQ,IAAK2iC,GAAaA,EAAY,EAC3DY,EAAKv7B,GAAY5G,EAAO5R,KAAKyQ,OAAQilC,GAAiBA,EAAgB,EACtE9B,EAAKE,EAAKR,GAEdj9B,EAAI0C,OACJ1C,EAAIpD,UAAYigC,EAAWv/B,MAC3B0C,EAAI8F,YAAc+2B,EAAW5yC,MAC7B+V,EAAI4D,YACJ5D,EAAIgE,OAAOu5B,EAAIC,GACfx9B,EAAIiE,OAAOw5B,EAAIC,GACf19B,EAAIsE,SACJtE,EAAI8C,SACR,CACHw8B,WAAWhf,GACJ,MAAMmc,EAAc9yC,KAAKvR,QAAQkjB,MACjC,IAAKmhC,EAAYngC,QACb,OAEJ,MAAM0D,EAAMrW,KAAKqW,IACXyE,EAAO9a,KAAKk1C,oBACdp6B,GACAE,GAAS3E,EAAKyE,GAElB,MAAMhtB,EAAQkS,KAAKuuC,cAAc5X,GACjC,IAAK,MAAM5oC,KAAQD,EAAM,CACrB,MAAM8nD,EAAoB7nD,EAAKU,QACzB0jD,EAAWpkD,EAAKioB,KAChBwgB,EAAQzoC,EAAKyoC,MACb7xB,EAAI5W,EAAK6mD,WACfp4B,GAAWnG,EAAKmgB,EAAO,EAAG7xB,EAAGwtC,EAAUyD,EAC3C,CACI96B,GACAI,GAAW7E,EAEnB,CACHw/B,YACO,MAAM,IAAEx/B,EAAM5nB,SAAS,SAAEmxC,EAAS,MAAEhsB,EAAM,QAAE5Q,IAAgBhD,KAC5D,IAAK4T,EAAMjB,QACP,OAEJ,MAAMqD,EAAOmI,GAAOvK,EAAMoC,MACpBzF,EAAU2N,GAAUtK,EAAMrD,SAC1BpE,EAAQyH,EAAMzH,MACpB,IAAIyG,EAASoD,EAAKE,WAAa,EACd,WAAb0pB,GAAsC,WAAbA,GAAyB99B,GAAS89B,IAC3DhtB,GAAUrC,EAAQE,OACdre,GAAQwhB,EAAMC,QACdjB,GAAUoD,EAAKE,YAActC,EAAMC,KAAK5iB,OAAS,KAGrD2hB,GAAUrC,EAAQC,IAEtB,MAAM,OAAEm8B,EAAO,OAAEC,EAAO,SAAE9vB,EAAS,SAAElD,GAAc8yB,GAAU1sC,KAAM4S,EAAQgtB,EAAUzzB,GACrFqQ,GAAWnG,EAAKzC,EAAMC,KAAM,EAAG,EAAGmC,EAAM,CACpC1V,MAAOsT,EAAMtT,MACbwc,WACAlD,WACA2B,UAAWkxB,GAAWtgC,EAAOyzB,EAAU58B,GACvCwY,aAAc,SACdH,YAAa,CACTsxB,EACAC,IAGZ,CACApjB,KAAKmN,GACI32B,KAAKwwC,eAGVxwC,KAAKm1C,iBACLn1C,KAAKq1C,SAAS1e,GACd32B,KAAKy1C,aACLz1C,KAAK61C,YACL71C,KAAK21C,WAAWhf,GACpB,CACHmO,UACO,MAAM1pB,EAAOpb,KAAKvR,QACZqnD,EAAK16B,EAAKzJ,OAASyJ,EAAKzJ,MAAMozB,GAAK,EACnCgR,EAAK3zC,GAAegZ,EAAKpI,MAAQoI,EAAKpI,KAAK+xB,GAAI,GAC/CiR,EAAK5zC,GAAegZ,EAAK5H,QAAU4H,EAAK5H,OAAOuxB,EAAG,GACxD,OAAK/kC,KAAKwwC,cAAgBxwC,KAAKwpB,OAASsjB,GAAMprC,UAAU8nB,KAUjD,CACH,CACIub,EAAGgR,EACHvsB,KAAOmN,IACH32B,KAAKm1C,iBACLn1C,KAAKq1C,SAAS1e,GACd32B,KAAK61C,WAAW,GAGxB,CACI9Q,EAAGiR,EACHxsB,KAAM,KACFxpB,KAAKy1C,YAAY,GAGzB,CACI1Q,EAAG+Q,EACHtsB,KAAOmN,IACH32B,KAAK21C,WAAWhf,EAAU,IA3B3B,CACH,CACIoO,EAAG+Q,EACHtsB,KAAOmN,IACH32B,KAAKwpB,KAAKmN,EAAU,GA2BxC,CACHlH,wBAAwB1vB,GACjB,MAAMouC,EAAQnuC,KAAK4R,MAAMkuB,+BACnBmW,EAASj2C,KAAKiwB,KAAO,SACrBjpB,EAAS,GACf,IAAIlV,EAAGsR,EACP,IAAItR,EAAI,EAAGsR,EAAO+qC,EAAMl9C,OAAQa,EAAIsR,IAAQtR,EAAE,CAC1C,MAAM08B,EAAO2f,EAAMr8C,GACf08B,EAAKynB,KAAYj2C,KAAKxR,IAAQuR,GAAQyuB,EAAKzuB,OAASA,GACpDiH,EAAOhC,KAAKwpB,EAEpB,CACA,OAAOxnB,CACX,CACHwrC,wBAAwBhvC,GACjB,MAAM4X,EAAOpb,KAAKvR,QAAQkjB,MAAMyP,WAAWphB,KAAK8Y,WAAWtV,IAC3D,OAAO2a,GAAO/C,EAAKpF,KACvB,CACHkgC,aACO,MAAMC,EAAWn2C,KAAKwyC,wBAAwB,GAAGt8B,WACjD,OAAQlW,KAAK27B,eAAiB37B,KAAK2T,MAAQ3T,KAAKkZ,QAAUi9B,CAC9D,EAGJ,MAAMC,GACFt2C,YAAYC,EAAMoV,EAAOoC,GACrBvX,KAAKD,KAAOA,EACZC,KAAKmV,MAAQA,EACbnV,KAAKuX,SAAWA,EAChBvX,KAAKlS,MAAQiQ,OAAO4F,OAAO,KAC/B,CACA0yC,UAAUt2C,GACN,OAAOhC,OAAO2D,UAAU40C,cAAc10C,KAAK5B,KAAKD,KAAK2B,UAAW3B,EAAK2B,UACzE,CACH60C,SAASxoD,GACF,MAAMwR,EAAQxB,OAAOwiB,eAAexyB,GACpC,IAAIyoD,EACAC,GAAkBl3C,KAClBi3C,EAAcx2C,KAAKu2C,SAASh3C,IAEhC,MAAMzR,EAAQkS,KAAKlS,MACbU,EAAKT,EAAKS,GACV2mB,EAAQnV,KAAKmV,MAAQ,IAAM3mB,EACjC,IAAKA,EACD,MAAM,IAAI2zB,MAAM,2BAA6Bp0B,GAEjD,OAAIS,KAAMV,IAGVA,EAAMU,GAAMT,EACZ2oD,GAAiB3oD,EAAMonB,EAAOqhC,GAC1Bx2C,KAAKuX,UACLnI,GAASmI,SAASxpB,EAAKS,GAAIT,EAAK+mB,YALzBK,CAQf,CACHjE,IAAI1iB,GACG,OAAOwR,KAAKlS,MAAMU,EACtB,CACHmoD,WAAW5oD,GACJ,MAAMD,EAAQkS,KAAKlS,MACbU,EAAKT,EAAKS,GACV2mB,EAAQnV,KAAKmV,MACf3mB,KAAMV,UACCA,EAAMU,GAEb2mB,GAAS3mB,KAAM4gB,GAAS+F,YACjB/F,GAAS+F,GAAO3mB,GACnBwR,KAAKuX,iBACEzC,GAAUtmB,GAG7B,EAEJ,SAASkoD,GAAiB3oD,EAAMonB,EAAOqhC,GACnC,MAAMI,EAAe1yC,GAAMnG,OAAO4F,OAAO,MAAO,CAC5C6yC,EAAcpnC,GAAS8B,IAAIslC,GAAe,CAAC,EAC3CpnC,GAAS8B,IAAIiE,GACbpnB,EAAKqhB,WAETA,GAAS/D,IAAI8J,EAAOyhC,GAChB7oD,EAAK8oD,eACLC,GAAc3hC,EAAOpnB,EAAK8oD,eAE1B9oD,EAAKgnB,aACL3F,GAASI,SAAS2F,EAAOpnB,EAAKgnB,YAEtC,CACA,SAAS+hC,GAAc3hC,EAAO4hC,GAC1Bh5C,OAAOD,KAAKi5C,GAAQnsC,SAASlD,IACzB,MAAMsvC,EAAgBtvC,EAAS5C,MAAM,KAC/BmyC,EAAaD,EAAc7vC,MAC3B+vC,EAAc,CAChB/hC,GACFwkB,OAAOqd,GAAe50B,KAAK,KACvBvd,EAAQkyC,EAAOrvC,GAAU5C,MAAM,KAC/B2S,EAAa5S,EAAMsC,MACnBqQ,EAAc3S,EAAMud,KAAK,KAC/BhT,GAASwF,MAAMsiC,EAAaD,EAAYz/B,EAAaC,EAAW,GAExE,CACA,SAASg/B,GAAkBl3C,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,CAEA,MAAM43C,GACFr3C,cACIE,KAAKo3C,YAAc,IAAIhB,GAAc3kB,GAAmB,YAAY,GACpEzxB,KAAK8V,SAAW,IAAIsgC,GAAc1M,GAAS,YAC3C1pC,KAAKiX,QAAU,IAAIm/B,GAAcr4C,OAAQ,WACzCiC,KAAKoX,OAAS,IAAIg/B,GAActJ,GAAO,UACvC9sC,KAAKq3C,iBAAmB,CACpBr3C,KAAKo3C,YACLp3C,KAAKoX,OACLpX,KAAK8V,SAEb,CACHiJ,OAAOpc,GACA3C,KAAKs3C,MAAM,WAAY30C,EAC3B,CACA6nB,UAAU7nB,GACN3C,KAAKs3C,MAAM,aAAc30C,EAC7B,CACH40C,kBAAkB50C,GACX3C,KAAKs3C,MAAM,WAAY30C,EAAM3C,KAAKo3C,YACtC,CACHxkB,eAAejwB,GACR3C,KAAKs3C,MAAM,WAAY30C,EAAM3C,KAAK8V,SACtC,CACH0hC,cAAc70C,GACP3C,KAAKs3C,MAAM,WAAY30C,EAAM3C,KAAKiX,QACtC,CACHwgC,aAAa90C,GACN3C,KAAKs3C,MAAM,WAAY30C,EAAM3C,KAAKoX,OACtC,CACHsgC,cAAclpD,GACP,OAAOwR,KAAK23C,KAAKnpD,EAAIwR,KAAKo3C,YAAa,aAC3C,CACHQ,WAAWppD,GACJ,OAAOwR,KAAK23C,KAAKnpD,EAAIwR,KAAK8V,SAAU,UACxC,CACH+hC,UAAUrpD,GACH,OAAOwR,KAAK23C,KAAKnpD,EAAIwR,KAAKiX,QAAS,SACvC,CACH6gC,SAAStpD,GACF,OAAOwR,KAAK23C,KAAKnpD,EAAIwR,KAAKoX,OAAQ,QACtC,CACH2gC,qBAAqBp1C,GACd3C,KAAKs3C,MAAM,aAAc30C,EAAM3C,KAAKo3C,YACxC,CACHY,kBAAkBr1C,GACX3C,KAAKs3C,MAAM,aAAc30C,EAAM3C,KAAK8V,SACxC,CACHmiC,iBAAiBt1C,GACV3C,KAAKs3C,MAAM,aAAc30C,EAAM3C,KAAKiX,QACxC,CACHihC,gBAAgBv1C,GACT3C,KAAKs3C,MAAM,aAAc30C,EAAM3C,KAAKoX,OACxC,CACHkgC,MAAMzsC,EAAQlI,EAAMw1C,GACb,IACOx1C,GACLiI,SAASwtC,IACP,MAAMC,EAAMF,GAAiBn4C,KAAKs4C,oBAAoBF,GAClDD,GAAiBE,EAAIhC,UAAU+B,IAAQC,IAAQr4C,KAAKiX,SAAWmhC,EAAI5pD,GACnEwR,KAAKu4C,MAAM1tC,EAAQwtC,EAAKD,GAExBt1C,GAAKs1C,GAAMrqD,IACP,MAAMyqD,EAAUL,GAAiBn4C,KAAKs4C,oBAAoBvqD,GAC1DiS,KAAKu4C,MAAM1tC,EAAQ2tC,EAASzqD,EAAK,GAEzC,GAER,CACHwqD,MAAM1tC,EAAQ4tC,EAAUC,GACjB,MAAMC,EAAcvzC,GAAYyF,GAChCpI,GAASi2C,EAAU,SAAWC,GAAc,GAAID,GAChDD,EAAS5tC,GAAQ6tC,GACjBj2C,GAASi2C,EAAU,QAAUC,GAAc,GAAID,EACnD,CACHJ,oBAAoBv4C,GACb,IAAI,IAAIjO,EAAI,EAAGA,EAAIkO,KAAKq3C,iBAAiBpmD,OAAQa,IAAI,CACjD,MAAMumD,EAAMr4C,KAAKq3C,iBAAiBvlD,GAClC,GAAIumD,EAAIhC,UAAUt2C,GACd,OAAOs4C,CAEf,CACA,OAAOr4C,KAAKiX,OAChB,CACH0gC,KAAKnpD,EAAI2pD,EAAep4C,GACjB,MAAMhS,EAAOoqD,EAAcjnC,IAAI1iB,GAC/B,QAAa4C,IAATrD,EACA,MAAM,IAAIo0B,MAAM,IAAM3zB,EAAK,yBAA2BuR,EAAO,KAEjE,OAAOhS,CACX,EAEJ,IAAI0qD,GAA2B,IAAItB,GAEnC,MAAMyB,GACF94C,cACIE,KAAK64C,MAAQ,EACjB,CACHC,OAAOlnC,EAAOmnC,EAAMp2C,EAAM6f,GACN,eAATu2B,IACA/4C,KAAK64C,MAAQ74C,KAAKg5C,mBAAmBpnC,GAAO,GAC5C5R,KAAK4oB,QAAQ5oB,KAAK64C,MAAOjnC,EAAO,YAEpC,MAAMmD,EAAcyN,EAASxiB,KAAKqV,aAAazD,GAAO4Q,OAAOA,GAAUxiB,KAAKqV,aAAazD,GACnF5K,EAAShH,KAAK4oB,QAAQ7T,EAAanD,EAAOmnC,EAAMp2C,GAKtD,MAJa,iBAATo2C,IACA/4C,KAAK4oB,QAAQ7T,EAAanD,EAAO,QACjC5R,KAAK4oB,QAAQ5oB,KAAK64C,MAAOjnC,EAAO,cAE7B5K,CACX,CACH4hB,QAAQ7T,EAAanD,EAAOmnC,EAAMp2C,GAC3BA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMs2C,KAAclkC,EAAY,CACjC,MAAMmkC,EAASD,EAAWC,OACpBruC,EAASquC,EAAOH,GAChBxW,EAAS,CACX3wB,EACAjP,EACAs2C,EAAWxqD,SAEf,IAAyC,IAArCgU,GAASoI,EAAQ03B,EAAQ2W,IAAqBv2C,EAAKw2C,WACnD,OAAO,CAEf,CACA,OAAO,CACX,CACAC,aACS53C,GAAcxB,KAAKw5B,UACpBx5B,KAAKq5C,UAAYr5C,KAAKw5B,OACtBx5B,KAAKw5B,YAASpoC,EAEtB,CACHikB,aAAazD,GACN,GAAI5R,KAAKw5B,OACL,OAAOx5B,KAAKw5B,OAEhB,MAAMzkB,EAAc/U,KAAKw5B,OAASx5B,KAAKg5C,mBAAmBpnC,GAE1D,OADA5R,KAAKs5C,oBAAoB1nC,GAClBmD,CACX,CACAikC,mBAAmBpnC,EAAOwb,GACtB,MAAMjB,EAASva,GAASA,EAAMua,OACxB19B,EAAU2T,GAAe+pB,EAAO19B,SAAW09B,EAAO19B,QAAQwoB,QAAS,CAAC,GACpEA,EAAUsiC,GAAWptB,GAC3B,OAAmB,IAAZ19B,GAAsB2+B,EAAWosB,GAAkB5nC,EAAOqF,EAASxoB,EAAS2+B,GAAhD,EACvC,CACHksB,oBAAoB1nC,GACb,MAAM6nC,EAAsBz5C,KAAKq5C,WAAa,GACxCtkC,EAAc/U,KAAKw5B,OACnByF,EAAO,CAACjvC,EAAGC,IAAID,EAAEwyB,QAAQtvB,IAAKjD,EAAEypD,MAAM/0C,GAAIzR,EAAEgmD,OAAO1qD,KAAOmW,EAAEu0C,OAAO1qD,OACzEwR,KAAK4oB,QAAQqW,EAAKwa,EAAqB1kC,GAAcnD,EAAO,QAC5D5R,KAAK4oB,QAAQqW,EAAKlqB,EAAa0kC,GAAsB7nC,EAAO,QAChE,EAEH,SAAS2nC,GAAWptB,GACjB,MAAMwtB,EAAW,CAAC,EACZ1iC,EAAU,GACVnZ,EAAOC,OAAOD,KAAK26C,GAASxhC,QAAQnpB,OAC1C,IAAI,IAAIgE,EAAI,EAAGA,EAAIgM,EAAK7M,OAAQa,IAC5BmlB,EAAQjS,KAAKyzC,GAASZ,UAAU/5C,EAAKhM,KAEzC,MAAMimB,EAAQoU,EAAOlV,SAAW,GAChC,IAAI,IAAInlB,EAAI,EAAGA,EAAIimB,EAAM9mB,OAAQa,IAAI,CACjC,MAAMonD,EAASnhC,EAAMjmB,IACY,IAA7BmlB,EAAQnT,QAAQo1C,KAChBjiC,EAAQjS,KAAKk0C,GACbS,EAAST,EAAO1qD,KAAM,EAE9B,CACA,MAAO,CACHyoB,UACA0iC,WAER,CACA,SAASC,GAAQnrD,EAAS2+B,GACtB,OAAKA,IAAmB,IAAZ3+B,GAGI,IAAZA,EACO,CAAC,EAELA,EALI,IAMf,CACA,SAAS+qD,GAAkB5nC,GAAO,QAAEqF,EAAQ,SAAE0iC,GAAalrD,EAAS2+B,GAChE,MAAMpmB,EAAS,GACT2O,EAAU/D,EAAMkH,aACtB,IAAK,MAAMogC,KAAUjiC,EAAQ,CACzB,MAAMzoB,EAAK0qD,EAAO1qD,GACZ4sB,EAAOw+B,GAAQnrD,EAAQD,GAAK4+B,GACrB,OAAThS,GAGJpU,EAAOhC,KAAK,CACRk0C,SACAzqD,QAASorD,GAAWjoC,EAAMua,OAAQ,CAC9B+sB,SACAnhC,MAAO4hC,EAASnrD,IACjB4sB,EAAMzF,IAEjB,CACA,OAAO3O,CACX,CACA,SAAS6yC,GAAW1tB,GAAQ,OAAE+sB,EAAO,MAAEnhC,GAAUqD,EAAMzF,GACnD,MAAM7X,EAAOquB,EAAO2tB,gBAAgBZ,GAC9B/5B,EAASgN,EAAOwI,gBAAgBvZ,EAAMtd,GAI5C,OAHIia,GAASmhC,EAAO9pC,UAChB+P,EAAOna,KAAKk0C,EAAO9pC,UAEhB+c,EAAOyI,eAAezV,EAAQxJ,EAAS,CAC1C,IACD,CACC6L,YAAY,EACZC,WAAW,EACXF,SAAS,GAEjB,CAEA,SAASw4B,GAAah6C,EAAMtR,GACxB,MAAMurD,EAAkB5qC,GAASqG,SAAS1V,IAAS,CAAC,EAC9Ck6C,GAAkBxrD,EAAQgnB,UAAY,CAAC,GAAG1V,IAAS,CAAC,EAC1D,OAAOk6C,EAAezjC,WAAa/nB,EAAQ+nB,WAAawjC,EAAgBxjC,WAAa,GACzF,CACA,SAAS0jC,GAA0B1rD,EAAIgoB,GACnC,IAAIyZ,EAAOzhC,EAMX,MALW,YAAPA,EACAyhC,EAAOzZ,EACO,YAAPhoB,IACPyhC,EAAqB,MAAdzZ,EAAoB,IAAM,KAE9ByZ,CACX,CACA,SAASkqB,GAA0BlqB,EAAMzZ,GACrC,OAAOyZ,IAASzZ,EAAY,UAAY,SAC5C,CACA,SAAS4jC,GAAc5rD,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CACA,SAAS6rD,GAAiBza,GACtB,MAAiB,QAAbA,GAAmC,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,CAGJ,CACA,SAAS0a,GAAc9rD,KAAO+rD,GAC1B,GAAIH,GAAc5rD,GACd,OAAOA,EAEX,IAAK,MAAM4sB,KAAQm/B,EAAa,CAC5B,MAAMtqB,EAAO7U,EAAK6U,MAAQoqB,GAAiBj/B,EAAKwkB,WAAapxC,EAAGyC,OAAS,GAAKmpD,GAAc5rD,EAAG,GAAGiQ,eAClG,GAAIwxB,EACA,OAAOA,CAEf,CACA,MAAM,IAAI9N,MAAM,6BAA6B3zB,uDACjD,CACA,SAASgsD,GAAmBhsD,EAAIyhC,EAAMU,GAClC,GAAIA,EAAQV,EAAO,YAAczhC,EAC7B,MAAO,CACHyhC,OAGZ,CACA,SAASwqB,GAAyBjsD,EAAI29B,GAClC,GAAIA,EAAOx9B,MAAQw9B,EAAOx9B,KAAK8mB,SAAU,CACrC,MAAMilC,EAAUvuB,EAAOx9B,KAAK8mB,SAAS+M,QAAQryB,GAAIA,EAAE+iC,UAAY1kC,GAAM2B,EAAEijC,UAAY5kC,IACnF,GAAIksD,EAAQzpD,OACR,OAAOupD,GAAmBhsD,EAAI,IAAKksD,EAAQ,KAAOF,GAAmBhsD,EAAI,IAAKksD,EAAQ,GAE9F,CACA,MAAO,CAAC,CACZ,CACA,SAASC,GAAiBxuB,EAAQ19B,GAC9B,MAAMmsD,EAAgB9lC,GAAUqX,EAAOpsB,OAAS,CAC5CqX,OAAQ,CAAC,GAEPyjC,EAAepsD,EAAQ2oB,QAAU,CAAC,EAClC0jC,EAAiBf,GAAa5tB,EAAOpsB,KAAMtR,GAC3C2oB,EAASrZ,OAAO4F,OAAO,MA8C7B,OA7CA5F,OAAOD,KAAK+8C,GAAcjwC,SAASpc,IAC/B,MAAMusD,EAAYF,EAAarsD,GAC/B,IAAKsT,GAASi5C,GACV,OAAO18B,QAAQ28B,MAAM,0CAA0CxsD,KAEnE,GAAIusD,EAAU/5B,OACV,OAAO3C,QAAQC,KAAK,kDAAkD9vB,KAE1E,MAAMyhC,EAAOqqB,GAAc9rD,EAAIusD,EAAWN,GAAyBjsD,EAAI29B,GAAS/c,GAASgI,OAAO2jC,EAAUh7C,OACpGk7C,EAAYd,GAA0BlqB,EAAM6qB,GAC5CI,EAAsBN,EAAcxjC,QAAU,CAAC,EACrDA,EAAO5oB,GAAM8V,GAAQvG,OAAO4F,OAAO,MAAO,CACtC,CACIssB,QAEJ8qB,EACAG,EAAoBjrB,GACpBirB,EAAoBD,IACtB,IAEN9uB,EAAOx9B,KAAK8mB,SAAS7K,SAAS+lB,IAC1B,MAAM5wB,EAAO4wB,EAAQ5wB,MAAQosB,EAAOpsB,KAC9ByW,EAAYma,EAAQna,WAAaujC,GAAah6C,EAAMtR,GACpDurD,EAAkBllC,GAAU/U,IAAS,CAAC,EACtCm7C,EAAsBlB,EAAgB5iC,QAAU,CAAC,EACvDrZ,OAAOD,KAAKo9C,GAAqBtwC,SAASuwC,IACtC,MAAMlrB,EAAOiqB,GAA0BiB,EAAW3kC,GAC5ChoB,EAAKmiC,EAAQV,EAAO,WAAaA,EACvC7Y,EAAO5oB,GAAM4oB,EAAO5oB,IAAOuP,OAAO4F,OAAO,MACzCW,GAAQ8S,EAAO5oB,GAAK,CAChB,CACIyhC,QAEJ4qB,EAAarsD,GACb0sD,EAAoBC,IACtB,GACJ,IAENp9C,OAAOD,KAAKsZ,GAAQxM,SAAS5c,IACzB,MAAMmpB,EAAQC,EAAOppB,GACrBsW,GAAQ6S,EAAO,CACX/H,GAASgI,OAAOD,EAAMpX,MACtBqP,GAAS+H,OACX,IAECC,CACX,CACA,SAASgkC,GAAYjvB,GACjB,MAAM19B,EAAU09B,EAAO19B,UAAY09B,EAAO19B,QAAU,CAAC,GACrDA,EAAQwoB,QAAU7U,GAAe3T,EAAQwoB,QAAS,CAAC,GACnDxoB,EAAQ2oB,OAASujC,GAAiBxuB,EAAQ19B,EAC9C,CACA,SAAS4sD,GAAS1sD,GAId,OAHAA,EAAOA,GAAQ,CAAC,EAChBA,EAAK8mB,SAAW9mB,EAAK8mB,UAAY,GACjC9mB,EAAK2mC,OAAS3mC,EAAK2mC,QAAU,GACtB3mC,CACX,CACA,SAAS2sD,GAAWnvB,GAIhB,OAHAA,EAASA,GAAU,CAAC,EACpBA,EAAOx9B,KAAO0sD,GAASlvB,EAAOx9B,MAC9BysD,GAAYjvB,GACLA,CACX,CACA,MAAMovB,GAAW,IAAI5qC,IACf6qC,GAAa,IAAIlwC,IACvB,SAASmwC,GAAW3qC,EAAU4qC,GAC1B,IAAI59C,EAAOy9C,GAASrqC,IAAIJ,GAMxB,OALKhT,IACDA,EAAO49C,IACPH,GAASlwC,IAAIyF,EAAUhT,GACvB09C,GAAWz8B,IAAIjhB,IAEZA,CACX,CACA,MAAM69C,GAAa,CAACtwC,EAAKjL,EAAKpS,KAC1B,MAAMotB,EAAOlW,GAAiB9E,EAAKpS,QACtBoD,IAATgqB,GACA/P,EAAI0T,IAAI3D,EACZ,EAEJ,MAAMwgC,GACF97C,YAAYqsB,GACRnsB,KAAK67C,QAAUP,GAAWnvB,GAC1BnsB,KAAK87C,YAAc,IAAInrC,IACvB3Q,KAAK+7C,eAAiB,IAAIprC,GAC9B,CACIiF,eACA,OAAO5V,KAAK67C,QAAQjmC,QACxB,CACI7V,WACA,OAAOC,KAAK67C,QAAQ97C,IACxB,CACIA,SAAKA,GACLC,KAAK67C,QAAQ97C,KAAOA,CACxB,CACIpR,WACA,OAAOqR,KAAK67C,QAAQltD,IACxB,CACIA,SAAKA,GACLqR,KAAK67C,QAAQltD,KAAO0sD,GAAS1sD,EACjC,CACIF,cACA,OAAOuR,KAAK67C,QAAQptD,OACxB,CACIA,YAAQA,GACRuR,KAAK67C,QAAQptD,QAAUA,CAC3B,CACIwoB,cACA,OAAOjX,KAAK67C,QAAQ5kC,OACxB,CACA0U,SACI,MAAMQ,EAASnsB,KAAK67C,QACpB77C,KAAKg8C,aACLZ,GAAYjvB,EAChB,CACA6vB,aACIh8C,KAAK87C,YAAYG,QACjBj8C,KAAK+7C,eAAeE,OACxB,CACHvnB,iBAAiBwnB,GACV,OAAOT,GAAWS,GAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,MAGhB,CACH5kB,0BAA0B4kB,EAAa7kB,GAChC,OAAOokB,GAAW,GAAGS,gBAA0B7kB,KAAc,IAAI,CACzD,CACI,YAAY6kB,iBAA2B7kB,IACvC,eAAeA,KAEnB,CACI,YAAY6kB,IACZ,MAGhB,CACHjlB,wBAAwBilB,EAAanlB,GAC9B,OAAO0kB,GAAW,GAAGS,KAAenlB,KAAe,IAAI,CAC/C,CACI,YAAYmlB,cAAwBnlB,IACpC,YAAYmlB,IACZ,YAAYnlB,IACZ,MAGhB,CACH+iB,gBAAgBZ,GACT,MAAM1qD,EAAK0qD,EAAO1qD,GACZuR,EAAOC,KAAKD,KAClB,OAAO07C,GAAW,GAAG17C,YAAevR,KAAM,IAAI,CACtC,CACI,WAAWA,OACR0qD,EAAOiD,wBAA0B,MAGpD,CACHC,cAAcC,EAAWC,GAClB,MAAMR,EAAc97C,KAAK87C,YACzB,IAAIr8B,EAAQq8B,EAAY5qC,IAAImrC,GAK5B,OAJK58B,IAAS68B,IACV78B,EAAQ,IAAI9O,IACZmrC,EAAYzwC,IAAIgxC,EAAW58B,IAExBA,CACX,CACHkV,gBAAgB0nB,EAAWE,EAAUD,GAC9B,MAAM,QAAE7tD,EAAQ,KAAEsR,GAAUC,KACtByf,EAAQzf,KAAKo8C,cAAcC,EAAWC,GACtCnrB,EAAS1R,EAAMvO,IAAIqrC,GACzB,GAAIprB,EACA,OAAOA,EAEX,MAAMhS,EAAS,IAAI7T,IACnBixC,EAAS3xC,SAAS9M,IACVu+C,IACAl9B,EAAOJ,IAAIs9B,GACXv+C,EAAK8M,SAAS5c,GAAM2tD,GAAWx8B,EAAQk9B,EAAWruD,MAEtD8P,EAAK8M,SAAS5c,GAAM2tD,GAAWx8B,EAAQ1wB,EAAST,KAChD8P,EAAK8M,SAAS5c,GAAM2tD,GAAWx8B,EAAQrK,GAAU/U,IAAS,CAAC,EAAG/R,KAC9D8P,EAAK8M,SAAS5c,GAAM2tD,GAAWx8B,EAAQ/P,GAAUphB,KACjD8P,EAAK8M,SAAS5c,GAAM2tD,GAAWx8B,EAAQpK,GAAa/mB,IAAK,IAE7D,MAAMyZ,EAAQtV,MAAM2M,KAAKqgB,GAOzB,OANqB,IAAjB1X,EAAMxW,QACNwW,EAAMzC,KAAKjH,OAAO4F,OAAO,OAEzB63C,GAAW91C,IAAI62C,IACf98B,EAAMpU,IAAIkxC,EAAU90C,GAEjBA,CACX,CACH+0C,oBACO,MAAM,QAAE/tD,EAAQ,KAAEsR,GAAUC,KAC5B,MAAO,CACHvR,EACAqmB,GAAU/U,IAAS,CAAC,EACpBqP,GAASqG,SAAS1V,IAAS,CAAC,EAC5B,CACIA,QAEJqP,GACA2F,GAER,CACHmiB,oBAAoB/X,EAAQ7gB,EAAOqX,EAASyJ,EAAW,CAChD,KAEA,MAAMpY,EAAS,CACX+lB,SAAS,IAEP,SAAE5nB,EAAS,YAAEs3C,GAAiBC,GAAY18C,KAAK+7C,eAAgB58B,EAAQC,GAC7E,IAAI3wB,EAAU0W,EACd,GAAIw3C,GAAYx3C,EAAU7G,GAAQ,CAC9B0I,EAAO+lB,SAAU,EACjBpX,EAAUpQ,GAAWoQ,GAAWA,IAAYA,EAC5C,MAAMinC,EAAc58C,KAAK40B,eAAezV,EAAQxJ,EAAS8mC,GACzDhuD,EAAUmyB,GAAezb,EAAUwQ,EAASinC,EAChD,CACA,IAAK,MAAM7+B,KAAQzf,EACf0I,EAAO+W,GAAQtvB,EAAQsvB,GAE3B,OAAO/W,CACX,CACH4tB,eAAezV,EAAQxJ,EAASyJ,EAAW,CACpC,IACD2B,GACC,MAAM,SAAE5b,GAAcu3C,GAAY18C,KAAK+7C,eAAgB58B,EAAQC,GAC/D,OAAOtd,GAAS6T,GAAWiL,GAAezb,EAAUwQ,OAASvkB,EAAW2vB,GAAsB5b,CAClG,EAEJ,SAASu3C,GAAYG,EAAe19B,EAAQC,GACxC,IAAIK,EAAQo9B,EAAc3rC,IAAIiO,GACzBM,IACDA,EAAQ,IAAI9O,IACZksC,EAAcxxC,IAAI8T,EAAQM,IAE9B,MAAM3O,EAAWsO,EAASgD,OAC1B,IAAI+O,EAAS1R,EAAMvO,IAAIJ,GACvB,IAAKqgB,EAAQ,CACT,MAAMhsB,EAAW+Z,GAAgBC,EAAQC,GACzC+R,EAAS,CACLhsB,WACAs3C,YAAar9B,EAASoD,QAAQ7hB,IAAKA,EAAElC,cAAc+T,SAAS,YAEhEiN,EAAMpU,IAAIyF,EAAUqgB,EACxB,CACA,OAAOA,CACX,CACA,MAAM2rB,GAAer7C,GAAQK,GAASL,IAAU1D,OAAO0uB,oBAAoBhrB,GAAOyoB,QAAO,CAACC,EAAKn8B,IAAMm8B,GAAO5kB,GAAW9D,EAAMzT,MAAO,GACpI,SAAS2uD,GAAY97B,EAAOviB,GACxB,MAAM,aAAEqjB,EAAa,YAAEC,GAAiBvM,GAAawL,GACrD,IAAK,MAAM9C,KAAQzf,EAAM,CACrB,MAAMkjB,EAAaG,EAAa5D,GAC1B0D,EAAYG,EAAY7D,GACxBtc,GAASggB,GAAaD,IAAeX,EAAM9C,GACjD,GAAIyD,IAAejc,GAAW9D,IAAUq7C,GAAYr7C,KAAWggB,GAAarvB,GAAQqP,GAChF,OAAO,CAEf,CACA,OAAO,CACX,CAEA,IAAIs7C,GAAU,QAEd,MAAMC,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqBrd,EAAU3P,GACpC,MAAoB,QAAb2P,GAAmC,WAAbA,IAAgE,IAAvCod,GAAgBl5C,QAAQ87B,IAA6B,MAAT3P,CACtG,CACA,SAASitB,GAAcC,EAAIC,GACvB,OAAO,SAASptD,EAAGC,GACf,OAAOD,EAAEmtD,KAAQltD,EAAEktD,GAAMntD,EAAEotD,GAAMntD,EAAEmtD,GAAMptD,EAAEmtD,GAAMltD,EAAEktD,EACvD,CACJ,CACA,SAASE,GAAqB1nC,GAC1B,MAAM/D,EAAQ+D,EAAQ/D,MAChB2a,EAAmB3a,EAAMnjB,QAAQshB,UACvC6B,EAAMs+B,cAAc,eACpBztC,GAAS8pB,GAAoBA,EAAiB+wB,WAAY,CACtD3nC,GACD/D,EACP,CACA,SAAS2rC,GAAoB5nC,GACzB,MAAM/D,EAAQ+D,EAAQ/D,MAChB2a,EAAmB3a,EAAMnjB,QAAQshB,UACvCtN,GAAS8pB,GAAoBA,EAAiBixB,WAAY,CACtD7nC,GACD/D,EACP,CACC,SAAS6rC,GAAU1vD,GAShB,OARIq1B,MAAqC,kBAATr1B,EAC5BA,EAAOs1B,SAASq6B,eAAe3vD,GACxBA,GAAQA,EAAKkD,SACpBlD,EAAOA,EAAK,IAEZA,GAAQA,EAAK8qB,SACb9qB,EAAOA,EAAK8qB,QAET9qB,CACX,CACA,MAAM4vD,GAAY,CAAC,EACbC,GAAY5vD,IACd,MAAM6qB,EAAS4kC,GAAUzvD,GACzB,OAAO+P,OAAOoM,OAAOwzC,IAAWn7B,QAAQtyB,GAAIA,EAAE2oB,SAAWA,IAAQ1R,KAAK,EAE1E,SAAS02C,GAAgBz9C,EAAK0I,EAAO6vB,GACjC,MAAM76B,EAAOC,OAAOD,KAAKsC,GACzB,IAAK,MAAMpS,KAAO8P,EAAK,CACnB,MAAMggD,GAAU9vD,EAChB,GAAI8vD,GAAUh1C,EAAO,CACjB,MAAMrH,EAAQrB,EAAIpS,UACXoS,EAAIpS,IACP2qC,EAAO,GAAKmlB,EAASh1C,KACrB1I,EAAI09C,EAASnlB,GAAQl3B,EAE7B,CACJ,CACJ,CACC,SAASs8C,GAAmB3tD,EAAG4tD,EAAWC,EAAaC,GACpD,OAAKD,GAA0B,aAAX7tD,EAAE2P,KAGlBm+C,EACOF,EAEJ5tD,EALI,IAMf,CACA,SAAS+tD,GAAe3vB,GACpB,MAAM,OAAEhB,EAAO,OAAEC,GAAYe,EAC7B,GAAIhB,GAAUC,EACV,MAAO,CACHnhB,KAAMkhB,EAAOlhB,KACbC,MAAOihB,EAAOjhB,MACdiE,IAAKid,EAAOjd,IACZC,OAAQgd,EAAOhd,OAG3B,CACA,MAAM2tC,GACF1sB,gBAAkBtiB,GAClBsiB,iBAAmBisB,GACnBjsB,iBAAmB5c,GACnB4c,gBAAkB+mB,GAClB/mB,eAAiBqrB,GACjBrrB,gBAAkBksB,GAClBlsB,mBAAmB5jC,GACf2qD,GAAS15B,OAAOjxB,GAChBuwD,IACJ,CACA3sB,qBAAqB5jC,GACjB2qD,GAASjuB,UAAU18B,GACnBuwD,IACJ,CACAv+C,YAAY/R,EAAMuwD,GACd,MAAMnyB,EAASnsB,KAAKmsB,OAAS,IAAIyvB,GAAO0C,GAClCC,EAAgBd,GAAU1vD,GAC1BywD,EAAgBZ,GAASW,GAC/B,GAAIC,EACA,MAAM,IAAIr8B,MAAM,4CAA+Cq8B,EAAchwD,GAA7D,kDAA6HgwD,EAAc3lC,OAAOrqB,GAAK,oBAE3K,MAAMC,EAAU09B,EAAOyI,eAAezI,EAAOqwB,oBAAqBx8C,KAAK8Y,cACvE9Y,KAAK4V,SAAW,IAAKuW,EAAOvW,UAAY4zB,GAAgB+U,IACxDv+C,KAAK4V,SAASgwB,aAAazZ,GAC3B,MAAMxW,EAAU3V,KAAK4V,SAAS6vB,eAAe8Y,EAAe9vD,EAAQ63B,aAC9DzN,EAASlD,GAAWA,EAAQkD,OAC5BK,EAASL,GAAUA,EAAOK,OAC1BvF,EAAQkF,GAAUA,EAAOlF,MAC/B3T,KAAKxR,GAAK+S,KACVvB,KAAKqW,IAAMV,EACX3V,KAAK6Y,OAASA,EACd7Y,KAAK2T,MAAQA,EACb3T,KAAKkZ,OAASA,EACdlZ,KAAKy+C,SAAWhwD,EAChBuR,KAAK0+C,aAAe1+C,KAAKsmB,YACzBtmB,KAAK8kC,QAAU,GACf9kC,KAAK2+C,UAAY,GACjB3+C,KAAK8vB,aAAU1+B,EACf4O,KAAK+hC,MAAQ,GACb/hC,KAAK0Y,6BAA0BtnB,EAC/B4O,KAAK22B,eAAYvlC,EACjB4O,KAAKypB,QAAU,GACfzpB,KAAK4+C,gBAAaxtD,EAClB4O,KAAK6+C,WAAa,CAAC,EAClB7+C,KAAK8+C,0BAAuB1tD,EAC7B4O,KAAK++C,gBAAkB,GACvB/+C,KAAKoX,OAAS,CAAC,EACfpX,KAAKg/C,SAAW,IAAIpG,GACpB54C,KAAKmpC,SAAW,CAAC,EACjBnpC,KAAKi/C,eAAiB,CAAC,EACvBj/C,KAAKk/C,UAAW,EAChBl/C,KAAK03B,yBAAsBtmC,EAC3B4O,KAAKsyB,cAAWlhC,EAChB4O,KAAKm/C,UAAYtzC,IAAU6K,GAAO1W,KAAK2rB,OAAOjV,IAAOjoB,EAAQ2wD,aAAe,GAC5Ep/C,KAAK+4B,aAAe,GACpB4kB,GAAU39C,KAAKxR,IAAMwR,KAChB2V,GAAYkD,GAIjB4R,GAAST,OAAOhqB,KAAM,WAAYq9C,IAClC5yB,GAAST,OAAOhqB,KAAM,WAAYu9C,IAClCv9C,KAAKq/C,cACDr/C,KAAKk/C,UACLl/C,KAAK2rB,UAPLtN,QAAQ28B,MAAM,oEAStB,CACI10B,kBACA,MAAQ73B,SAAS,YAAE63B,EAAY,oBAAEzP,GAAuB,MAAElD,EAAM,OAAEuF,EAAO,aAAEwlC,GAAkB1+C,KAC7F,OAAKwB,GAAc8kB,GAGfzP,GAAuB6nC,EAChBA,EAEJxlC,EAASvF,EAAQuF,EAAS,KALtBoN,CAMf,CACI33B,WACA,OAAOqR,KAAKmsB,OAAOx9B,IACvB,CACIA,SAAKA,GACLqR,KAAKmsB,OAAOx9B,KAAOA,CACvB,CACIF,cACA,OAAOuR,KAAKy+C,QAChB,CACIhwD,YAAQA,GACRuR,KAAKmsB,OAAO19B,QAAUA,CAC1B,CACIgqD,eACA,OAAOA,EACX,CACH4G,cASO,OARAr/C,KAAKkwC,cAAc,cACflwC,KAAKvR,QAAQyoB,WACblX,KAAKgQ,SAEL0W,GAAY1mB,KAAMA,KAAKvR,QAAQinB,kBAEnC1V,KAAKs/C,aACLt/C,KAAKkwC,cAAc,aACZlwC,IACX,CACAi8C,QAEI,OADArjC,GAAY5Y,KAAK6Y,OAAQ7Y,KAAKqW,KACvBrW,IACX,CACAsqB,OAEI,OADAG,GAASH,KAAKtqB,MACPA,IACX,CACHgQ,OAAO2D,EAAOuF,GACFuR,GAASlB,QAAQvpB,MAGlBA,KAAKu/C,kBAAoB,CACrB5rC,QACAuF,UAJJlZ,KAAKw/C,QAAQ7rC,EAAOuF,EAO5B,CACAsmC,QAAQ7rC,EAAOuF,GACX,MAAMzqB,EAAUuR,KAAKvR,QACfoqB,EAAS7Y,KAAK6Y,OACdyN,EAAc73B,EAAQooB,qBAAuB7W,KAAKsmB,YAClDm5B,EAAUz/C,KAAK4V,SAASuQ,eAAetN,EAAQlF,EAAOuF,EAAQoN,GAC9Do5B,EAAWjxD,EAAQinB,kBAAoB1V,KAAK4V,SAASC,sBACrDa,EAAO1W,KAAK2T,MAAQ,SAAW,SACrC3T,KAAK2T,MAAQ8rC,EAAQ9rC,MACrB3T,KAAKkZ,OAASumC,EAAQvmC,OACtBlZ,KAAK0+C,aAAe1+C,KAAKsmB,YACpBI,GAAY1mB,KAAM0/C,GAAU,KAGjC1/C,KAAKkwC,cAAc,SAAU,CACzBzqC,KAAMg6C,IAEVh9C,GAAShU,EAAQkxD,SAAU,CACvB3/C,KACAy/C,GACDz/C,MACCA,KAAKk/C,UACDl/C,KAAKm/C,UAAUzoC,IACf1W,KAAK4/C,SAGjB,CACAC,sBACI,MAAMpxD,EAAUuR,KAAKvR,QACfqxD,EAAgBrxD,EAAQ2oB,QAAU,CAAC,EACzCtU,GAAKg9C,GAAe,CAACC,EAAa9J,KAC9B8J,EAAYvxD,GAAKynD,CAAM,GAE/B,CACH+J,sBACO,MAAMvxD,EAAUuR,KAAKvR,QACfwxD,EAAYxxD,EAAQ2oB,OACpBA,EAASpX,KAAKoX,OACd8oC,EAAUniD,OAAOD,KAAKsZ,GAAQ8S,QAAO,CAAC9pB,EAAK5R,KAC7C4R,EAAI5R,IAAM,EACH4R,IACR,CAAC,GACJ,IAAItS,EAAQ,GACRmyD,IACAnyD,EAAQA,EAAM6rC,OAAO57B,OAAOD,KAAKmiD,GAAW5tD,KAAK7D,IAC7C,MAAM+rD,EAAe0F,EAAUzxD,GACzByhC,EAAOqqB,GAAc9rD,EAAI+rD,GACzB4F,EAAoB,MAATlwB,EACX0L,EAAwB,MAAT1L,EACrB,MAAO,CACHxhC,QAAS8rD,EACT6F,UAAWD,EAAW,YAAcxkB,EAAe,SAAW,OAC9D0kB,MAAOF,EAAW,eAAiBxkB,EAAe,WAAa,SAClE,MAGT74B,GAAKhV,GAAQC,IACT,MAAMwsD,EAAexsD,EAAKU,QACpBD,EAAK+rD,EAAa/rD,GAClByhC,EAAOqqB,GAAc9rD,EAAI+rD,GACzB+F,EAAYl+C,GAAem4C,EAAax6C,KAAMhS,EAAKsyD,YAC3BjvD,IAA1BmpD,EAAa3a,UAA0Bqd,GAAqB1C,EAAa3a,SAAU3P,KAAUgtB,GAAqBlvD,EAAKqyD,aACvH7F,EAAa3a,SAAW7xC,EAAKqyD,WAEjCF,EAAQ1xD,IAAM,EACd,IAAI2oB,EAAQ,KACZ,GAAI3oB,KAAM4oB,GAAUA,EAAO5oB,GAAIuR,OAASugD,EACpCnpC,EAAQC,EAAO5oB,OACZ,CACH,MAAM+xD,EAAa9H,GAASX,SAASwI,GACrCnpC,EAAQ,IAAIopC,EAAW,CACnB/xD,KACAuR,KAAMugD,EACNjqC,IAAKrW,KAAKqW,IACVzE,MAAO5R,OAEXoX,EAAOD,EAAM3oB,IAAM2oB,CACvB,CACAA,EAAM4nB,KAAKwb,EAAc9rD,EAAQ,IAErCqU,GAAKo9C,GAAS,CAACM,EAAYhyD,KAClBgyD,UACMppC,EAAO5oB,EAClB,IAEJsU,GAAKsU,GAASD,IACVgrB,GAAQ7V,UAAUtsB,KAAMmX,EAAOA,EAAM1oB,SACrC0zC,GAAQ0C,OAAO7kC,KAAMmX,EAAM,GAEnC,CACHspC,kBACO,MAAM3yB,EAAW9tB,KAAK2+C,UAChBnmB,EAAUx4B,KAAKrR,KAAK8mB,SAASxkB,OAC7BsnC,EAAUzK,EAAS78B,OAEzB,GADA68B,EAAS5mB,MAAK,CAAClX,EAAGC,IAAID,EAAEwT,MAAQvT,EAAEuT,QAC9B+0B,EAAUC,EAAS,CACnB,IAAI,IAAI1mC,EAAI0mC,EAAS1mC,EAAIymC,IAAWzmC,EAChCkO,KAAK0gD,oBAAoB5uD,GAE7Bg8B,EAAS3iB,OAAOqtB,EAASD,EAAUC,EACvC,CACAx4B,KAAK++C,gBAAkBjxB,EAASjsB,MAAM,GAAGqF,KAAKg2C,GAAc,QAAS,SACzE,CACHyD,8BACO,MAAQhC,UAAW7wB,EAAWn/B,MAAM,SAAE8mB,IAAiBzV,KACnD8tB,EAAS78B,OAASwkB,EAASxkB,eACpB+O,KAAK8vB,QAEhBhC,EAASljB,SAAQ,CAAC4jB,EAAMhrB,KACqC,IAArDiS,EAAS+M,QAAQtvB,GAAIA,IAAMs7B,EAAKoyB,WAAU3vD,QAC1C+O,KAAK0gD,oBAAoBl9C,EAC7B,GAER,CACAq9C,2BACI,MAAMC,EAAiB,GACjBrrC,EAAWzV,KAAKrR,KAAK8mB,SAC3B,IAAI3jB,EAAGsR,EAEP,IADApD,KAAK2gD,8BACD7uD,EAAI,EAAGsR,EAAOqS,EAASxkB,OAAQa,EAAIsR,EAAMtR,IAAI,CAC7C,MAAM6+B,EAAUlb,EAAS3jB,GACzB,IAAI08B,EAAOxuB,KAAK6zB,eAAe/hC,GAC/B,MAAMiO,EAAO4wB,EAAQ5wB,MAAQC,KAAKmsB,OAAOpsB,KAWzC,GAVIyuB,EAAKzuB,MAAQyuB,EAAKzuB,OAASA,IAC3BC,KAAK0gD,oBAAoB5uD,GACzB08B,EAAOxuB,KAAK6zB,eAAe/hC,IAE/B08B,EAAKzuB,KAAOA,EACZyuB,EAAKhY,UAAYma,EAAQna,WAAaujC,GAAah6C,EAAMC,KAAKvR,SAC9D+/B,EAAKuyB,MAAQpwB,EAAQowB,OAAS,EAC9BvyB,EAAKhrB,MAAQ1R,EACb08B,EAAKgI,MAAQ,GAAK7F,EAAQ6F,MAC1BhI,EAAKre,QAAUnQ,KAAKghD,iBAAiBlvD,GACjC08B,EAAKmB,WACLnB,EAAKmB,WAAWmD,YAAYhhC,GAC5B08B,EAAKmB,WAAWgD,iBACb,CACH,MAAMsuB,EAAkBxI,GAASf,cAAc33C,IACzC,mBAAEyyB,EAAmB,gBAAEC,GAAqBrjB,GAASqG,SAAS1V,GACpEhC,OAAOyB,OAAOyhD,EAAiB,CAC3BxuB,gBAAiBgmB,GAASb,WAAWnlB,GACrCD,mBAAoBA,GAAsBimB,GAASb,WAAWplB,KAElEhE,EAAKmB,WAAa,IAAIsxB,EAAgBjhD,KAAMlO,GAC5CgvD,EAAe97C,KAAKwpB,EAAKmB,WAC7B,CACJ,CAEA,OADA3vB,KAAKygD,kBACEK,CACX,CACHI,iBACOp+C,GAAK9C,KAAKrR,KAAK8mB,UAAU,CAACkb,EAASptB,KAC/BvD,KAAK6zB,eAAetwB,GAAcosB,WAAWqE,OAAO,GACrDh0B,KACP,CACHg0B,QACOh0B,KAAKkhD,iBACLlhD,KAAKkwC,cAAc,QACvB,CACAvkB,OAAOjV,GACH,MAAMyV,EAASnsB,KAAKmsB,OACpBA,EAAOR,SACP,MAAMl9B,EAAUuR,KAAKy+C,SAAWtyB,EAAOyI,eAAezI,EAAOqwB,oBAAqBx8C,KAAK8Y,cACjFqoC,EAAgBnhD,KAAK03B,qBAAuBjpC,EAAQshB,UAK1D,GAJA/P,KAAKohD,gBACLphD,KAAKqhD,sBACLrhD,KAAKshD,uBACLthD,KAAKg/C,SAAS5F,cAIP,IAHHp5C,KAAKkwC,cAAc,eAAgB,CACnCx5B,OACAyiC,YAAY,IAEZ,OAEJ,MAAM2H,EAAiB9gD,KAAK6gD,2BAC5B7gD,KAAKkwC,cAAc,wBACnB,IAAIhL,EAAa,EACjB,IAAI,IAAIpzC,EAAI,EAAGsR,EAAOpD,KAAKrR,KAAK8mB,SAASxkB,OAAQa,EAAIsR,EAAMtR,IAAI,CAC3D,MAAM,WAAE69B,GAAgB3vB,KAAK6zB,eAAe/hC,GACtCkiC,GAASmtB,IAAyD,IAAxCL,EAAeh9C,QAAQ6rB,GACvDA,EAAWyE,sBAAsBJ,GACjCkR,EAAah2C,KAAKC,KAAKwgC,EAAW2G,iBAAkB4O,EACxD,CACAA,EAAallC,KAAKuhD,YAAc9yD,EAAQi0C,OAAOpyB,YAAc40B,EAAa,EAC1EllC,KAAKwhD,cAActc,GACdic,GACDr+C,GAAKg+C,GAAiBnxB,IAClBA,EAAWqE,OAAO,IAG1Bh0B,KAAKyhD,gBAAgB/qC,GACrB1W,KAAKkwC,cAAc,cAAe,CAC9Bx5B,SAEJ1W,KAAK8kC,QAAQ59B,KAAKg2C,GAAc,IAAK,SACrC,MAAM,QAAEzzB,EAAQ,WAAEm1B,GAAgB5+C,KAC9B4+C,EACA5+C,KAAK0hD,cAAc9C,GAAY,GACxBn1B,EAAQx4B,QACf+O,KAAK2hD,mBAAmBl4B,EAASA,GAAS,GAE9CzpB,KAAK4/C,QACT,CACHwB,gBACOt+C,GAAK9C,KAAKoX,QAASD,IACfgrB,GAAQ6C,UAAUhlC,KAAMmX,EAAM,IAElCnX,KAAK6/C,sBACL7/C,KAAKggD,qBACT,CACHqB,sBACO,MAAM5yD,EAAUuR,KAAKvR,QACfmzD,EAAiB,IAAIt2C,IAAIvN,OAAOD,KAAKkC,KAAK6+C,aAC1CgD,EAAY,IAAIv2C,IAAI7c,EAAQsnB,QAC7BvQ,GAAUo8C,EAAgBC,MAAgB7hD,KAAK8+C,uBAAyBrwD,EAAQyoB,aACjFlX,KAAK8hD,eACL9hD,KAAKs/C,aAEb,CACHgC,uBACO,MAAM,eAAErC,GAAoBj/C,KACtB+hD,EAAU/hD,KAAKgiD,0BAA4B,GACjD,IAAK,MAAM,OAAEn3C,EAAO,MAAE/B,EAAM,MAAEgsB,KAAYitB,EAAQ,CAC9C,MAAMppB,EAAkB,oBAAX9tB,GAAgCiqB,EAAQA,EACrD+oB,GAAgBoB,EAAgBn2C,EAAO6vB,EAC3C,CACJ,CACHqpB,yBACO,MAAMjpB,EAAe/4B,KAAK+4B,aAC1B,IAAKA,IAAiBA,EAAa9nC,OAC/B,OAEJ+O,KAAK+4B,aAAe,GACpB,MAAMkpB,EAAejiD,KAAKrR,KAAK8mB,SAASxkB,OAClCixD,EAAWxP,GAAM,IAAIpnC,IAAIytB,EAAavW,QAAQtyB,GAAIA,EAAE,KAAOwiD,IAAKrgD,KAAI,CAACnC,EAAG4B,IAAIA,EAAI,IAAM5B,EAAEib,OAAO,GAAGiX,KAAK,QACvG+/B,EAAYD,EAAQ,GAC1B,IAAI,IAAIpwD,EAAI,EAAGA,EAAImwD,EAAcnwD,IAC7B,IAAK0T,GAAU28C,EAAWD,EAAQpwD,IAC9B,OAGR,OAAOK,MAAM2M,KAAKqjD,GAAW9vD,KAAKnC,GAAIA,EAAE4U,MAAM,OAAMzS,KAAKrC,IAAI,CACrD6a,OAAQ7a,EAAE,GACV8Y,OAAQ9Y,EAAE,GACV8kC,OAAQ9kC,EAAE,MAEtB,CACHwxD,cAActc,GACP,IAEO,IAFHllC,KAAKkwC,cAAc,eAAgB,CACnCiJ,YAAY,IAEZ,OAEJhX,GAAQxW,OAAO3rB,KAAMA,KAAK2T,MAAO3T,KAAKkZ,OAAQgsB,GAC9C,MAAMpqB,EAAO9a,KAAK22B,UACZyrB,EAAStnC,EAAKnH,OAAS,GAAKmH,EAAK5B,QAAU,EACjDlZ,KAAK8kC,QAAU,GACfhiC,GAAK9C,KAAK+hC,OAAQ/c,IACVo9B,GAA2B,cAAjBp9B,EAAI4a,WAGd5a,EAAIsH,WACJtH,EAAIsH,YAERtsB,KAAK8kC,QAAQ9/B,QAAQggB,EAAI8f,WAAU,GACpC9kC,MACHA,KAAK8kC,QAAQl6B,SAAQ,CAAC7c,EAAMyV,KACxBzV,EAAKs0D,KAAO7+C,CAAK,IAErBxD,KAAKkwC,cAAc,cACvB,CACHuR,gBAAgB/qC,GACT,IAGO,IAHH1W,KAAKkwC,cAAc,uBAAwB,CAC3Cx5B,OACAyiC,YAAY,IAFhB,CAMA,IAAI,IAAIrnD,EAAI,EAAGsR,EAAOpD,KAAKrR,KAAK8mB,SAASxkB,OAAQa,EAAIsR,IAAQtR,EACzDkO,KAAK6zB,eAAe/hC,GAAG69B,WAAWrD,YAEtC,IAAI,IAAIx6B,EAAI,EAAGsR,EAAOpD,KAAKrR,KAAK8mB,SAASxkB,OAAQa,EAAIsR,IAAQtR,EACzDkO,KAAKsiD,eAAexwD,EAAGyT,GAAWmR,GAAQA,EAAK,CAC3CnT,aAAczR,IACb4kB,GAET1W,KAAKkwC,cAAc,sBAAuB,CACtCx5B,QAVJ,CAYJ,CACH4rC,eAAe9+C,EAAOkT,GACf,MAAM8X,EAAOxuB,KAAK6zB,eAAerwB,GAC3Bb,EAAO,CACT6rB,OACAhrB,QACAkT,OACAyiC,YAAY,IAEwC,IAApDn5C,KAAKkwC,cAAc,sBAAuBvtC,KAG9C6rB,EAAKmB,WAAWxG,QAAQzS,GACxB/T,EAAKw2C,YAAa,EAClBn5C,KAAKkwC,cAAc,qBAAsBvtC,GAC7C,CACAi9C,UAGW,IAFH5/C,KAAKkwC,cAAc,eAAgB,CACnCiJ,YAAY,MAIZ1uB,GAAS/kB,IAAI1F,MACTA,KAAKk/C,WAAaz0B,GAASlB,QAAQvpB,OACnCyqB,GAAS3hB,MAAM9I,OAGnBA,KAAKwpB,OACL6zB,GAAqB,CACjBzrC,MAAO5R,QAGnB,CACAwpB,OACI,IAAI13B,EACJ,GAAIkO,KAAKu/C,kBAAmB,CACxB,MAAM,MAAE5rC,EAAM,OAAEuF,GAAYlZ,KAAKu/C,kBACjCv/C,KAAKw/C,QAAQ7rC,EAAOuF,GACpBlZ,KAAKu/C,kBAAoB,IAC7B,CAEA,GADAv/C,KAAKi8C,QACDj8C,KAAK2T,OAAS,GAAK3T,KAAKkZ,QAAU,EAClC,OAEJ,IAEO,IAFHlZ,KAAKkwC,cAAc,aAAc,CACjCiJ,YAAY,IAEZ,OAEJ,MAAMoJ,EAASviD,KAAK8kC,QACpB,IAAIhzC,EAAI,EAAGA,EAAIywD,EAAOtxD,QAAUsxD,EAAOzwD,GAAGizC,GAAK,IAAKjzC,EAChDywD,EAAOzwD,GAAG03B,KAAKxpB,KAAK22B,WAGxB,IADA32B,KAAKwiD,gBACC1wD,EAAIywD,EAAOtxD,SAAUa,EACvBywD,EAAOzwD,GAAG03B,KAAKxpB,KAAK22B,WAExB32B,KAAKkwC,cAAc,YACvB,CACHniB,uBAAuBF,GAChB,MAAMC,EAAW9tB,KAAK++C,gBAChB/3C,EAAS,GACf,IAAIlV,EAAGsR,EACP,IAAItR,EAAI,EAAGsR,EAAO0qB,EAAS78B,OAAQa,EAAIsR,IAAQtR,EAAE,CAC7C,MAAM08B,EAAOV,EAASh8B,GACjB+7B,IAAiBW,EAAKre,SACvBnJ,EAAOhC,KAAKwpB,EAEpB,CACA,OAAOxnB,CACX,CACH84B,+BACO,OAAO9/B,KAAK+tB,wBAAuB,EACvC,CACHy0B,gBACO,IAEO,IAFHxiD,KAAKkwC,cAAc,qBAAsB,CACzCiJ,YAAY,IAEZ,OAEJ,MAAMrrB,EAAW9tB,KAAK8/B,+BACtB,IAAI,IAAIhuC,EAAIg8B,EAAS78B,OAAS,EAAGa,GAAK,IAAKA,EACvCkO,KAAKyiD,aAAa30B,EAASh8B,IAE/BkO,KAAKkwC,cAAc,oBACvB,CACHuS,aAAaj0B,GACN,MAAMnY,EAAMrW,KAAKqW,IACX4E,EAAOuT,EAAKkI,MACZgsB,GAAWznC,EAAK0S,SAChB7S,EAAOqjC,GAAe3vB,IAASxuB,KAAK22B,UACpCh0B,EAAO,CACT6rB,OACAhrB,MAAOgrB,EAAKhrB,MACZ21C,YAAY,IAEsC,IAAlDn5C,KAAKkwC,cAAc,oBAAqBvtC,KAGxC+/C,GACA1nC,GAAS3E,EAAK,CACV/J,MAAoB,IAAd2O,EAAK3O,KAAiB,EAAIwO,EAAKxO,KAAO2O,EAAK3O,KACjDC,OAAsB,IAAf0O,EAAK1O,MAAkBvM,KAAK2T,MAAQmH,EAAKvO,MAAQ0O,EAAK1O,MAC7DiE,KAAkB,IAAbyK,EAAKzK,IAAgB,EAAIsK,EAAKtK,IAAMyK,EAAKzK,IAC9CC,QAAwB,IAAhBwK,EAAKxK,OAAmBzQ,KAAKkZ,OAAS4B,EAAKrK,OAASwK,EAAKxK,SAGzE+d,EAAKmB,WAAWnG,OACZk5B,GACAxnC,GAAW7E,GAEf1T,EAAKw2C,YAAa,EAClBn5C,KAAKkwC,cAAc,mBAAoBvtC,GAC3C,CACH49B,cAAc1lB,GACP,OAAOD,GAAeC,EAAO7a,KAAK22B,UAAW32B,KAAKuhD,YACtD,CACAoB,0BAA0BvyD,EAAGsmB,EAAMjoB,EAAS6xC,GACxC,MAAMz1B,EAAS02B,GAAYC,MAAM9qB,GACjC,MAAsB,oBAAX7L,EACAA,EAAO7K,KAAM5P,EAAG3B,EAAS6xC,GAE7B,EACX,CACAzM,eAAetwB,GACX,MAAMotB,EAAU3wB,KAAKrR,KAAK8mB,SAASlS,GAC7BuqB,EAAW9tB,KAAK2+C,UACtB,IAAInwB,EAAOV,EAAStL,QAAQtvB,GAAIA,GAAKA,EAAE0tD,WAAajwB,IAASxpB,MAkB7D,OAjBKqnB,IACDA,EAAO,CACHzuB,KAAM,KACNpR,KAAM,GACNgiC,QAAS,KACThB,WAAY,KACZ4B,OAAQ,KACR2B,QAAS,KACTE,QAAS,KACT2tB,MAAOpwB,GAAWA,EAAQowB,OAAS,EACnCv9C,MAAOD,EACPq9C,SAAUjwB,EACVK,QAAS,GACTgE,SAAS,GAEblH,EAAS9oB,KAAKwpB,IAEXA,CACX,CACA1V,aACI,OAAO9Y,KAAKsyB,WAAatyB,KAAKsyB,SAAWtT,GAAc,KAAM,CACzDpN,MAAO5R,KACPD,KAAM,UAEd,CACA6iD,yBACI,OAAO5iD,KAAK8/B,+BAA+B7uC,MAC/C,CACA+vD,iBAAiBz9C,GACb,MAAMotB,EAAU3wB,KAAKrR,KAAK8mB,SAASlS,GACnC,IAAKotB,EACD,OAAO,EAEX,MAAMnC,EAAOxuB,KAAK6zB,eAAetwB,GACjC,MAA8B,mBAAhBirB,EAAK+C,QAAwB/C,EAAK+C,QAAUZ,EAAQY,MACtE,CACAsxB,qBAAqBt/C,EAAc4M,GAC/B,MAAMqe,EAAOxuB,KAAK6zB,eAAetwB,GACjCirB,EAAK+C,QAAUphB,CACnB,CACA2yC,qBAAqBt/C,GACjBxD,KAAKi/C,eAAez7C,IAAUxD,KAAKi/C,eAAez7C,EACtD,CACA06B,kBAAkB16B,GACd,OAAQxD,KAAKi/C,eAAez7C,EAChC,CACHu/C,kBAAkBx/C,EAAcstB,EAAW1gB,GACpC,MAAMuG,EAAOvG,EAAU,OAAS,OAC1Bqe,EAAOxuB,KAAK6zB,eAAetwB,GAC3BslB,EAAQ2F,EAAKmB,WAAWyH,wBAAmBhmC,EAAWslB,GACxDpR,GAAQurB,IACRrC,EAAK7/B,KAAKkiC,GAAWU,QAAUphB,EAC/BnQ,KAAK2rB,WAEL3rB,KAAK6iD,qBAAqBt/C,EAAc4M,GACxC0Y,EAAM8C,OAAO6C,EAAM,CACfre,YAEJnQ,KAAK2rB,QAAQtV,GAAMA,EAAI9S,eAAiBA,EAAemT,OAAOtlB,IAEtE,CACAgf,KAAK7M,EAAcstB,GACf7wB,KAAK+iD,kBAAkBx/C,EAAcstB,GAAW,EACpD,CACA5gB,KAAK1M,EAAcstB,GACf7wB,KAAK+iD,kBAAkBx/C,EAAcstB,GAAW,EACpD,CACH6vB,oBAAoBn9C,GACb,MAAMirB,EAAOxuB,KAAK2+C,UAAUp7C,GACxBirB,GAAQA,EAAKmB,YACbnB,EAAKmB,WAAWsE,kBAEbj0B,KAAK2+C,UAAUp7C,EAC1B,CACAy/C,QACI,IAAIlxD,EAAGsR,EAGP,IAFApD,KAAKsqB,OACLG,GAASD,OAAOxqB,MACZlO,EAAI,EAAGsR,EAAOpD,KAAKrR,KAAK8mB,SAASxkB,OAAQa,EAAIsR,IAAQtR,EACrDkO,KAAK0gD,oBAAoB5uD,EAEjC,CACAmxD,UACIjjD,KAAKkwC,cAAc,iBACnB,MAAM,OAAEr3B,EAAO,IAAExC,GAASrW,KAC1BA,KAAKgjD,QACLhjD,KAAKmsB,OAAO6vB,aACRnjC,IACA7Y,KAAK8hD,eACLlpC,GAAYC,EAAQxC,GACpBrW,KAAK4V,SAAS8vB,eAAervB,GAC7BrW,KAAK6Y,OAAS,KACd7Y,KAAKqW,IAAM,aAERsnC,GAAU39C,KAAKxR,IACtBwR,KAAKkwC,cAAc,eACvB,CACAgT,iBAAiBvgD,GACb,OAAO3C,KAAK6Y,OAAOsqC,aAAaxgD,EACpC,CACH28C,aACOt/C,KAAKojD,iBACDpjD,KAAKvR,QAAQyoB,WACblX,KAAKqjD,uBAELrjD,KAAKk/C,UAAW,CAExB,CACHkE,iBACO,MAAM54C,EAAYxK,KAAK6+C,WACjBjpC,EAAW5V,KAAK4V,SAChB0tC,EAAO,CAACvjD,EAAMuK,KAChBsL,EAASwR,iBAAiBpnB,KAAMD,EAAMuK,GACtCE,EAAUzK,GAAQuK,CAAQ,EAExBA,EAAW,CAACla,EAAG8C,EAAGyR,KACpBvU,EAAE00B,QAAU5xB,EACZ9C,EAAE20B,QAAUpgB,EACZ3E,KAAK0hD,cAActxD,EAAE,EAEzB0S,GAAK9C,KAAKvR,QAAQsnB,QAAShW,GAAOujD,EAAKvjD,EAAMuK,IACjD,CACH+4C,uBACYrjD,KAAK8+C,uBACN9+C,KAAK8+C,qBAAuB,CAAC,GAEjC,MAAMt0C,EAAYxK,KAAK8+C,qBACjBlpC,EAAW5V,KAAK4V,SAChB0tC,EAAO,CAACvjD,EAAMuK,KAChBsL,EAASwR,iBAAiBpnB,KAAMD,EAAMuK,GACtCE,EAAUzK,GAAQuK,CAAQ,EAExBi5C,EAAU,CAACxjD,EAAMuK,KACfE,EAAUzK,KACV6V,EAASyR,oBAAoBrnB,KAAMD,EAAMuK,UAClCE,EAAUzK,GACrB,EAEEuK,EAAW,CAACqJ,EAAOuF,KACjBlZ,KAAK6Y,QACL7Y,KAAKgQ,OAAO2D,EAAOuF,EACvB,EAEJ,IAAIsqC,EACJ,MAAMtE,EAAW,KACbqE,EAAQ,SAAUrE,GAClBl/C,KAAKk/C,UAAW,EAChBl/C,KAAKgQ,SACLszC,EAAK,SAAUh5C,GACfg5C,EAAK,SAAUE,EAAS,EAE5BA,EAAW,KACPxjD,KAAKk/C,UAAW,EAChBqE,EAAQ,SAAUj5C,GAClBtK,KAAKgjD,QACLhjD,KAAKw/C,QAAQ,EAAG,GAChB8D,EAAK,SAAUpE,EAAS,EAExBtpC,EAAS+vB,WAAW3lC,KAAK6Y,QACzBqmC,IAEAsE,GAER,CACH1B,eACOh/C,GAAK9C,KAAK6+C,YAAY,CAACv0C,EAAUvK,KAC7BC,KAAK4V,SAASyR,oBAAoBrnB,KAAMD,EAAMuK,EAAS,IAE3DtK,KAAK6+C,WAAa,CAAC,EACnB/7C,GAAK9C,KAAK8+C,sBAAsB,CAACx0C,EAAUvK,KACvCC,KAAK4V,SAASyR,oBAAoBrnB,KAAMD,EAAMuK,EAAS,IAE3DtK,KAAK8+C,0BAAuB1tD,CAChC,CACAqyD,iBAAiB31D,EAAO4oB,EAAM0zB,GAC1B,MAAMtoB,EAASsoB,EAAU,MAAQ,SACjC,IAAI5b,EAAMzgC,EAAM+D,EAAGsR,EAKnB,IAJa,YAATsT,IACA8X,EAAOxuB,KAAK6zB,eAAe/lC,EAAM,GAAGyV,cACpCirB,EAAKmB,WAAW,IAAM7N,EAAS,wBAE/BhwB,EAAI,EAAGsR,EAAOtV,EAAMmD,OAAQa,EAAIsR,IAAQtR,EAAE,CAC1C/D,EAAOD,EAAMgE,GACb,MAAM69B,EAAa5hC,GAAQiS,KAAK6zB,eAAe9lC,EAAKwV,cAAcosB,WAC9DA,GACAA,EAAW7N,EAAS,cAAc/zB,EAAKg2B,QAASh2B,EAAKwV,aAAcxV,EAAKyV,MAEhF,CACJ,CACHkgD,oBACO,OAAO1jD,KAAKypB,SAAW,EAC3B,CACHk6B,kBAAkBC,GACX,MAAMC,EAAa7jD,KAAKypB,SAAW,GAC7B3Z,EAAS8zC,EAAevxD,KAAI,EAAGkR,eAAeC,YAChD,MAAMgrB,EAAOxuB,KAAK6zB,eAAetwB,GACjC,IAAKirB,EACD,MAAM,IAAIrM,MAAM,6BAA+B5e,GAEnD,MAAO,CACHA,eACAwgB,QAASyK,EAAK7/B,KAAK6U,GACnBA,QACH,IAECihC,GAAWxhC,GAAe6M,EAAQ+zC,GACpCpf,IACAzkC,KAAKypB,QAAU3Z,EACf9P,KAAK4+C,WAAa,KAClB5+C,KAAK2hD,mBAAmB7xC,EAAQ+zC,GAExC,CACH3T,cAAc6I,EAAMp2C,EAAM6f,GACnB,OAAOxiB,KAAKg/C,SAASlG,OAAO94C,KAAM+4C,EAAMp2C,EAAM6f,EAClD,CACHqQ,gBAAgBixB,GACT,OAA6E,IAAtE9jD,KAAKg/C,SAASxlB,OAAOhX,QAAQ7hB,GAAIA,EAAEu4C,OAAO1qD,KAAOs1D,IAAU7yD,MACtE,CACH0wD,mBAAmB7xC,EAAQ+zC,EAAYE,GAChC,MAAMC,EAAehkD,KAAKvR,QAAQ0nB,MAC5B8oB,EAAO,CAACjvC,EAAGC,IAAID,EAAEwyB,QAAQtvB,IAAKjD,EAAEypD,MAAM/0C,GAAIzR,EAAEqQ,eAAiBoB,EAAEpB,cAAgBrQ,EAAEsQ,QAAUmB,EAAEnB,UAC7FygD,EAAchlB,EAAK4kB,EAAY/zC,GAC/Bo0C,EAAYH,EAASj0C,EAASmvB,EAAKnvB,EAAQ+zC,GAC7CI,EAAYhzD,QACZ+O,KAAKyjD,iBAAiBQ,EAAaD,EAAattC,MAAM,GAEtDwtC,EAAUjzD,QAAU+yD,EAAattC,MACjC1W,KAAKyjD,iBAAiBS,EAAWF,EAAattC,MAAM,EAE5D,CACHgrC,cAActxD,EAAG2zD,GACV,MAAMphD,EAAO,CACT0iB,MAAOj1B,EACP2zD,SACA5K,YAAY,EACZ8E,YAAaj+C,KAAKugC,cAAcnwC,IAE9B+zD,EAAejL,IAAUA,EAAOzqD,QAAQsnB,QAAU/V,KAAKvR,QAAQsnB,QAAQvD,SAASpiB,EAAEg3C,OAAOrnC,MAC/F,IAA6D,IAAzDC,KAAKkwC,cAAc,cAAevtC,EAAMwhD,GACxC,OAEJ,MAAM1f,EAAUzkC,KAAKokD,aAAah0D,EAAG2zD,EAAQphD,EAAKs7C,aAMlD,OALAt7C,EAAKw2C,YAAa,EAClBn5C,KAAKkwC,cAAc,aAAcvtC,EAAMwhD,IACnC1f,GAAW9hC,EAAK8hC,UAChBzkC,KAAK4/C,SAEF5/C,IACX,CACHokD,aAAah0D,EAAG2zD,EAAQ9F,GACjB,MAAQx0B,QAASo6B,EAAa,GAAG,QAAEp1D,GAAauR,KAC1CsgC,EAAmByjB,EACnBj0C,EAAS9P,KAAKqkD,mBAAmBj0D,EAAGyzD,EAAY5F,EAAa3d,GAC7D4d,EAAUv4C,GAAcvV,GACxB4tD,EAAYD,GAAmB3tD,EAAG4P,KAAK4+C,WAAYX,EAAaC,GAClED,IACAj+C,KAAK4+C,WAAa,KAClBn8C,GAAShU,EAAQqoB,QAAS,CACtB1mB,EACA0f,EACA9P,MACDA,MACCk+C,GACAz7C,GAAShU,EAAQsoB,QAAS,CACtB3mB,EACA0f,EACA9P,MACDA,OAGX,MAAMykC,GAAWxhC,GAAe6M,EAAQ+zC,GAMxC,OALIpf,GAAWsf,KACX/jD,KAAKypB,QAAU3Z,EACf9P,KAAK2hD,mBAAmB7xC,EAAQ+zC,EAAYE,IAEhD/jD,KAAK4+C,WAAaZ,EACXvZ,CACX,CACH4f,mBAAmBj0D,EAAGyzD,EAAY5F,EAAa3d,GACxC,GAAe,aAAXlwC,EAAE2P,KACF,MAAO,GAEX,IAAKk+C,EACD,OAAO4F,EAEX,MAAMG,EAAehkD,KAAKvR,QAAQ0nB,MAClC,OAAOnW,KAAK2iD,0BAA0BvyD,EAAG4zD,EAAattC,KAAMstC,EAAc1jB,EAC9E,EAEJ,SAAS+d,KACL,OAAOv7C,GAAKs7C,GAAMT,WAAY/rC,GAAQA,EAAMotC,SAAS5F,cACzD,CAsqBA,SAASkL,GAAaC,EAAKjkB,GACvB,MAAM,EAAEptC,EAAE,EAAEyR,EAAE,KAAEmG,EAAK,MAAE6I,EAAM,OAAEuF,GAAaqrC,EAAI1jB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDP,GACH,IAAIh0B,EAAMC,EAAOiE,EAAKC,EAAQ+zC,EAc9B,OAbID,EAAI1oB,YACJ2oB,EAAOtrC,EAAS,EAChB5M,EAAOpd,KAAKE,IAAI8D,EAAG4X,GACnByB,EAAQrd,KAAKC,IAAI+D,EAAG4X,GACpB0F,EAAM7L,EAAI6/C,EACV/zC,EAAS9L,EAAI6/C,IAEbA,EAAO7wC,EAAQ,EACfrH,EAAOpZ,EAAIsxD,EACXj4C,EAAQrZ,EAAIsxD,EACZh0C,EAAMthB,KAAKE,IAAIuV,EAAGmG,GAClB2F,EAASvhB,KAAKC,IAAIwV,EAAGmG,IAElB,CACHwB,OACAkE,MACAjE,QACAkE,SAER,CACA,SAASg0C,GAAY1kB,EAAMt+B,EAAOrS,EAAKD,GACnC,OAAO4wC,EAAO,EAAI12B,GAAY5H,EAAOrS,EAAKD,EAC9C,CACA,SAASu1D,GAAiBH,EAAKI,EAAMC,GACjC,MAAMnjD,EAAQ8iD,EAAI91D,QAAQisB,YACpBqlB,EAAOwkB,EAAIvoB,cACXt3B,EAAIsZ,GAAOvc,GACjB,MAAO,CACHvC,EAAGulD,GAAY1kB,EAAKvvB,IAAK9L,EAAE8L,IAAK,EAAGo0C,GACnCj0D,EAAG8zD,GAAY1kB,EAAKxzB,MAAO7H,EAAE6H,MAAO,EAAGo4C,GACvC10D,EAAGw0D,GAAY1kB,EAAKtvB,OAAQ/L,EAAE+L,OAAQ,EAAGm0C,GACzC51D,EAAGy1D,GAAY1kB,EAAKzzB,KAAM5H,EAAE4H,KAAM,EAAGq4C,GAE7C,CACA,SAASE,GAAkBN,EAAKI,EAAMC,GAClC,MAAM,mBAAE3oB,GAAwBsoB,EAAI1jB,SAAS,CACzC,uBAEEp/B,EAAQ8iD,EAAI91D,QAAQq2D,aACpBpgD,EAAIuZ,GAAcxc,GAClBsjD,EAAO71D,KAAKE,IAAIu1D,EAAMC,GACtB7kB,EAAOwkB,EAAIvoB,cACXgpB,EAAe/oB,GAAsBn6B,GAASL,GACpD,MAAO,CACHwb,QAASwnC,IAAaO,GAAgBjlB,EAAKvvB,KAAOuvB,EAAKzzB,KAAM5H,EAAEuY,QAAS,EAAG8nC,GAC3E3nC,SAAUqnC,IAAaO,GAAgBjlB,EAAKvvB,KAAOuvB,EAAKxzB,MAAO7H,EAAE0Y,SAAU,EAAG2nC,GAC9E7nC,WAAYunC,IAAaO,GAAgBjlB,EAAKtvB,QAAUsvB,EAAKzzB,KAAM5H,EAAEwY,WAAY,EAAG6nC,GACpF5nC,YAAasnC,IAAaO,GAAgBjlB,EAAKtvB,QAAUsvB,EAAKxzB,MAAO7H,EAAEyY,YAAa,EAAG4nC,GAE/F,CACA,SAASE,GAAcV,GACnB,MAAMzxC,EAASwxC,GAAaC,GACtB5wC,EAAQb,EAAOvG,MAAQuG,EAAOxG,KAC9B4M,EAASpG,EAAOrC,OAASqC,EAAOtC,IAChCgD,EAASkxC,GAAiBH,EAAK5wC,EAAQ,EAAGuF,EAAS,GACnDW,EAASgrC,GAAkBN,EAAK5wC,EAAQ,EAAGuF,EAAS,GAC1D,MAAO,CACHgsC,MAAO,CACHhyD,EAAG4f,EAAOxG,KACV3H,EAAGmO,EAAOtC,IACV5e,EAAG+hB,EACH1kB,EAAGiqB,EACHW,UAEJsrC,MAAO,CACHjyD,EAAG4f,EAAOxG,KAAOkH,EAAOxkB,EACxB2V,EAAGmO,EAAOtC,IAAMgD,EAAOtU,EACvBtN,EAAG+hB,EAAQH,EAAOxkB,EAAIwkB,EAAO7iB,EAC7B1B,EAAGiqB,EAAS1F,EAAOtU,EAAIsU,EAAOvjB,EAC9B4pB,OAAQ,CACJoD,QAAS/tB,KAAKC,IAAI,EAAG0qB,EAAOoD,QAAU/tB,KAAKC,IAAIqkB,EAAOtU,EAAGsU,EAAOxkB,IAChEouB,SAAUluB,KAAKC,IAAI,EAAG0qB,EAAOuD,SAAWluB,KAAKC,IAAIqkB,EAAOtU,EAAGsU,EAAO7iB,IAClEusB,WAAYhuB,KAAKC,IAAI,EAAG0qB,EAAOqD,WAAahuB,KAAKC,IAAIqkB,EAAOvjB,EAAGujB,EAAOxkB,IACtEmuB,YAAajuB,KAAKC,IAAI,EAAG0qB,EAAOsD,YAAcjuB,KAAKC,IAAIqkB,EAAOvjB,EAAGujB,EAAO7iB,MAIxF,CACA,SAAS8vC,GAAQ8jB,EAAKrxD,EAAGyR,EAAG27B,GACxB,MAAM8kB,EAAc,OAANlyD,EACRmyD,EAAc,OAAN1gD,EACR2gD,EAAWF,GAASC,EACpBvyC,EAASyxC,IAAQe,GAAYhB,GAAaC,EAAKjkB,GACrD,OAAOxtB,IAAWsyC,GAAS77C,GAAWrW,EAAG4f,EAAOxG,KAAMwG,EAAOvG,UAAY84C,GAAS97C,GAAW5E,EAAGmO,EAAOtC,IAAKsC,EAAOrC,QACvH,CACA,SAAS80C,GAAU1rC,GACf,OAAOA,EAAOoD,SAAWpD,EAAOuD,UAAYvD,EAAOqD,YAAcrD,EAAOsD,WAC5E,CACC,SAASqoC,GAAkBnvC,EAAKmE,GAC7BnE,EAAImE,KAAKA,EAAKtnB,EAAGsnB,EAAK7V,EAAG6V,EAAK5oB,EAAG4oB,EAAKvrB,EAC1C,CACA,SAASw2D,GAAYjrC,EAAMkrC,EAAQC,EAAU,CAAC,GAC1C,MAAMzyD,EAAIsnB,EAAKtnB,IAAMyyD,EAAQzyD,GAAKwyD,EAAS,EACrC/gD,EAAI6V,EAAK7V,IAAMghD,EAAQhhD,GAAK+gD,EAAS,EACrC9zD,GAAK4oB,EAAKtnB,EAAIsnB,EAAK5oB,IAAM+zD,EAAQzyD,EAAIyyD,EAAQ/zD,EAAI8zD,EAAS,GAAKxyD,EAC/DjE,GAAKurB,EAAK7V,EAAI6V,EAAKvrB,IAAM02D,EAAQhhD,EAAIghD,EAAQ12D,EAAIy2D,EAAS,GAAK/gD,EACrE,MAAO,CACHzR,EAAGsnB,EAAKtnB,EAAIA,EACZyR,EAAG6V,EAAK7V,EAAIA,EACZ/S,EAAG4oB,EAAK5oB,EAAIA,EACZ3C,EAAGurB,EAAKvrB,EAAIA,EACZ4qB,OAAQW,EAAKX,OAErB,CACA,MAAM+rC,WAAmBlc,GACrBhY,UAAY,MACfA,gBAAkB,CACXsK,cAAe,QACfthB,YAAa,EACboqC,aAAc,EACdtoB,cAAe,OACf7iB,gBAAYvoB,GAEnBsgC,qBAAuB,CAChBnc,gBAAiB,kBACjBC,YAAa,eAEjB1V,YAAYkrB,GACR+R,QACA/8B,KAAKvR,aAAU2C,EACf4O,KAAK67B,gBAAazqC,EAClB4O,KAAK8K,UAAO1Z,EACZ4O,KAAK2T,WAAQviB,EACb4O,KAAKkZ,YAAS9nB,EACd4O,KAAKw8B,mBAAgBprC,EACjB45B,GACAjtB,OAAOyB,OAAOQ,KAAMgrB,EAE5B,CACAxB,KAAKnT,GACD,MAAM,cAAEmmB,EAAgB/tC,SAAS,YAAE+mB,EAAY,gBAAED,IAAwBvV,MACnE,MAAEmlD,EAAM,MAAED,GAAWD,GAAcjlD,MACnC6lD,EAAcN,GAAUL,EAAMrrC,QAAUmD,GAAqBwoC,GACnEnvC,EAAI0C,OACAmsC,EAAMtzD,IAAMuzD,EAAMvzD,GAAKszD,EAAMj2D,IAAMk2D,EAAMl2D,IACzConB,EAAI4D,YACJ4rC,EAAYxvC,EAAKovC,GAAYP,EAAO1oB,EAAe2oB,IACnD9uC,EAAI4E,OACJ4qC,EAAYxvC,EAAKovC,GAAYN,GAAQ3oB,EAAe0oB,IACpD7uC,EAAIiF,UAAY9F,EAChBa,EAAIoE,KAAK,YAEbpE,EAAI4D,YACJ4rC,EAAYxvC,EAAKovC,GAAYN,EAAO3oB,IACpCnmB,EAAIiF,UAAY/F,EAChBc,EAAIoE,OACJpE,EAAI8C,SACR,CACAsnB,QAAQqlB,EAAQC,EAAQzlB,GACpB,OAAOG,GAAQzgC,KAAM8lD,EAAQC,EAAQzlB,EACzC,CACA0lB,SAASF,EAAQxlB,GACb,OAAOG,GAAQzgC,KAAM8lD,EAAQ,KAAMxlB,EACvC,CACA2lB,SAASF,EAAQzlB,GACb,OAAOG,GAAQzgC,KAAM,KAAM+lD,EAAQzlB,EACvC,CACAW,eAAeX,GACX,MAAM,EAAEptC,EAAE,EAAEyR,EAAE,KAAEmG,EAAK,WAAE+wB,GAAiB77B,KAAK6gC,SAAS,CAClD,IACA,IACA,OACA,cACDP,GACH,MAAO,CACHptC,EAAG2oC,GAAc3oC,EAAI4X,GAAQ,EAAI5X,EACjCyR,EAAGk3B,EAAal3B,GAAKA,EAAImG,GAAQ,EAEzC,CACA40B,SAASzP,GACL,MAAgB,MAATA,EAAejwB,KAAK2T,MAAQ,EAAI3T,KAAKkZ,OAAS,CACzD,EAu2BJ,MAAMgtC,GAAa,CAACC,EAAWhQ,KAC3B,IAAI,UAAEiQ,EAAWjQ,EAAS,SAAEkQ,EAAUlQ,GAAcgQ,EAKpD,OAJIA,EAAUG,gBACVF,EAAYl3D,KAAKE,IAAIg3D,EAAWjQ,GAChCkQ,EAAWF,EAAUI,iBAAmBr3D,KAAKE,IAAIi3D,EAAUlQ,IAExD,CACHkQ,WACAD,YACAI,WAAYt3D,KAAKC,IAAIgnD,EAAUiQ,GAClC,EAECK,GAAa,CAACz2D,EAAGC,IAAU,OAAND,GAAoB,OAANC,GAAcD,EAAEuT,eAAiBtT,EAAEsT,cAAgBvT,EAAEwT,QAAUvT,EAAEuT,MAC1G,MAAMkjD,WAAehd,GACpB5pC,YAAYqsB,GACL4Q,QACA/8B,KAAK2mD,QAAS,EACd3mD,KAAK4mD,eAAiB,GAC7B5mD,KAAK6mD,aAAe,KACb7mD,KAAK8mD,cAAe,EACpB9mD,KAAK4R,MAAQua,EAAOva,MACpB5R,KAAKvR,QAAU09B,EAAO19B,QACtBuR,KAAKqW,IAAM8V,EAAO9V,IAClBrW,KAAK+mD,iBAAc31D,EACnB4O,KAAKgnD,iBAAc51D,EACnB4O,KAAKinD,gBAAa71D,EAClB4O,KAAK2lB,eAAYv0B,EACjB4O,KAAK8c,cAAW1rB,EAChB4O,KAAKwQ,SAAMpf,EACX4O,KAAKyQ,YAASrf,EACd4O,KAAKsM,UAAOlb,EACZ4O,KAAKuM,WAAQnb,EACb4O,KAAKkZ,YAAS9nB,EACd4O,KAAK2T,WAAQviB,EACb4O,KAAK+sC,cAAW37C,EAChB4O,KAAK4/B,cAAWxuC,EAChB4O,KAAKO,YAASnP,EACd4O,KAAK2iC,cAAWvxC,CACpB,CACAu6B,OAAO7O,EAAU6I,EAAWY,GACxBvmB,KAAK8c,SAAWA,EAChB9c,KAAK2lB,UAAYA,EACjB3lB,KAAK+sC,SAAWxmB,EAChBvmB,KAAK4uC,gBACL5uC,KAAKknD,cACLlnD,KAAK2vC,KACT,CACAf,gBACQ5uC,KAAK27B,gBACL37B,KAAK2T,MAAQ3T,KAAK8c,SAClB9c,KAAKsM,KAAOtM,KAAK+sC,SAASzgC,KAC1BtM,KAAKuM,MAAQvM,KAAK2T,QAElB3T,KAAKkZ,OAASlZ,KAAK2lB,UACnB3lB,KAAKwQ,IAAMxQ,KAAK+sC,SAASv8B,IACzBxQ,KAAKyQ,OAASzQ,KAAKkZ,OAE3B,CACAguC,cACI,MAAMf,EAAYnmD,KAAKvR,QAAQ6mC,QAAU,CAAC,EAC1C,IAAIyxB,EAActkD,GAAS0jD,EAAUgB,eAAgB,CACjDnnD,KAAK4R,OACN5R,OAAS,GACRmmD,EAAU3jC,SACVukC,EAAcA,EAAYvkC,QAAQz0B,GAAOo4D,EAAU3jC,OAAOz0B,EAAMiS,KAAK4R,MAAMjjB,SAE3Ew3D,EAAUj/C,OACV6/C,EAAcA,EAAY7/C,MAAK,CAAClX,EAAGC,IAAIk2D,EAAUj/C,KAAKlX,EAAGC,EAAG+P,KAAK4R,MAAMjjB,SAEvEqR,KAAKvR,QAAQuU,SACb+jD,EAAY/jD,UAEhBhD,KAAK+mD,YAAcA,CACvB,CACApX,MACI,MAAM,QAAElhD,EAAQ,IAAE4nB,GAASrW,KAC3B,IAAKvR,EAAQkkB,QAET,YADA3S,KAAK2T,MAAQ3T,KAAKkZ,OAAS,GAG/B,MAAMitC,EAAY13D,EAAQ6mC,OACpB8xB,EAAYjpC,GAAOgoC,EAAUnwC,MAC7BmgC,EAAWiR,EAAU3hD,KACrB0rC,EAAcnxC,KAAKqnD,uBACnB,SAAEhB,EAAS,WAAEG,GAAgBN,GAAWC,EAAWhQ,GACzD,IAAIxiC,EAAOuF,EACX7C,EAAIL,KAAOoxC,EAAU/uC,OACjBrY,KAAK27B,gBACLhoB,EAAQ3T,KAAK8c,SACb5D,EAASlZ,KAAKsnD,SAASnW,EAAagF,EAAUkQ,EAAUG,GAAc,KAEtEttC,EAASlZ,KAAK2lB,UACdhS,EAAQ3T,KAAKunD,SAASpW,EAAaiW,EAAWf,EAAUG,GAAc,IAE1ExmD,KAAK2T,MAAQzkB,KAAKE,IAAIukB,EAAOllB,EAAQquB,UAAY9c,KAAK8c,UACtD9c,KAAKkZ,OAAShqB,KAAKE,IAAI8pB,EAAQzqB,EAAQk3B,WAAa3lB,KAAK2lB,UAC7D,CACH2hC,SAASnW,EAAagF,EAAUkQ,EAAUG,GACnC,MAAM,IAAEnwC,EAAI,SAAEyG,EAAWruB,SAAW6mC,QAAQ,QAAE/kB,KAAmBvQ,KAC3DwnD,EAAWxnD,KAAK4mD,eAAiB,GACjCK,EAAajnD,KAAKinD,WAAa,CACjC,GAEE/wC,EAAaswC,EAAaj2C,EAChC,IAAIk3C,EAActW,EAClB96B,EAAIkF,UAAY,OAChBlF,EAAImF,aAAe,SACnB,IAAIksC,GAAO,EACPl3C,GAAO0F,EAkBX,OAjBAlW,KAAK+mD,YAAYn8C,SAAQ,CAAC+8C,EAAY71D,KAClC,MAAM81B,EAAYy+B,EAAWlQ,EAAW,EAAI9/B,EAAIkC,YAAYovC,EAAW9zC,MAAMF,OACnE,IAAN7hB,GAAWm1D,EAAWA,EAAWh2D,OAAS,GAAK22B,EAAY,EAAIrX,EAAUuM,KACzE2qC,GAAevxC,EACf+wC,EAAWA,EAAWh2D,QAAUa,EAAI,EAAI,EAAI,IAAM,EAClD0e,GAAO0F,EACPwxC,KAEJF,EAAS11D,GAAK,CACVwa,KAAM,EACNkE,MACAk3C,MACA/zC,MAAOiU,EACP1O,OAAQstC,GAEZS,EAAWA,EAAWh2D,OAAS,IAAM22B,EAAYrX,CAAO,IAErDk3C,CACX,CACAF,SAASpW,EAAaiW,EAAWf,EAAUuB,GACvC,MAAM,IAAEvxC,EAAI,UAAEsP,EAAYl3B,SAAW6mC,QAAQ,QAAE/kB,KAAmBvQ,KAC5DwnD,EAAWxnD,KAAK4mD,eAAiB,GACjCI,EAAchnD,KAAKgnD,YAAc,GACjCa,EAAcliC,EAAYwrB,EAChC,IAAI2W,EAAav3C,EACbw3C,EAAkB,EAClBC,EAAmB,EACnB17C,EAAO,EACP27C,EAAM,EA4BV,OA3BAjoD,KAAK+mD,YAAYn8C,SAAQ,CAAC+8C,EAAY71D,KAClC,MAAM,UAAE81B,EAAU,WAAE4+B,GAAgB0B,GAAkB7B,EAAUe,EAAW/wC,EAAKsxC,EAAYC,GACxF91D,EAAI,GAAKk2D,EAAmBxB,EAAa,EAAIj2C,EAAUs3C,IACvDC,GAAcC,EAAkBx3C,EAChCy2C,EAAYhiD,KAAK,CACb2O,MAAOo0C,EACP7uC,OAAQ8uC,IAEZ17C,GAAQy7C,EAAkBx3C,EAC1B03C,IACAF,EAAkBC,EAAmB,GAEzCR,EAAS11D,GAAK,CACVwa,OACAkE,IAAKw3C,EACLC,MACAt0C,MAAOiU,EACP1O,OAAQstC,GAEZuB,EAAkB74D,KAAKC,IAAI44D,EAAiBngC,GAC5CogC,GAAoBxB,EAAaj2C,CAAO,IAE5Cu3C,GAAcC,EACdf,EAAYhiD,KAAK,CACb2O,MAAOo0C,EACP7uC,OAAQ8uC,IAELF,CACX,CACAK,iBACI,IAAKnoD,KAAKvR,QAAQkkB,QACd,OAEJ,MAAMw+B,EAAcnxC,KAAKqnD,uBACjBT,eAAgBY,EAAW/4D,SAAS,MAAE0d,EAAQmpB,QAAQ,QAAE/kB,GAAW,IAAE/D,IAAYxM,KACnFooD,EAAYrgC,GAAcvb,EAAKxM,KAAKsM,KAAMtM,KAAK2T,OACrD,GAAI3T,KAAK27B,eAAgB,CACrB,IAAI+rB,EAAM,EACNp7C,EAAOF,GAAeD,EAAOnM,KAAKsM,KAAOiE,EAASvQ,KAAKuM,MAAQvM,KAAKinD,WAAWS,IACnF,IAAK,MAAMW,KAAUb,EACbE,IAAQW,EAAOX,MACfA,EAAMW,EAAOX,IACbp7C,EAAOF,GAAeD,EAAOnM,KAAKsM,KAAOiE,EAASvQ,KAAKuM,MAAQvM,KAAKinD,WAAWS,KAEnFW,EAAO73C,KAAOxQ,KAAKwQ,IAAM2gC,EAAc5gC,EACvC83C,EAAO/7C,KAAO87C,EAAUzgC,WAAWygC,EAAUl1D,EAAEoZ,GAAO+7C,EAAO10C,OAC7DrH,GAAQ+7C,EAAO10C,MAAQpD,CAE/B,KAAO,CACH,IAAI03C,EAAM,EACNz3C,EAAMpE,GAAeD,EAAOnM,KAAKwQ,IAAM2gC,EAAc5gC,EAASvQ,KAAKyQ,OAASzQ,KAAKgnD,YAAYiB,GAAK/uC,QACtG,IAAK,MAAMmvC,KAAUb,EACba,EAAOJ,MAAQA,IACfA,EAAMI,EAAOJ,IACbz3C,EAAMpE,GAAeD,EAAOnM,KAAKwQ,IAAM2gC,EAAc5gC,EAASvQ,KAAKyQ,OAASzQ,KAAKgnD,YAAYiB,GAAK/uC,SAEtGmvC,EAAO73C,IAAMA,EACb63C,EAAO/7C,MAAQtM,KAAKsM,KAAOiE,EAC3B83C,EAAO/7C,KAAO87C,EAAUzgC,WAAWygC,EAAUl1D,EAAEm1D,EAAO/7C,MAAO+7C,EAAO10C,OACpEnD,GAAO63C,EAAOnvC,OAAS3I,CAE/B,CACJ,CACAorB,eACI,MAAiC,QAA1B37B,KAAKvR,QAAQmxC,UAAgD,WAA1B5/B,KAAKvR,QAAQmxC,QAC3D,CACApW,OACI,GAAIxpB,KAAKvR,QAAQkkB,QAAS,CACtB,MAAM0D,EAAMrW,KAAKqW,IACjB2E,GAAS3E,EAAKrW,MACdA,KAAKsoD,QACLptC,GAAW7E,EACf,CACJ,CACHiyC,QACO,MAAQ75D,QAAS2sB,EAAK,YAAE4rC,EAAY,WAAEC,EAAW,IAAE5wC,GAASrW,MACtD,MAAEmM,EAAQmpB,OAAQ6wB,GAAe/qC,EACjCmtC,EAAen5C,GAAS9O,MACxB8nD,EAAYrgC,GAAc3M,EAAK5O,IAAKxM,KAAKsM,KAAMtM,KAAK2T,OACpDyzC,EAAYjpC,GAAOgoC,EAAUnwC,OAC7B,QAAEzF,GAAa41C,EACfhQ,EAAWiR,EAAU3hD,KACrB+iD,EAAerS,EAAW,EAChC,IAAIsS,EACJzoD,KAAK61C,YACLx/B,EAAIkF,UAAY6sC,EAAU7sC,UAAU,QACpClF,EAAImF,aAAe,SACnBnF,EAAIpD,UAAY,GAChBoD,EAAIL,KAAOoxC,EAAU/uC,OACrB,MAAM,SAAEguC,EAAS,UAAED,EAAU,WAAEI,GAAgBN,GAAWC,EAAWhQ,GAC/DuS,EAAgB,SAASx1D,EAAGyR,EAAGgjD,GACjC,GAAItgD,MAAMg/C,IAAaA,GAAY,GAAKh/C,MAAM++C,IAAcA,EAAY,EACpE,OAEJ/vC,EAAI0C,OACJ,MAAM9F,EAAY7Q,GAAeulD,EAAW10C,UAAW,GAQvD,GAPAoD,EAAIiF,UAAYlZ,GAAeulD,EAAWrsC,UAAWitC,GACrDlyC,EAAIsyC,QAAUvmD,GAAeulD,EAAWgB,QAAS,QACjDtyC,EAAIm/B,eAAiBpzC,GAAeulD,EAAWnS,eAAgB,GAC/Dn/B,EAAIuyC,SAAWxmD,GAAeulD,EAAWiB,SAAU,SACnDvyC,EAAIpD,UAAYA,EAChBoD,EAAI8F,YAAc/Z,GAAeulD,EAAWxrC,YAAaosC,GACzDlyC,EAAIk/B,YAAYnzC,GAAeulD,EAAWkB,SAAU,KAChD1C,EAAUG,cAAe,CACzB,MAAMwC,EAAc,CAChBjvC,OAAQusC,EAAYl3D,KAAK65D,MAAQ,EACjCpvC,WAAYguC,EAAWhuC,WACvBC,SAAU+tC,EAAW/tC,SACrBc,YAAazH,GAEX+1C,EAAUZ,EAAU1gC,MAAMx0B,EAAGmzD,EAAW,GACxC4C,EAAUtkD,EAAI6jD,EACpBnvC,GAAgBhD,EAAKyyC,EAAaE,EAASC,EAAS9C,EAAUI,iBAAmBF,EACrF,KAAO,CACH,MAAM6C,EAAUvkD,EAAIzV,KAAKC,KAAKgnD,EAAWiQ,GAAa,EAAG,GACnD+C,EAAWf,EAAUzgC,WAAWz0B,EAAGmzD,GACnCvB,EAAe7mC,GAAc0pC,EAAW7C,cAC9CzuC,EAAI4D,YACAlc,OAAOoM,OAAO26C,GAAcpL,MAAM5qD,GAAU,IAANA,IACtCkuB,GAAmB3G,EAAK,CACpBnjB,EAAGi2D,EACHxkD,EAAGukD,EACHt3D,EAAGy0D,EACHp3D,EAAGm3D,EACHvsC,OAAQirC,IAGZzuC,EAAImE,KAAK2uC,EAAUD,EAAS7C,EAAUD,GAE1C/vC,EAAIoE,OACc,IAAdxH,GACAoD,EAAIsE,QAEZ,CACAtE,EAAI8C,SACR,EACM4D,EAAW,SAAS7pB,EAAGyR,EAAGgjD,GAC5BnrC,GAAWnG,EAAKsxC,EAAW9zC,KAAM3gB,EAAGyR,EAAI6hD,EAAa,EAAGY,EAAW,CAC/DzrC,cAAegsC,EAAWp2B,OAC1BhW,UAAW6sC,EAAU7sC,UAAUosC,EAAWpsC,YAElD,EACMogB,EAAe37B,KAAK27B,eACpBwV,EAAcnxC,KAAKqnD,sBAErBoB,EADA9sB,EACS,CACLzoC,EAAGkZ,GAAeD,EAAOnM,KAAKsM,KAAOiE,EAASvQ,KAAKuM,MAAQ06C,EAAW,IACtEtiD,EAAG3E,KAAKwQ,IAAMD,EAAU4gC,EACxBz1B,KAAM,GAGD,CACLxoB,EAAG8M,KAAKsM,KAAOiE,EACf5L,EAAGyH,GAAeD,EAAOnM,KAAKwQ,IAAM2gC,EAAc5gC,EAASvQ,KAAKyQ,OAASu2C,EAAY,GAAG9tC,QACxFwC,KAAM,GAGdsM,GAAsBhoB,KAAKqW,IAAK+E,EAAKguC,eACrC,MAAMlzC,EAAaswC,EAAaj2C,EAChCvQ,KAAK+mD,YAAYn8C,SAAQ,CAAC+8C,EAAY71D,KAClCukB,EAAI8F,YAAcwrC,EAAW0B,UAC7BhzC,EAAIiF,UAAYqsC,EAAW0B,UAC3B,MAAM/wC,EAAYjC,EAAIkC,YAAYovC,EAAW9zC,MAAMF,MAC7C4H,EAAY6sC,EAAU7sC,UAAUosC,EAAWpsC,YAAcosC,EAAWpsC,UAAY4qC,EAAU5qC,YAC1F5H,EAAQ0yC,EAAWmC,EAAelwC,EACxC,IAAIplB,EAAIu1D,EAAOv1D,EACXyR,EAAI8jD,EAAO9jD,EACfyjD,EAAU3gC,SAASznB,KAAK2T,OACpBgoB,EACI7pC,EAAI,GAAKoB,EAAIygB,EAAQpD,EAAUvQ,KAAKuM,QACpC5H,EAAI8jD,EAAO9jD,GAAKuR,EAChBuyC,EAAO/sC,OACPxoB,EAAIu1D,EAAOv1D,EAAIkZ,GAAeD,EAAOnM,KAAKsM,KAAOiE,EAASvQ,KAAKuM,MAAQ06C,EAAWwB,EAAO/sC,QAEtF5pB,EAAI,GAAK6S,EAAIuR,EAAalW,KAAKyQ,SACtCvd,EAAIu1D,EAAOv1D,EAAIA,EAAI8zD,EAAYyB,EAAO/sC,MAAM/H,MAAQpD,EACpDk4C,EAAO/sC,OACP/W,EAAI8jD,EAAO9jD,EAAIyH,GAAeD,EAAOnM,KAAKwQ,IAAM2gC,EAAc5gC,EAASvQ,KAAKyQ,OAASu2C,EAAYyB,EAAO/sC,MAAMxC,SAElH,MAAMowC,EAAQlB,EAAUl1D,EAAEA,GAI1B,GAHAw1D,EAAcY,EAAO3kD,EAAGgjD,GACxBz0D,EAAImZ,GAAOkP,EAAWroB,EAAImzD,EAAWmC,EAAc7sB,EAAezoC,EAAIygB,EAAQ3T,KAAKuM,MAAO6O,EAAK5O,KAC/FuQ,EAASqrC,EAAUl1D,EAAEA,GAAIyR,EAAGgjD,GACxBhsB,EACA8sB,EAAOv1D,GAAKygB,EAAQpD,OACjB,GAA+B,kBAApBo3C,EAAW9zC,KAAmB,CAC5C,MAAM01C,EAAiBnC,EAAUlxC,WACjCuyC,EAAO9jD,GAAK6kD,GAA0B7B,EAAY4B,EACtD,MACId,EAAO9jD,GAAKuR,CAChB,IAEJoS,GAAqBtoB,KAAKqW,IAAK+E,EAAKguC,cACxC,CACHvT,YACO,MAAMz6B,EAAOpb,KAAKvR,QACZwiD,EAAY71B,EAAKxH,MACjB61C,EAAYtrC,GAAO8yB,EAAUj7B,MAC7B0zC,EAAexrC,GAAU+yB,EAAU1gC,SACzC,IAAK0gC,EAAUt+B,QACX,OAEJ,MAAMy1C,EAAYrgC,GAAc3M,EAAK5O,IAAKxM,KAAKsM,KAAMtM,KAAK2T,OACpD0C,EAAMrW,KAAKqW,IACXupB,EAAWqR,EAAUrR,SACrB4oB,EAAeiB,EAAUhkD,KAAO,EAChCkkD,EAA6BD,EAAal5C,IAAMg4C,EACtD,IAAI7jD,EACA2H,EAAOtM,KAAKsM,KACZwQ,EAAW9c,KAAK2T,MACpB,GAAI3T,KAAK27B,eACL7e,EAAW5tB,KAAKC,OAAO6Q,KAAKinD,YAC5BtiD,EAAI3E,KAAKwQ,IAAMm5C,EACfr9C,EAAOF,GAAegP,EAAKjP,MAAOG,EAAMtM,KAAKuM,MAAQuQ,OAClD,CACH,MAAM6I,EAAY3lB,KAAKgnD,YAAY98B,QAAO,CAACC,EAAK1kB,IAAOvW,KAAKC,IAAIg7B,EAAK1kB,EAAKyT,SAAS,GACnFvU,EAAIglD,EAA6Bv9C,GAAegP,EAAKjP,MAAOnM,KAAKwQ,IAAKxQ,KAAKyQ,OAASkV,EAAYvK,EAAKka,OAAO/kB,QAAUvQ,KAAKqnD,sBAC/H,CACA,MAAMn0D,EAAIkZ,GAAewzB,EAAUtzB,EAAMA,EAAOwQ,GAChDzG,EAAIkF,UAAY6sC,EAAU7sC,UAAUrP,GAAmB0zB,IACvDvpB,EAAImF,aAAe,SACnBnF,EAAI8F,YAAc80B,EAAU3wC,MAC5B+V,EAAIiF,UAAY21B,EAAU3wC,MAC1B+V,EAAIL,KAAOyzC,EAAUpxC,OACrBmE,GAAWnG,EAAK46B,EAAUp9B,KAAM3gB,EAAGyR,EAAG8kD,EAC1C,CACHpC,sBACO,MAAMpW,EAAYjxC,KAAKvR,QAAQmlB,MACzB61C,EAAYtrC,GAAO8yB,EAAUj7B,MAC7B0zC,EAAexrC,GAAU+yB,EAAU1gC,SACzC,OAAO0gC,EAAUt+B,QAAU82C,EAAUvzC,WAAawzC,EAAaxwC,OAAS,CAC5E,CACH0wC,iBAAiB12D,EAAGyR,GACb,IAAI7S,EAAG+3D,EAAQC,EACf,GAAIvgD,GAAWrW,EAAG8M,KAAKsM,KAAMtM,KAAKuM,QAAUhD,GAAW5E,EAAG3E,KAAKwQ,IAAKxQ,KAAKyQ,QAErE,IADAq5C,EAAK9pD,KAAK4mD,eACN90D,EAAI,EAAGA,EAAIg4D,EAAG74D,SAAUa,EAExB,GADA+3D,EAASC,EAAGh4D,GACRyX,GAAWrW,EAAG22D,EAAOv9C,KAAMu9C,EAAOv9C,KAAOu9C,EAAOl2C,QAAUpK,GAAW5E,EAAGklD,EAAOr5C,IAAKq5C,EAAOr5C,IAAMq5C,EAAO3wC,QACxG,OAAOlZ,KAAK+mD,YAAYj1D,GAIpC,OAAO,IACX,CACHi4D,YAAY35D,GACL,MAAMgrB,EAAOpb,KAAKvR,QAClB,IAAKu7D,GAAW55D,EAAE2P,KAAMqb,GACpB,OAEJ,MAAM6uC,EAAcjqD,KAAK4pD,iBAAiBx5D,EAAE8C,EAAG9C,EAAEuU,GACjD,GAAe,cAAXvU,EAAE2P,MAAmC,aAAX3P,EAAE2P,KAAqB,CACjD,MAAMmqD,EAAWlqD,KAAK6mD,aAChBsD,EAAW1D,GAAWyD,EAAUD,GAClCC,IAAaC,GACb1nD,GAAS2Y,EAAKgvC,QAAS,CACnBh6D,EACA85D,EACAlqD,MACDA,MAEPA,KAAK6mD,aAAeoD,EAChBA,IAAgBE,GAChB1nD,GAAS2Y,EAAKtE,QAAS,CACnB1mB,EACA65D,EACAjqD,MACDA,KAEX,MAAWiqD,GACPxnD,GAAS2Y,EAAKrE,QAAS,CACnB3mB,EACA65D,EACAjqD,MACDA,KAEX,EAEJ,SAASkoD,GAAkB7B,EAAUe,EAAW/wC,EAAKsxC,EAAYC,GAC7D,MAAMhgC,EAAYyiC,GAAmB1C,EAAYtB,EAAUe,EAAW/wC,GAChEmwC,EAAa8D,GAAoB1C,EAAaD,EAAYP,EAAUlxC,YAC1E,MAAO,CACH0R,YACA4+B,aAER,CACA,SAAS6D,GAAmB1C,EAAYtB,EAAUe,EAAW/wC,GACzD,IAAIk0C,EAAiB5C,EAAW9zC,KAIhC,OAHI02C,GAA4C,kBAAnBA,IACzBA,EAAiBA,EAAergC,QAAO,CAACl6B,EAAGC,IAAID,EAAEiB,OAAShB,EAAEgB,OAASjB,EAAIC,KAEtEo2D,EAAWe,EAAU3hD,KAAO,EAAI4Q,EAAIkC,YAAYgyC,GAAgB52C,KAC3E,CACA,SAAS22C,GAAoB1C,EAAaD,EAAY4B,GAClD,IAAI/C,EAAaoB,EAIjB,MAH+B,kBAApBD,EAAW9zC,OAClB2yC,EAAagD,GAA0B7B,EAAY4B,IAEhD/C,CACX,CACA,SAASgD,GAA0B7B,EAAY4B,GAC3C,MAAMjY,EAAcqW,EAAW9zC,KAAO8zC,EAAW9zC,KAAK5iB,OAAS,GAAM,EACrE,OAAOs4D,EAAiBjY,CAC5B,CACA,SAAS0Y,GAAWjqD,EAAMqb,GACtB,QAAc,cAATrb,GAAiC,aAATA,IAAyBqb,EAAKtE,UAAWsE,EAAKgvC,aAGvEhvC,EAAKrE,SAAqB,UAAThX,GAA6B,YAATA,EAI7C,CACA,IAAIyqD,GAAgB,CAChBh8D,GAAI,SACPi8D,SAAU/D,GACP59C,MAAO8I,EAAO84C,EAAOj8D,GACjB,MAAMk8D,EAAS/4C,EAAM+4C,OAAS,IAAIjE,GAAO,CACrCrwC,IAAKzE,EAAMyE,IACX5nB,UACAmjB,UAEJuwB,GAAQ7V,UAAU1a,EAAO+4C,EAAQl8D,GACjC0zC,GAAQ0C,OAAOjzB,EAAO+4C,EAC1B,EACArgC,KAAM1Y,GACFuwB,GAAQ6C,UAAUpzB,EAAOA,EAAM+4C,eACxB/4C,EAAM+4C,MACjB,EACAlc,aAAc78B,EAAO84C,EAAOj8D,GACxB,MAAMk8D,EAAS/4C,EAAM+4C,OACrBxoB,GAAQ7V,UAAU1a,EAAO+4C,EAAQl8D,GACjCk8D,EAAOl8D,QAAUA,CACrB,EACAohD,YAAaj+B,GACT,MAAM+4C,EAAS/4C,EAAM+4C,OACrBA,EAAOzD,cACPyD,EAAOxC,gBACX,EACAyC,WAAYh5C,EAAOjP,GACVA,EAAKohD,QACNnyC,EAAM+4C,OAAOZ,YAAYpnD,EAAK0iB,MAEtC,EACAjW,SAAU,CACNuD,SAAS,EACTitB,SAAU,MACVzzB,MAAO,SACPw2B,UAAU,EACV3/B,SAAS,EACTzC,OAAQ,IACRwW,QAAS3mB,EAAGu3D,EAAYgD,GACpB,MAAMnnD,EAAQmkD,EAAWpkD,aACnBsnD,EAAKF,EAAO/4C,MACdi5C,EAAG7J,iBAAiBx9C,IACpBqnD,EAAGz6C,KAAK5M,GACRmkD,EAAWp2B,QAAS,IAEpBs5B,EAAG56C,KAAKzM,GACRmkD,EAAWp2B,QAAS,EAE5B,EACAza,QAAS,KACTszC,QAAS,KACT90B,OAAQ,CACJh1B,MAAQ+V,GAAMA,EAAIzE,MAAMnjB,QAAQ6R,MAChC+lD,SAAU,GACV91C,QAAS,GACT42C,eAAgBv1C,GACZ,MAAM6D,EAAW7D,EAAMjjB,KAAK8mB,UACpB6f,QAAQ,cAAEgxB,EAAc,WAAE3sC,EAAW,UAAE4B,EAAU,MAAEjb,EAAM,gBAAEwqD,EAAgB,aAAEhG,IAAqBlzC,EAAM+4C,OAAOl8D,QACvH,OAAOmjB,EAAMmc,yBAAyB17B,KAAKm8B,IACvC,MAAM1iC,EAAQ0iC,EAAKmB,WAAWzL,SAASoiC,EAAgB,OAAIl1D,GACrDspB,EAAcwD,GAAUpyB,EAAM4uB,aACpC,MAAO,CACH7G,KAAM4B,EAAS+Y,EAAKhrB,OAAOgzB,MAC3Blb,UAAWxvB,EAAMypB,gBACjB8zC,UAAW/oD,EACXixB,QAAS/C,EAAKre,QACdw4C,QAAS78D,EAAMi/D,eACflC,SAAU/8D,EAAMuoD,WAChBmB,eAAgB1pD,EAAMwoD,iBACtBsU,SAAU98D,EAAMk/D,gBAChB/3C,WAAYyH,EAAY/G,MAAQ+G,EAAYxB,QAAU,EACtDiD,YAAarwB,EAAM0pB,YACnBmE,WAAYA,GAAc7tB,EAAM6tB,WAChCC,SAAU9tB,EAAM8tB,SAChB2B,UAAWA,GAAazvB,EAAMyvB,UAC9BupC,aAAcgG,IAAoBhG,GAAgBh5D,EAAMg5D,cACxDvhD,aAAcirB,EAAKhrB,MACtB,GACFxD,KACP,GAEJ4T,MAAO,CACHtT,MAAQ+V,GAAMA,EAAIzE,MAAMnjB,QAAQ6R,MAChCqS,SAAS,EACTitB,SAAU,SACV/rB,KAAM,KAGdkB,YAAa,CACTpF,YAAcC,IAAQA,EAAKiF,WAAW,MACtCygB,OAAQ,CACJ3lB,YAAcC,IAAQ,CACd,iBACA,SACA,QACF4C,SAAS5C,MAK3B,MAAMq7C,WAAcvhB,GACnB5pC,YAAYqsB,GACL4Q,QACA/8B,KAAK4R,MAAQua,EAAOva,MACpB5R,KAAKvR,QAAU09B,EAAO19B,QACtBuR,KAAKqW,IAAM8V,EAAO9V,IAClBrW,KAAKkrD,cAAW95D,EAChB4O,KAAKwQ,SAAMpf,EACX4O,KAAKyQ,YAASrf,EACd4O,KAAKsM,UAAOlb,EACZ4O,KAAKuM,WAAQnb,EACb4O,KAAK2T,WAAQviB,EACb4O,KAAKkZ,YAAS9nB,EACd4O,KAAK4/B,cAAWxuC,EAChB4O,KAAKO,YAASnP,EACd4O,KAAK2iC,cAAWvxC,CACpB,CACAu6B,OAAO7O,EAAU6I,GACb,MAAMvK,EAAOpb,KAAKvR,QAGlB,GAFAuR,KAAKsM,KAAO,EACZtM,KAAKwQ,IAAM,GACN4K,EAAKzI,QAEN,YADA3S,KAAK2T,MAAQ3T,KAAKkZ,OAASlZ,KAAKuM,MAAQvM,KAAKyQ,OAAS,GAG1DzQ,KAAK2T,MAAQ3T,KAAKuM,MAAQuQ,EAC1B9c,KAAKkZ,OAASlZ,KAAKyQ,OAASkV,EAC5B,MAAMgvB,EAAYviD,GAAQgpB,EAAKvH,MAAQuH,EAAKvH,KAAK5iB,OAAS,EAC1D+O,KAAKkrD,SAAWhtC,GAAU9C,EAAK7K,SAC/B,MAAM46C,EAAWxW,EAAYx2B,GAAO/C,EAAKpF,MAAME,WAAalW,KAAKkrD,SAAShyC,OACtElZ,KAAK27B,eACL37B,KAAKkZ,OAASiyC,EAEdnrD,KAAK2T,MAAQw3C,CAErB,CACAxvB,eACI,MAAMlX,EAAMzkB,KAAKvR,QAAQmxC,SACzB,MAAe,QAARnb,GAAyB,WAARA,CAC5B,CACA2mC,UAAUx4C,GACN,MAAM,IAAEpC,EAAI,KAAElE,EAAK,OAAEmE,EAAO,MAAElE,EAAM,QAAE9d,GAAauR,KAC7CmM,EAAQ1d,EAAQ0d,MACtB,IACI2Q,EAAU6vB,EAAQC,EADlBhzB,EAAW,EAkBf,OAhBI5Z,KAAK27B,gBACLgR,EAASvgC,GAAeD,EAAOG,EAAMC,GACrCqgC,EAASp8B,EAAMoC,EACfkK,EAAWvQ,EAAQD,IAEM,SAArB7d,EAAQmxC,UACR+M,EAASrgC,EAAOsG,EAChBg6B,EAASxgC,GAAeD,EAAOsE,EAAQD,GACvCoJ,GAAiB,GAANhU,KAEX+mC,EAASpgC,EAAQqG,EACjBg6B,EAASxgC,GAAeD,EAAOqE,EAAKC,GACpCmJ,EAAgB,GAALhU,IAEfkX,EAAWrM,EAASD,GAEjB,CACHm8B,SACAC,SACA9vB,WACAlD,WAER,CACA4P,OACI,MAAMnT,EAAMrW,KAAKqW,IACX+E,EAAOpb,KAAKvR,QAClB,IAAK2sB,EAAKzI,QACN,OAEJ,MAAM04C,EAAWltC,GAAO/C,EAAKpF,MACvBE,EAAam1C,EAASn1C,WACtBtD,EAASsD,EAAa,EAAIlW,KAAKkrD,SAAS16C,KACxC,OAAEm8B,EAAO,OAAEC,EAAO,SAAE9vB,EAAS,SAAElD,GAAc5Z,KAAKorD,UAAUx4C,GAClE4J,GAAWnG,EAAK+E,EAAKvH,KAAM,EAAG,EAAGw3C,EAAU,CACvC/qD,MAAO8a,EAAK9a,MACZwc,WACAlD,WACA2B,UAAWrP,GAAmBkP,EAAKjP,OACnCqP,aAAc,SACdH,YAAa,CACTsxB,EACAC,IAGZ,EAEJ,SAAS0e,GAAY15C,EAAOq/B,GACxB,MAAMr9B,EAAQ,IAAIq3C,GAAM,CACpB50C,IAAKzE,EAAMyE,IACX5nB,QAASwiD,EACTr/B,UAEJuwB,GAAQ7V,UAAU1a,EAAOgC,EAAOq9B,GAChC9O,GAAQ0C,OAAOjzB,EAAOgC,GACtBhC,EAAM25C,WAAa33C,CACvB,CACA,IAAI43C,GAAe,CACfh9D,GAAI,QACPi8D,SAAUQ,GACPniD,MAAO8I,EAAO84C,EAAOj8D,GACjB68D,GAAY15C,EAAOnjB,EACvB,EACA67B,KAAM1Y,GACF,MAAM25C,EAAa35C,EAAM25C,WACzBppB,GAAQ6C,UAAUpzB,EAAO25C,UAClB35C,EAAM25C,UACjB,EACA9c,aAAc78B,EAAO84C,EAAOj8D,GACxB,MAAMmlB,EAAQhC,EAAM25C,WACpBppB,GAAQ7V,UAAU1a,EAAOgC,EAAOnlB,GAChCmlB,EAAMnlB,QAAUA,CACpB,EACA2gB,SAAU,CACNjD,MAAO,SACPwG,SAAS,EACTqD,KAAM,CACFzV,OAAQ,QAEZoiC,UAAU,EACVpyB,QAAS,GACTqvB,SAAU,MACV/rB,KAAM,GACNtT,OAAQ,KAEZs2C,cAAe,CACXv2C,MAAO,SAEXyU,YAAa,CACTpF,aAAa,EACbD,YAAY,IAIR,IAAI+7C,QA2ChB,MAAMC,GAAc,CACnBC,QAAS79D,GACF,IAAKA,EAAMmD,OACP,OAAO,EAEX,IAAIa,EAAGd,EACHkC,EAAI,EACJyR,EAAI,EACJmwB,EAAQ,EACZ,IAAIhjC,EAAI,EAAGd,EAAMlD,EAAMmD,OAAQa,EAAId,IAAOc,EAAE,CACxC,MAAMqyB,EAAKr2B,EAAMgE,GAAGiyB,QACpB,GAAII,GAAMA,EAAGylB,WAAY,CACrB,MAAMnlB,EAAMN,EAAGwlB,kBACfz2C,GAAKuxB,EAAIvxB,EACTyR,GAAK8f,EAAI9f,IACPmwB,CACN,CACJ,CACA,MAAO,CACH5hC,EAAGA,EAAI4hC,EACPnwB,EAAGA,EAAImwB,EAEf,EACH2M,QAAS3zC,EAAO89D,GACT,IAAK99D,EAAMmD,OACP,OAAO,EAEX,IAGIa,EAAGd,EAAK66D,EAHR34D,EAAI04D,EAAc14D,EAClByR,EAAIinD,EAAcjnD,EAClBq8B,EAAch/B,OAAO+D,kBAEzB,IAAIjU,EAAI,EAAGd,EAAMlD,EAAMmD,OAAQa,EAAId,IAAOc,EAAE,CACxC,MAAMqyB,EAAKr2B,EAAMgE,GAAGiyB,QACpB,GAAII,GAAMA,EAAGylB,WAAY,CACrB,MAAMpM,EAASrZ,EAAG8c,iBACZ9wC,EAAIsY,GAAsBmjD,EAAepuB,GAC3CrtC,EAAI6wC,IACJA,EAAc7wC,EACd07D,EAAiB1nC,EAEzB,CACJ,CACA,GAAI0nC,EAAgB,CAChB,MAAMC,EAAKD,EAAeliB,kBAC1Bz2C,EAAI44D,EAAG54D,EACPyR,EAAImnD,EAAGnnD,CACX,CACA,MAAO,CACHzR,IACAyR,IAER,GAEJ,SAASonD,GAAajhD,EAAMkhD,GAQxB,OAPIA,IACI55D,GAAQ45D,GACR75D,MAAMuP,UAAUsD,KAAKnC,MAAMiI,EAAMkhD,GAEjClhD,EAAK9F,KAAKgnD,IAGXlhD,CACX,CACC,SAASmhD,GAAcn7D,GACpB,OAAoB,kBAARA,GAAoBA,aAAeo7D,SAAWp7D,EAAIgT,QAAQ,OAAS,EACpEhT,EAAIgU,MAAM,MAEdhU,CACX,CACC,SAASq7D,GAAkBv6C,EAAO7jB,GAC/B,MAAM,QAAEg2B,EAAQ,aAAExgB,EAAa,MAAEC,GAAWzV,EACtC4hC,EAAa/d,EAAMiiB,eAAetwB,GAAcosB,YAChD,MAAE6G,EAAM,MAAE/0B,GAAWkuB,EAAW4G,iBAAiB/yB,GACvD,MAAO,CACHoO,QACA4kB,QACA5G,OAAQD,EAAWgG,UAAUnyB,GAC7BstB,IAAKlf,EAAMjjB,KAAK8mB,SAASlS,GAAc5U,KAAK6U,GAC5C4oD,eAAgB3qD,EAChBkvB,QAAShB,EAAWoD,aACpBlC,UAAWrtB,EACXD,eACAwgB,UAER,CACC,SAASsoC,GAAeC,EAAS79D,GAC9B,MAAM4nB,EAAMi2C,EAAQ16C,MAAMyE,KACpB,KAAEk2C,EAAK,OAAEC,EAAO,MAAE54C,GAAW04C,GAC7B,SAAEjG,EAAS,UAAED,GAAe33D,EAC5Bg+D,EAAWtuC,GAAO1vB,EAAQg+D,UAC1BhD,EAAYtrC,GAAO1vB,EAAQg7D,WAC3BiD,EAAavuC,GAAO1vB,EAAQi+D,YAC5BC,EAAiB/4C,EAAM3iB,OACvB27D,EAAkBJ,EAAOv7D,OACzB47D,EAAoBN,EAAKt7D,OACzBsf,EAAU2N,GAAUzvB,EAAQ8hB,SAClC,IAAI2I,EAAS3I,EAAQ2I,OACjBvF,EAAQ,EACRm5C,EAAqBP,EAAKriC,QAAO,CAAC4K,EAAOi4B,IAAWj4B,EAAQi4B,EAASC,OAAO/7D,OAAS87D,EAAStwC,MAAMxrB,OAAS87D,EAASE,MAAMh8D,QAAQ,GAKxI,GAJA67D,GAAsBR,EAAQY,WAAWj8D,OAASq7D,EAAQa,UAAUl8D,OAChE07D,IACAzzC,GAAUyzC,EAAiBlD,EAAUvzC,YAAcy2C,EAAiB,GAAKl+D,EAAQ2+D,aAAe3+D,EAAQ4+D,mBAExGP,EAAoB,CACpB,MAAMQ,EAAiB7+D,EAAQ8+D,cAAgBr+D,KAAKC,IAAIi3D,EAAWqG,EAASv2C,YAAcu2C,EAASv2C,WACnGgD,GAAU2zC,EAAoBS,GAAkBR,EAAqBD,GAAqBJ,EAASv2C,YAAc42C,EAAqB,GAAKr+D,EAAQ++D,WACvJ,CACIZ,IACA1zC,GAAUzqB,EAAQg/D,gBAAkBb,EAAkBF,EAAWx2C,YAAc02C,EAAkB,GAAKn+D,EAAQi/D,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASlyC,GAC1B/H,EAAQzkB,KAAKC,IAAIwkB,EAAO0C,EAAIkC,YAAYmD,GAAM/H,MAAQg6C,EAC1D,EAiBA,OAhBAt3C,EAAI0C,OACJ1C,EAAIL,KAAOyzC,EAAUpxC,OACrBvV,GAAKwpD,EAAQ14C,MAAOg6C,GACpBv3C,EAAIL,KAAOy2C,EAASp0C,OACpBvV,GAAKwpD,EAAQY,WAAWvzB,OAAO2yB,EAAQa,WAAYS,GACnDD,EAAel/D,EAAQ8+D,cAAgBlH,EAAW,EAAI53D,EAAQ80C,WAAa,EAC3EzgC,GAAKypD,GAAOQ,IACRjqD,GAAKiqD,EAASC,OAAQY,GACtB9qD,GAAKiqD,EAAStwC,MAAOmxC,GACrB9qD,GAAKiqD,EAASE,MAAOW,EAAa,IAEtCD,EAAe,EACft3C,EAAIL,KAAO02C,EAAWr0C,OACtBvV,GAAKwpD,EAAQE,OAAQoB,GACrBv3C,EAAI8C,UACJxF,GAASpD,EAAQoD,MACV,CACHA,QACAuF,SAER,CACA,SAAS20C,GAAgBj8C,EAAOnM,GAC5B,MAAM,EAAEd,EAAE,OAAEuU,GAAYzT,EACxB,OAAId,EAAIuU,EAAS,EACN,MACAvU,EAAIiN,EAAMsH,OAASA,EAAS,EAC5B,SAEJ,QACX,CACA,SAAS40C,GAAoBC,EAAQn8C,EAAOnjB,EAASgX,GACjD,MAAM,EAAEvS,EAAE,MAAEygB,GAAWlO,EACjBuoD,EAAQv/D,EAAQw/D,UAAYx/D,EAAQy/D,aAC1C,MAAe,SAAXH,GAAqB76D,EAAIygB,EAAQq6C,EAAQp8C,EAAM+B,QAGpC,UAAXo6C,GAAsB76D,EAAIygB,EAAQq6C,EAAQ,QAA9C,EAGJ,CACA,SAASG,GAAgBv8C,EAAOnjB,EAASgX,EAAM2oD,GAC3C,MAAM,EAAEl7D,EAAE,MAAEygB,GAAWlO,GACfkO,MAAO06C,EAAa13B,WAAW,KAAErqB,EAAK,MAAEC,IAAcqF,EAC9D,IAAIm8C,EAAS,SAWb,MAVe,WAAXK,EACAL,EAAS76D,IAAMoZ,EAAOC,GAAS,EAAI,OAAS,QACrCrZ,GAAKygB,EAAQ,EACpBo6C,EAAS,OACF76D,GAAKm7D,EAAa16C,EAAQ,IACjCo6C,EAAS,SAETD,GAAoBC,EAAQn8C,EAAOnjB,EAASgX,KAC5CsoD,EAAS,UAENA,CACX,CACC,SAASO,GAAmB18C,EAAOnjB,EAASgX,GACzC,MAAM2oD,EAAS3oD,EAAK2oD,QAAU3/D,EAAQ2/D,QAAUP,GAAgBj8C,EAAOnM,GACvE,MAAO,CACHsoD,OAAQtoD,EAAKsoD,QAAUt/D,EAAQs/D,QAAUI,GAAgBv8C,EAAOnjB,EAASgX,EAAM2oD,GAC/EA,SAER,CACA,SAASG,GAAO9oD,EAAMsoD,GAClB,IAAI,EAAE76D,EAAE,MAAEygB,GAAWlO,EAMrB,MALe,UAAXsoD,EACA76D,GAAKygB,EACa,WAAXo6C,IACP76D,GAAKygB,EAAQ,GAEVzgB,CACX,CACA,SAASs7D,GAAO/oD,EAAM2oD,EAAQK,GAC1B,IAAI,EAAE9pD,EAAE,OAAEuU,GAAYzT,EAQtB,MAPe,QAAX2oD,EACAzpD,GAAK8pD,EAEL9pD,GADkB,WAAXypD,EACFl1C,EAASu1C,EAETv1C,EAAS,EAEXvU,CACX,CACC,SAAS+pD,GAAmBjgE,EAASgX,EAAMkpD,EAAW/8C,GACnD,MAAM,UAAEq8C,EAAU,aAAEC,EAAa,aAAE10C,GAAkB/qB,GAC/C,OAAEs/D,EAAO,OAAEK,GAAYO,EACvBF,EAAiBR,EAAYC,GAC7B,QAAEjxC,EAAQ,SAAEG,EAAS,WAAEF,EAAW,YAAEC,GAAiBc,GAAczE,GACzE,IAAItmB,EAAIq7D,GAAO9oD,EAAMsoD,GACrB,MAAMppD,EAAI6pD,GAAO/oD,EAAM2oD,EAAQK,GAY/B,MAXe,WAAXL,EACe,SAAXL,EACA76D,GAAKu7D,EACa,UAAXV,IACP76D,GAAKu7D,GAES,SAAXV,EACP76D,GAAKhE,KAAKC,IAAI8tB,EAASC,GAAc+wC,EACnB,UAAXF,IACP76D,GAAKhE,KAAKC,IAAIiuB,EAAUD,GAAe8wC,GAEpC,CACH/6D,EAAGmW,GAAYnW,EAAG,EAAG0e,EAAM+B,MAAQlO,EAAKkO,OACxChP,EAAG0E,GAAY1E,EAAG,EAAGiN,EAAMsH,OAASzT,EAAKyT,QAEjD,CACA,SAAS01C,GAAYtC,EAASngD,EAAO1d,GACjC,MAAM8hB,EAAU2N,GAAUzvB,EAAQ8hB,SAClC,MAAiB,WAAVpE,EAAqBmgD,EAAQp5D,EAAIo5D,EAAQ34C,MAAQ,EAAc,UAAVxH,EAAoBmgD,EAAQp5D,EAAIo5D,EAAQ34C,MAAQpD,EAAQhE,MAAQ+/C,EAAQp5D,EAAIqd,EAAQjE,IACpJ,CACC,SAASuiD,GAAwBpsD,GAC9B,OAAOspD,GAAa,GAAIE,GAAcxpD,GAC1C,CACA,SAASqsD,GAAqBnsC,EAAQ2pC,EAASyC,GAC3C,OAAO/vC,GAAc2D,EAAQ,CACzB2pC,UACAyC,eACAhvD,KAAM,WAEd,CACA,SAASivD,GAAkBlmC,EAAWnT,GAClC,MAAM4B,EAAW5B,GAAWA,EAAQgb,SAAWhb,EAAQgb,QAAQ27B,SAAW32C,EAAQgb,QAAQ27B,QAAQxjC,UAClG,OAAOvR,EAAWuR,EAAUvR,SAASA,GAAYuR,CACrD,CACA,MAAMmmC,GAAmB,CACrBC,YAAa5tD,GACbsS,MAAOm7C,GACH,GAAIA,EAAa99D,OAAS,EAAG,CACzB,MAAMlD,EAAOghE,EAAa,GACpBz5B,EAASvnC,EAAK6jB,MAAMjjB,KAAK2mC,OACzB65B,EAAa75B,EAASA,EAAOrkC,OAAS,EAC5C,GAAI+O,MAAQA,KAAKvR,SAAiC,YAAtBuR,KAAKvR,QAAQioB,KACrC,OAAO3oB,EAAK4iC,QAAQ6F,OAAS,GAC1B,GAAIzoC,EAAKyoC,MACZ,OAAOzoC,EAAKyoC,MACT,GAAI24B,EAAa,GAAKphE,EAAK8iC,UAAYs+B,EAC1C,OAAO75B,EAAOvnC,EAAK8iC,UAE3B,CACA,MAAO,EACX,EACAu+B,WAAY9tD,GACZ4rD,WAAY5rD,GACZ+tD,YAAa/tD,GACbk1B,MAAO84B,GACH,GAAItvD,MAAQA,KAAKvR,SAAiC,YAAtBuR,KAAKvR,QAAQioB,KACrC,OAAO44C,EAAY94B,MAAQ,KAAO84B,EAAYlD,gBAAkBkD,EAAYlD,eAEhF,IAAI51B,EAAQ84B,EAAY3+B,QAAQ6F,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAM/0B,EAAQ6tD,EAAYlD,eAI1B,OAHK5qD,GAAcC,KACf+0B,GAAS/0B,GAEN+0B,CACX,EACA+4B,WAAYD,GACR,MAAM9gC,EAAO8gC,EAAY19C,MAAMiiB,eAAey7B,EAAY/rD,cACpD9U,EAAU+/B,EAAKmB,WAAWzL,SAASorC,EAAYz+B,WACrD,MAAO,CACHrb,YAAa/mB,EAAQ+mB,YACrBD,gBAAiB9mB,EAAQ8mB,gBACzBmF,YAAajsB,EAAQisB,YACrB25B,WAAY5lD,EAAQ4lD,WACpBC,iBAAkB7lD,EAAQ6lD,iBAC1BwQ,aAAc,EAEtB,EACA0K,iBACI,OAAOxvD,KAAKvR,QAAQghE,SACxB,EACAC,gBAAiBJ,GACb,MAAM9gC,EAAO8gC,EAAY19C,MAAMiiB,eAAey7B,EAAY/rD,cACpD9U,EAAU+/B,EAAKmB,WAAWzL,SAASorC,EAAYz+B,WACrD,MAAO,CACHlX,WAAYlrB,EAAQkrB,WACpBC,SAAUnrB,EAAQmrB,SAE1B,EACA+1C,WAAYruD,GACZ6rD,UAAW7rD,GACXsuD,aAActuD,GACdkrD,OAAQlrD,GACRuuD,YAAavuD,IAEhB,SAASwuD,GAA2BhnC,EAAWlZ,EAAMyG,EAAK+hC,GACvD,MAAMpxC,EAAS8hB,EAAUlZ,GAAMhO,KAAKyU,EAAK+hC,GACzC,MAAsB,qBAAXpxC,EACAioD,GAAiBr/C,GAAMhO,KAAKyU,EAAK+hC,GAErCpxC,CACX,CACA,MAAM+oD,WAAgBrmB,GACrBhY,mBAAqBg6B,GAClB5rD,YAAYqsB,GACR4Q,QACA/8B,KAAKgwD,QAAU,EACfhwD,KAAKypB,QAAU,GACfzpB,KAAKiwD,oBAAiB7+D,EACtB4O,KAAKkwD,WAAQ9+D,EACb4O,KAAKmwD,uBAAoB/+D,EACzB4O,KAAKowD,cAAgB,GACrBpwD,KAAKitB,iBAAc77B,EACnB4O,KAAKsyB,cAAWlhC,EAChB4O,KAAK4R,MAAQua,EAAOva,MACpB5R,KAAKvR,QAAU09B,EAAO19B,QACtBuR,KAAKqwD,gBAAaj/D,EAClB4O,KAAK4T,WAAQxiB,EACb4O,KAAKktD,gBAAa97D,EAClB4O,KAAKusD,UAAOn7D,EACZ4O,KAAKmtD,eAAY/7D,EACjB4O,KAAKwsD,YAASp7D,EACd4O,KAAK+tD,YAAS38D,EACd4O,KAAKouD,YAASh9D,EACd4O,KAAK9M,OAAI9B,EACT4O,KAAK2E,OAAIvT,EACT4O,KAAKkZ,YAAS9nB,EACd4O,KAAK2T,WAAQviB,EACb4O,KAAKswD,YAASl/D,EACd4O,KAAKuwD,YAASn/D,EACd4O,KAAKwwD,iBAAcp/D,EACnB4O,KAAKywD,sBAAmBr/D,EACxB4O,KAAK0wD,qBAAkBt/D,CAC3B,CACAshC,WAAWjkC,GACPuR,KAAKvR,QAAUA,EACfuR,KAAKmwD,uBAAoB/+D,EACzB4O,KAAKsyB,cAAWlhC,CACpB,CACHgmC,qBACO,MAAMjG,EAASnxB,KAAKmwD,kBACpB,GAAIh/B,EACA,OAAOA,EAEX,MAAMvf,EAAQ5R,KAAK4R,MACbnjB,EAAUuR,KAAKvR,QAAQ2yB,WAAWphB,KAAK8Y,cACvCsC,EAAO3sB,EAAQ27C,SAAWx4B,EAAMnjB,QAAQshB,WAAathB,EAAQyhB,WAC7DA,EAAa,IAAIgc,GAAWlsB,KAAK4R,MAAOwJ,GAI9C,OAHIA,EAAKwE,aACL5f,KAAKmwD,kBAAoBpyD,OAAOo5B,OAAOjnB,IAEpCA,CACX,CACH4I,aACO,OAAO9Y,KAAKsyB,WAAatyB,KAAKsyB,SAAWw8B,GAAqB9uD,KAAK4R,MAAMkH,aAAc9Y,KAAMA,KAAKowD,eACtG,CACAO,SAASh7C,EAASlnB,GACd,MAAM,UAAEq6B,GAAer6B,EACjBygE,EAAcY,GAA2BhnC,EAAW,cAAe9oB,KAAM2V,GACzE/B,EAAQk8C,GAA2BhnC,EAAW,QAAS9oB,KAAM2V,GAC7Dy5C,EAAaU,GAA2BhnC,EAAW,aAAc9oB,KAAM2V,GAC7E,IAAI8G,EAAQ,GAIZ,OAHAA,EAAQsvC,GAAatvC,EAAOwvC,GAAciD,IAC1CzyC,EAAQsvC,GAAatvC,EAAOwvC,GAAcr4C,IAC1C6I,EAAQsvC,GAAatvC,EAAOwvC,GAAcmD,IACnC3yC,CACX,CACAm0C,cAAc7B,EAActgE,GACxB,OAAOogE,GAAwBiB,GAA2BrhE,EAAQq6B,UAAW,aAAc9oB,KAAM+uD,GACrG,CACA8B,QAAQ9B,EAActgE,GAClB,MAAM,UAAEq6B,GAAer6B,EACjBqiE,EAAY,GAalB,OAZAhuD,GAAKisD,GAAep5C,IAChB,MAAMo3C,EAAW,CACbC,OAAQ,GACRvwC,MAAO,GACPwwC,MAAO,IAEL8D,EAAS/B,GAAkBlmC,EAAWnT,GAC5Co2C,GAAagB,EAASC,OAAQf,GAAc6D,GAA2BiB,EAAQ,cAAe/wD,KAAM2V,KACpGo2C,GAAagB,EAAStwC,MAAOqzC,GAA2BiB,EAAQ,QAAS/wD,KAAM2V,IAC/Eo2C,GAAagB,EAASE,MAAOhB,GAAc6D,GAA2BiB,EAAQ,aAAc/wD,KAAM2V,KAClGm7C,EAAU9rD,KAAK+nD,EAAS,IAErB+D,CACX,CACAE,aAAajC,EAActgE,GACvB,OAAOogE,GAAwBiB,GAA2BrhE,EAAQq6B,UAAW,YAAa9oB,KAAM+uD,GACpG,CACAkC,UAAUlC,EAActgE,GACpB,MAAM,UAAEq6B,GAAer6B,EACjBmhE,EAAeE,GAA2BhnC,EAAW,eAAgB9oB,KAAM+uD,GAC3EvC,EAASsD,GAA2BhnC,EAAW,SAAU9oB,KAAM+uD,GAC/Dc,EAAcC,GAA2BhnC,EAAW,cAAe9oB,KAAM+uD,GAC/E,IAAItyC,EAAQ,GAIZ,OAHAA,EAAQsvC,GAAatvC,EAAOwvC,GAAc2D,IAC1CnzC,EAAQsvC,GAAatvC,EAAOwvC,GAAcO,IAC1C/vC,EAAQsvC,GAAatvC,EAAOwvC,GAAc4D,IACnCpzC,CACX,CACHy0C,aAAaziE,GACN,MAAMqhB,EAAS9P,KAAKypB,QACd96B,EAAOqR,KAAK4R,MAAMjjB,KAClB6hE,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI5+D,EAAGd,EADH+9D,EAAe,GAEnB,IAAIj9D,EAAI,EAAGd,EAAM8e,EAAO7e,OAAQa,EAAId,IAAOc,EACvCi9D,EAAa/pD,KAAKmnD,GAAkBnsD,KAAK4R,MAAO9B,EAAOhe,KAkB3D,OAhBIrD,EAAQ+zB,SACRusC,EAAeA,EAAavsC,QAAO,CAACuB,EAASvgB,EAAOiE,IAAQhZ,EAAQ+zB,OAAOuB,EAASvgB,EAAOiE,EAAO9Y,MAElGF,EAAQ0iE,WACRpC,EAAeA,EAAa7nD,MAAK,CAAClX,EAAGC,IAAIxB,EAAQ0iE,SAASnhE,EAAGC,EAAGtB,MAEpEmU,GAAKisD,GAAep5C,IAChB,MAAMo7C,EAAS/B,GAAkBvgE,EAAQq6B,UAAWnT,GACpD66C,EAAYxrD,KAAK8qD,GAA2BiB,EAAQ,aAAc/wD,KAAM2V,IACxE86C,EAAiBzrD,KAAK8qD,GAA2BiB,EAAQ,kBAAmB/wD,KAAM2V,IAClF+6C,EAAgB1rD,KAAK8qD,GAA2BiB,EAAQ,iBAAkB/wD,KAAM2V,GAAS,IAE7F3V,KAAKwwD,YAAcA,EACnBxwD,KAAKywD,iBAAmBA,EACxBzwD,KAAK0wD,gBAAkBA,EACvB1wD,KAAKqwD,WAAatB,EACXA,CACX,CACApjC,OAAO8Y,EAASsf,GACZ,MAAMt1D,EAAUuR,KAAKvR,QAAQ2yB,WAAWphB,KAAK8Y,cACvChJ,EAAS9P,KAAKypB,QACpB,IAAI5Z,EACAk/C,EAAe,GACnB,GAAKj/C,EAAO7e,OAML,CACH,MAAM2uC,EAAW8rB,GAAYj9D,EAAQmxC,UAAUh+B,KAAK5B,KAAM8P,EAAQ9P,KAAKiwD,gBACvElB,EAAe/uD,KAAKkxD,aAAaziE,GACjCuR,KAAK4T,MAAQ5T,KAAK2wD,SAAS5B,EAActgE,GACzCuR,KAAKktD,WAAaltD,KAAK4wD,cAAc7B,EAActgE,GACnDuR,KAAKusD,KAAOvsD,KAAK6wD,QAAQ9B,EAActgE,GACvCuR,KAAKmtD,UAAYntD,KAAKgxD,aAAajC,EAActgE,GACjDuR,KAAKwsD,OAASxsD,KAAKixD,UAAUlC,EAActgE,GAC3C,MAAMgX,EAAOzF,KAAKkwD,MAAQ7D,GAAersD,KAAMvR,GACzC2iE,EAAkBrzD,OAAOyB,OAAO,CAAC,EAAGogC,EAAUn6B,GAC9CkpD,EAAYL,GAAmBtuD,KAAK4R,MAAOnjB,EAAS2iE,GACpDC,EAAkB3C,GAAmBjgE,EAAS2iE,EAAiBzC,EAAW3uD,KAAK4R,OACrF5R,KAAK+tD,OAASY,EAAUZ,OACxB/tD,KAAKouD,OAASO,EAAUP,OACxBv+C,EAAa,CACTmgD,QAAS,EACT98D,EAAGm+D,EAAgBn+D,EACnByR,EAAG0sD,EAAgB1sD,EACnBgP,MAAOlO,EAAKkO,MACZuF,OAAQzT,EAAKyT,OACbo3C,OAAQ1wB,EAAS1sC,EACjBq9D,OAAQ3wB,EAASj7B,EAEzB,MA5ByB,IAAjB3E,KAAKgwD,UACLngD,EAAa,CACTmgD,QAAS,IA2BrBhwD,KAAKowD,cAAgBrB,EACrB/uD,KAAKsyB,cAAWlhC,EACZye,GACA7P,KAAKo3B,qBAAqBzL,OAAO3rB,KAAM6P,GAEvC40B,GAAWh2C,EAAQ6iE,UACnB7iE,EAAQ6iE,SAAS1vD,KAAK5B,KAAM,CACxB4R,MAAO5R,KAAK4R,MACZ06C,QAAStsD,KACT+jD,UAGZ,CACAwN,UAAUC,EAAcn7C,EAAK5Q,EAAMhX,GAC/B,MAAMgjE,EAAgBzxD,KAAK0xD,iBAAiBF,EAAc/rD,EAAMhX,GAChE4nB,EAAIiE,OAAOm3C,EAAc7d,GAAI6d,EAAc5d,IAC3Cx9B,EAAIiE,OAAOm3C,EAAc3d,GAAI2d,EAAc1d,IAC3C19B,EAAIiE,OAAOm3C,EAAcE,GAAIF,EAAcG,GAC/C,CACAF,iBAAiBF,EAAc/rD,EAAMhX,GACjC,MAAM,OAAEs/D,EAAO,OAAEK,GAAYpuD,MACvB,UAAEiuD,EAAU,aAAEz0C,GAAkB/qB,GAChC,QAAEwuB,EAAQ,SAAEG,EAAS,WAAEF,EAAW,YAAEC,GAAiBc,GAAczE,IACjEtmB,EAAG2+D,EAAMltD,EAAGmtD,GAASN,GACvB,MAAE79C,EAAM,OAAEuF,GAAYzT,EAC5B,IAAImuC,EAAIE,EAAI6d,EAAI9d,EAAIE,EAAI6d,EAoCxB,MAnCe,WAAXxD,GACAra,EAAK+d,EAAM54C,EAAS,EACL,SAAX60C,GACAna,EAAKie,EACL/d,EAAKF,EAAKqa,EACVpa,EAAKE,EAAKka,EACV2D,EAAK7d,EAAKka,IAEVra,EAAKie,EAAMl+C,EACXmgC,EAAKF,EAAKqa,EACVpa,EAAKE,EAAKka,EACV2D,EAAK7d,EAAKka,GAEd0D,EAAK/d,IAGDE,EADW,SAAXia,EACK8D,EAAM3iE,KAAKC,IAAI8tB,EAASC,GAAc+wC,EACzB,UAAXF,EACF8D,EAAMl+C,EAAQzkB,KAAKC,IAAIiuB,EAAUD,GAAe8wC,EAEhDjuD,KAAKswD,OAEC,QAAXlC,GACAva,EAAKie,EACL/d,EAAKF,EAAKoa,EACVra,EAAKE,EAAKma,EACV0D,EAAK7d,EAAKma,IAEVpa,EAAKie,EAAM54C,EACX66B,EAAKF,EAAKoa,EACVra,EAAKE,EAAKma,EACV0D,EAAK7d,EAAKma,GAEd2D,EAAK/d,GAEF,CACHD,KACAE,KACA6d,KACA9d,KACAE,KACA6d,KAER,CACA/b,UAAUkc,EAAI17C,EAAK5nB,GACf,MAAMmlB,EAAQ5T,KAAK4T,MACb3iB,EAAS2iB,EAAM3iB,OACrB,IAAIw4D,EAAW2D,EAAct7D,EAC7B,GAAIb,EAAQ,CACR,MAAMm3D,EAAYrgC,GAAct5B,EAAQ+d,IAAKxM,KAAK9M,EAAG8M,KAAK2T,OAQ1D,IAPAo+C,EAAG7+D,EAAI07D,GAAY5uD,KAAMvR,EAAQg+C,WAAYh+C,GAC7C4nB,EAAIkF,UAAY6sC,EAAU7sC,UAAU9sB,EAAQg+C,YAC5Cp2B,EAAImF,aAAe,SACnBiuC,EAAYtrC,GAAO1vB,EAAQg7D,WAC3B2D,EAAe3+D,EAAQ2+D,aACvB/2C,EAAIiF,UAAY7sB,EAAQujE,WACxB37C,EAAIL,KAAOyzC,EAAUpxC,OACjBvmB,EAAI,EAAGA,EAAIb,IAAUa,EACrBukB,EAAI0G,SAASnJ,EAAM9hB,GAAIs2D,EAAUl1D,EAAE6+D,EAAG7+D,GAAI6+D,EAAGptD,EAAI8kD,EAAUvzC,WAAa,GACxE67C,EAAGptD,GAAK8kD,EAAUvzC,WAAak3C,EAC3Bt7D,EAAI,IAAMb,IACV8gE,EAAGptD,GAAKlW,EAAQ4+D,kBAAoBD,EAGhD,CACJ,CACH6E,cAAc57C,EAAK07C,EAAIjgE,EAAGs2D,EAAW35D,GAC9B,MAAM8gE,EAAavvD,KAAKwwD,YAAY1+D,GAC9B49D,EAAkB1vD,KAAKywD,iBAAiB3+D,IACxC,UAAEs0D,EAAU,SAAEC,GAAc53D,EAC5Bg+D,EAAWtuC,GAAO1vB,EAAQg+D,UAC1ByF,EAAStD,GAAY5uD,KAAM,OAAQvR,GACnC0jE,EAAY/J,EAAUl1D,EAAEg/D,GACxBE,EAAUhM,EAAYqG,EAASv2C,YAAcu2C,EAASv2C,WAAakwC,GAAa,EAAI,EACpFiM,EAASN,EAAGptD,EAAIytD,EACtB,GAAI3jE,EAAQ63D,cAAe,CACvB,MAAMwC,EAAc,CAChBjvC,OAAQ3qB,KAAKE,IAAIi3D,EAAUD,GAAa,EACxCzsC,WAAY+1C,EAAgB/1C,WAC5BC,SAAU81C,EAAgB91C,SAC1Bc,YAAa,GAEXsuC,EAAUZ,EAAUzgC,WAAWwqC,EAAW9L,GAAYA,EAAW,EACjE4C,EAAUoJ,EAASjM,EAAY,EACrC/vC,EAAI8F,YAAc1tB,EAAQ6jE,mBAC1Bj8C,EAAIiF,UAAY7sB,EAAQ6jE,mBACxBl5C,GAAU/C,EAAKyyC,EAAaE,EAASC,GACrC5yC,EAAI8F,YAAcozC,EAAW/5C,YAC7Ba,EAAIiF,UAAYi0C,EAAWh6C,gBAC3B6D,GAAU/C,EAAKyyC,EAAaE,EAASC,EACzC,KAAO,CACH5yC,EAAIpD,UAAYnR,GAASytD,EAAW70C,aAAexrB,KAAKC,OAAO4O,OAAOoM,OAAOolD,EAAW70C,cAAgB60C,EAAW70C,aAAe,EAClIrE,EAAI8F,YAAcozC,EAAW/5C,YAC7Ba,EAAIk/B,YAAYga,EAAWlb,YAAc,IACzCh+B,EAAIm/B,eAAiB+Z,EAAWjb,kBAAoB,EACpD,MAAMie,EAASnK,EAAUzgC,WAAWwqC,EAAW9L,GACzCmM,EAASpK,EAAUzgC,WAAWygC,EAAU1gC,MAAMyqC,EAAW,GAAI9L,EAAW,GACxEvB,EAAe7mC,GAAcsxC,EAAWzK,cAC1C/mD,OAAOoM,OAAO26C,GAAcpL,MAAM5qD,GAAU,IAANA,KACtCunB,EAAI4D,YACJ5D,EAAIiF,UAAY7sB,EAAQ6jE,mBACxBt1C,GAAmB3G,EAAK,CACpBnjB,EAAGq/D,EACH5tD,EAAG0tD,EACHzgE,EAAGy0D,EACHp3D,EAAGm3D,EACHvsC,OAAQirC,IAEZzuC,EAAIoE,OACJpE,EAAIsE,SACJtE,EAAIiF,UAAYi0C,EAAWh6C,gBAC3Bc,EAAI4D,YACJ+C,GAAmB3G,EAAK,CACpBnjB,EAAGs/D,EACH7tD,EAAG0tD,EAAS,EACZzgE,EAAGy0D,EAAW,EACdp3D,EAAGm3D,EAAY,EACfvsC,OAAQirC,IAEZzuC,EAAIoE,SAEJpE,EAAIiF,UAAY7sB,EAAQ6jE,mBACxBj8C,EAAIkG,SAASg2C,EAAQF,EAAQhM,EAAUD,GACvC/vC,EAAIo8C,WAAWF,EAAQF,EAAQhM,EAAUD,GACzC/vC,EAAIiF,UAAYi0C,EAAWh6C,gBAC3Bc,EAAIkG,SAASi2C,EAAQH,EAAS,EAAGhM,EAAW,EAAGD,EAAY,GAEnE,CACA/vC,EAAIiF,UAAYtb,KAAK0wD,gBAAgB5+D,EACzC,CACA4gE,SAASX,EAAI17C,EAAK5nB,GACd,MAAM,KAAE89D,GAAUvsD,MACZ,YAAEwtD,EAAY,UAAEmF,EAAU,cAAEpF,EAAc,UAAEnH,EAAU,SAAEC,EAAS,WAAE9iB,GAAgB90C,EACnFg+D,EAAWtuC,GAAO1vB,EAAQg+D,UAChC,IAAIa,EAAiBb,EAASv2C,WAC1B08C,EAAe,EACnB,MAAMxK,EAAYrgC,GAAct5B,EAAQ+d,IAAKxM,KAAK9M,EAAG8M,KAAK2T,OACpDk/C,EAAiB,SAASn3C,GAC5BrF,EAAI0G,SAASrB,EAAM0sC,EAAUl1D,EAAE6+D,EAAG7+D,EAAI0/D,GAAeb,EAAGptD,EAAI2oD,EAAiB,GAC7EyE,EAAGptD,GAAK2oD,EAAiBE,CAC7B,EACMsF,EAA0B1K,EAAU7sC,UAAUo3C,GACpD,IAAI5F,EAAUgG,EAAWt2C,EAAO3qB,EAAGmM,EAAGmF,EAAM8uC,EAQ5C,IAPA77B,EAAIkF,UAAYo3C,EAChBt8C,EAAImF,aAAe,SACnBnF,EAAIL,KAAOy2C,EAASp0C,OACpB05C,EAAG7+D,EAAI07D,GAAY5uD,KAAM8yD,EAAyBrkE,GAClD4nB,EAAIiF,UAAY7sB,EAAQghE,UACxB3sD,GAAK9C,KAAKktD,WAAY2F,GACtBD,EAAerF,GAA6C,UAA5BuF,EAAoD,WAAdH,EAAyBtM,EAAW,EAAI9iB,EAAa8iB,EAAW,EAAI9iB,EAAa,EACnJzxC,EAAI,EAAGsR,EAAOmpD,EAAKt7D,OAAQa,EAAIsR,IAAQtR,EAAE,CAUzC,IATAi7D,EAAWR,EAAKz6D,GAChBihE,EAAY/yD,KAAK0wD,gBAAgB5+D,GACjCukB,EAAIiF,UAAYy3C,EAChBjwD,GAAKiqD,EAASC,OAAQ6F,GACtBp2C,EAAQswC,EAAStwC,MACb8wC,GAAiB9wC,EAAMxrB,SACvB+O,KAAKiyD,cAAc57C,EAAK07C,EAAIjgE,EAAGs2D,EAAW35D,GAC1C6+D,EAAiBp+D,KAAKC,IAAIs9D,EAASv2C,WAAYkwC,IAE/CnoD,EAAI,EAAGi0C,EAAOz1B,EAAMxrB,OAAQgN,EAAIi0C,IAAQj0C,EACxC40D,EAAep2C,EAAMxe,IACrBqvD,EAAiBb,EAASv2C,WAE9BpT,GAAKiqD,EAASE,MAAO4F,EACzB,CACAD,EAAe,EACftF,EAAiBb,EAASv2C,WAC1BpT,GAAK9C,KAAKmtD,UAAW0F,GACrBd,EAAGptD,GAAK6oD,CACZ,CACAwF,WAAWjB,EAAI17C,EAAK5nB,GAChB,MAAM+9D,EAASxsD,KAAKwsD,OACdv7D,EAASu7D,EAAOv7D,OACtB,IAAIy7D,EAAY56D,EAChB,GAAIb,EAAQ,CACR,MAAMm3D,EAAYrgC,GAAct5B,EAAQ+d,IAAKxM,KAAK9M,EAAG8M,KAAK2T,OAQ1D,IAPAo+C,EAAG7+D,EAAI07D,GAAY5uD,KAAMvR,EAAQwkE,YAAaxkE,GAC9CsjE,EAAGptD,GAAKlW,EAAQg/D,gBAChBp3C,EAAIkF,UAAY6sC,EAAU7sC,UAAU9sB,EAAQwkE,aAC5C58C,EAAImF,aAAe,SACnBkxC,EAAavuC,GAAO1vB,EAAQi+D,YAC5Br2C,EAAIiF,UAAY7sB,EAAQykE,YACxB78C,EAAIL,KAAO02C,EAAWr0C,OAClBvmB,EAAI,EAAGA,EAAIb,IAAUa,EACrBukB,EAAI0G,SAASyvC,EAAO16D,GAAIs2D,EAAUl1D,EAAE6+D,EAAG7+D,GAAI6+D,EAAGptD,EAAI+nD,EAAWx2C,WAAa,GAC1E67C,EAAGptD,GAAK+nD,EAAWx2C,WAAaznB,EAAQi/D,aAEhD,CACJ,CACAvY,eAAe4c,EAAI17C,EAAK88C,EAAa1kE,GACjC,MAAM,OAAEs/D,EAAO,OAAEK,GAAYpuD,MACvB,EAAE9M,EAAE,EAAEyR,GAAOotD,GACb,MAAEp+C,EAAM,OAAEuF,GAAYi6C,GACtB,QAAEl2C,EAAQ,SAAEG,EAAS,WAAEF,EAAW,YAAEC,GAAiBc,GAAcxvB,EAAQ+qB,cACjFnD,EAAIiF,UAAY7sB,EAAQ8mB,gBACxBc,EAAI8F,YAAc1tB,EAAQ+mB,YAC1Ba,EAAIpD,UAAYxkB,EAAQisB,YACxBrE,EAAI4D,YACJ5D,EAAIgE,OAAOnnB,EAAI+pB,EAAStY,GACT,QAAXypD,GACApuD,KAAKuxD,UAAUQ,EAAI17C,EAAK88C,EAAa1kE,GAEzC4nB,EAAIiE,OAAOpnB,EAAIygB,EAAQyJ,EAAUzY,GACjC0R,EAAI+8C,iBAAiBlgE,EAAIygB,EAAOhP,EAAGzR,EAAIygB,EAAOhP,EAAIyY,GACnC,WAAXgxC,GAAkC,UAAXL,GACvB/tD,KAAKuxD,UAAUQ,EAAI17C,EAAK88C,EAAa1kE,GAEzC4nB,EAAIiE,OAAOpnB,EAAIygB,EAAOhP,EAAIuU,EAASiE,GACnC9G,EAAI+8C,iBAAiBlgE,EAAIygB,EAAOhP,EAAIuU,EAAQhmB,EAAIygB,EAAQwJ,EAAaxY,EAAIuU,GAC1D,WAAXk1C,GACApuD,KAAKuxD,UAAUQ,EAAI17C,EAAK88C,EAAa1kE,GAEzC4nB,EAAIiE,OAAOpnB,EAAIgqB,EAAYvY,EAAIuU,GAC/B7C,EAAI+8C,iBAAiBlgE,EAAGyR,EAAIuU,EAAQhmB,EAAGyR,EAAIuU,EAASgE,GACrC,WAAXkxC,GAAkC,SAAXL,GACvB/tD,KAAKuxD,UAAUQ,EAAI17C,EAAK88C,EAAa1kE,GAEzC4nB,EAAIiE,OAAOpnB,EAAGyR,EAAIsY,GAClB5G,EAAI+8C,iBAAiBlgE,EAAGyR,EAAGzR,EAAI+pB,EAAStY,GACxC0R,EAAI+D,YACJ/D,EAAIoE,OACAhsB,EAAQisB,YAAc,GACtBrE,EAAIsE,QAEZ,CACH04C,uBAAuB5kE,GAChB,MAAMmjB,EAAQ5R,KAAK4R,MACbiX,EAAQ7oB,KAAKitB,YACbqmC,EAAQzqC,GAASA,EAAM31B,EACvBqgE,EAAQ1qC,GAASA,EAAMlkB,EAC7B,GAAI2uD,GAASC,EAAO,CAChB,MAAM3zB,EAAW8rB,GAAYj9D,EAAQmxC,UAAUh+B,KAAK5B,KAAMA,KAAKypB,QAASzpB,KAAKiwD,gBAC7E,IAAKrwB,EACD,OAEJ,MAAMn6B,EAAOzF,KAAKkwD,MAAQ7D,GAAersD,KAAMvR,GACzC2iE,EAAkBrzD,OAAOyB,OAAO,CAAC,EAAGogC,EAAU5/B,KAAKkwD,OACnDvB,EAAYL,GAAmB18C,EAAOnjB,EAAS2iE,GAC/Cv2C,EAAQ6zC,GAAmBjgE,EAAS2iE,EAAiBzC,EAAW/8C,GAClE0hD,EAAM7nC,MAAQ5Q,EAAM3nB,GAAKqgE,EAAM9nC,MAAQ5Q,EAAMlW,IAC7C3E,KAAK+tD,OAASY,EAAUZ,OACxB/tD,KAAKouD,OAASO,EAAUP,OACxBpuD,KAAK2T,MAAQlO,EAAKkO,MAClB3T,KAAKkZ,OAASzT,EAAKyT,OACnBlZ,KAAKswD,OAAS1wB,EAAS1sC,EACvB8M,KAAKuwD,OAAS3wB,EAASj7B,EACvB3E,KAAKo3B,qBAAqBzL,OAAO3rB,KAAM6a,GAE/C,CACJ,CACH24C,cACO,QAASxzD,KAAKgwD,OAClB,CACAxmC,KAAKnT,GACD,MAAM5nB,EAAUuR,KAAKvR,QAAQ2yB,WAAWphB,KAAK8Y,cAC7C,IAAIk3C,EAAUhwD,KAAKgwD,QACnB,IAAKA,EACD,OAEJhwD,KAAKqzD,uBAAuB5kE,GAC5B,MAAM0kE,EAAc,CAChBx/C,MAAO3T,KAAK2T,MACZuF,OAAQlZ,KAAKkZ,QAEX64C,EAAK,CACP7+D,EAAG8M,KAAK9M,EACRyR,EAAG3E,KAAK2E,GAEZqrD,EAAU9gE,KAAKsX,IAAIwpD,GAAW,KAAO,EAAIA,EACzC,MAAMz/C,EAAU2N,GAAUzvB,EAAQ8hB,SAC5BkjD,EAAoBzzD,KAAK4T,MAAM3iB,QAAU+O,KAAKktD,WAAWj8D,QAAU+O,KAAKusD,KAAKt7D,QAAU+O,KAAKmtD,UAAUl8D,QAAU+O,KAAKwsD,OAAOv7D,OAC9HxC,EAAQ27C,SAAWqpB,IACnBp9C,EAAI0C,OACJ1C,EAAIq9C,YAAc1D,EAClBhwD,KAAKm1C,eAAe4c,EAAI17C,EAAK88C,EAAa1kE,GAC1Cu5B,GAAsB3R,EAAK5nB,EAAQ26D,eACnC2I,EAAGptD,GAAK4L,EAAQC,IAChBxQ,KAAK61C,UAAUkc,EAAI17C,EAAK5nB,GACxBuR,KAAK0yD,SAASX,EAAI17C,EAAK5nB,GACvBuR,KAAKgzD,WAAWjB,EAAI17C,EAAK5nB,GACzB65B,GAAqBjS,EAAK5nB,EAAQ26D,eAClC/yC,EAAI8C,UAEZ,CACHuqC,oBACO,OAAO1jD,KAAKypB,SAAW,EAC3B,CACHk6B,kBAAkBC,EAAgBgI,GAC3B,MAAM/H,EAAa7jD,KAAKypB,QAClB3Z,EAAS8zC,EAAevxD,KAAI,EAAGkR,eAAeC,YAChD,MAAMgrB,EAAOxuB,KAAK4R,MAAMiiB,eAAetwB,GACvC,IAAKirB,EACD,MAAM,IAAIrM,MAAM,kCAAoC5e,GAExD,MAAO,CACHA,eACAwgB,QAASyK,EAAK7/B,KAAK6U,GACnBA,QACH,IAECihC,GAAWxhC,GAAe4gD,EAAY/zC,GACtC6jD,EAAkB3zD,KAAK4zD,iBAAiB9jD,EAAQ87C,IAClDnnB,GAAWkvB,KACX3zD,KAAKypB,QAAU3Z,EACf9P,KAAKiwD,eAAiBrE,EACtB5rD,KAAK6zD,qBAAsB,EAC3B7zD,KAAK2rB,QAAO,GAEpB,CACHo+B,YAAY35D,EAAG2zD,EAAQ9F,GAAc,GAC9B,GAAI8F,GAAU/jD,KAAK6zD,oBACf,OAAO,EAEX7zD,KAAK6zD,qBAAsB,EAC3B,MAAMplE,EAAUuR,KAAKvR,QACfo1D,EAAa7jD,KAAKypB,SAAW,GAC7B3Z,EAAS9P,KAAKqkD,mBAAmBj0D,EAAGyzD,EAAYE,EAAQ9F,GACxD0V,EAAkB3zD,KAAK4zD,iBAAiB9jD,EAAQ1f,GAChDq0C,EAAUsf,IAAW9gD,GAAe6M,EAAQ+zC,IAAe8P,EAWjE,OAVIlvB,IACAzkC,KAAKypB,QAAU3Z,GACXrhB,EAAQ27C,SAAW37C,EAAQ6iE,YAC3BtxD,KAAKiwD,eAAiB,CAClB/8D,EAAG9C,EAAE8C,EACLyR,EAAGvU,EAAEuU,GAET3E,KAAK2rB,QAAO,EAAMo4B,KAGnBtf,CACX,CACH4f,mBAAmBj0D,EAAGyzD,EAAYE,EAAQ9F,GACnC,MAAMxvD,EAAUuR,KAAKvR,QACrB,GAAe,aAAX2B,EAAE2P,KACF,MAAO,GAEX,IAAKk+C,EACD,OAAO4F,EAEX,MAAM/zC,EAAS9P,KAAK4R,MAAM+wC,0BAA0BvyD,EAAG3B,EAAQioB,KAAMjoB,EAASs1D,GAI9E,OAHIt1D,EAAQuU,SACR8M,EAAO9M,UAEJ8M,CACX,CACH8jD,iBAAiB9jD,EAAQ1f,GAClB,MAAM,OAAEkgE,EAAO,OAAEC,EAAO,QAAE9hE,GAAauR,KACjC4/B,EAAW8rB,GAAYj9D,EAAQmxC,UAAUh+B,KAAK5B,KAAM8P,EAAQ1f,GAClE,OAAoB,IAAbwvC,IAAuB0wB,IAAW1wB,EAAS1sC,GAAKq9D,IAAW3wB,EAASj7B,EAC/E,EAEJ,IAAImvD,GAAiB,CACjBtlE,GAAI,UACJi8D,SAAUsF,GACVrE,eACAqI,UAAWniD,EAAO84C,EAAOj8D,GACjBA,IACAmjB,EAAM06C,QAAU,IAAIyD,GAAQ,CACxBn+C,QACAnjB,YAGZ,EACAggD,aAAc78B,EAAO84C,EAAOj8D,GACpBmjB,EAAM06C,SACN16C,EAAM06C,QAAQ55B,WAAWjkC,EAEjC,EACAulC,MAAOpiB,EAAO84C,EAAOj8D,GACbmjB,EAAM06C,SACN16C,EAAM06C,QAAQ55B,WAAWjkC,EAEjC,EACAulE,UAAWpiD,GACP,MAAM06C,EAAU16C,EAAM06C,QACtB,GAAIA,GAAWA,EAAQkH,cAAe,CAClC,MAAM7wD,EAAO,CACT2pD,WAEJ,IAGO,IAHH16C,EAAMs+B,cAAc,oBAAqB,IACtCvtC,EACHw2C,YAAY,IAEZ,OAEJmT,EAAQ9iC,KAAK5X,EAAMyE,KACnBzE,EAAMs+B,cAAc,mBAAoBvtC,EAC5C,CACJ,EACAioD,WAAYh5C,EAAOjP,GACf,GAAIiP,EAAM06C,QAAS,CACf,MAAMhsB,EAAmB39B,EAAKohD,OAC1BnyC,EAAM06C,QAAQvC,YAAYpnD,EAAK0iB,MAAOib,EAAkB39B,EAAKs7C,eAC7Dt7C,EAAK8hC,SAAU,EAEvB,CACJ,EACAr1B,SAAU,CACNg7B,SAAS,EACTknB,SAAU,KACV1xB,SAAU,UACVrqB,gBAAiB,kBACjBy8C,WAAY,OACZvI,UAAW,CACPlpD,OAAQ,QAEZ6sD,aAAc,EACdC,kBAAmB,EACnB5gB,WAAY,OACZgjB,UAAW,OACXjC,YAAa,EACbf,SAAU,CAAC,EACXkG,UAAW,OACXO,YAAa,OACbxF,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACRnsD,OAAQ,QAEZ0yD,YAAa,OACb1iD,QAAS,EACT29C,aAAc,EACdD,UAAW,EACXz0C,aAAc,EACd4sC,UAAW,CAAC/vC,EAAK+E,IAAOA,EAAKqxC,SAAShnD,KACtC4gD,SAAU,CAAChwC,EAAK+E,IAAOA,EAAKqxC,SAAShnD,KACrC6sD,mBAAoB,OACpB/E,eAAe,EACfhqB,WAAY,EACZ/tB,YAAa,gBACbkF,YAAa,EACb3K,UAAW,CACPV,SAAU,IACVC,OAAQ,gBAEZY,WAAY,CACRjB,QAAS,CACLlP,KAAM,SACN8P,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGRmgD,QAAS,CACL1gD,OAAQ,SACRD,SAAU,MAGlByZ,UAAWmmC,IAEfpY,cAAe,CACX4V,SAAU,OACVC,WAAY,OACZjD,UAAW,QAEf10C,YAAa,CACTpF,YAAcC,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjEF,YAAY,EACZoZ,UAAW,CACPnZ,aAAa,EACbD,YAAY,GAEhBK,UAAW,CACPN,WAAW,GAEfS,WAAY,CACRT,UAAW,cAGnB0sC,uBAAwB,CACpB,gBAeR,MAAM8X,GAAc,CAAC3+B,EAAQxE,EAAKttB,EAAO0wD,KAClB,kBAARpjC,GACPttB,EAAQ8xB,EAAOtwB,KAAK8rB,GAAO,EAC3BojC,EAAYC,QAAQ,CAChB3wD,QACAgzB,MAAO1F,KAEJzpB,MAAMypB,KACbttB,EAAQ,MAELA,GAEX,SAAS4wD,GAAe9+B,EAAQxE,EAAKttB,EAAO0wD,GACxC,MAAM3pB,EAAQjV,EAAOxxB,QAAQgtB,GAC7B,IAAe,IAAXyZ,EACA,OAAO0pB,GAAY3+B,EAAQxE,EAAKttB,EAAO0wD,GAE3C,MAAMnqD,EAAOurB,EAAO++B,YAAYvjC,GAChC,OAAOyZ,IAAUxgC,EAAOvG,EAAQ+mC,CACpC,CACA,MAAMyB,GAAa,CAACxoC,EAAOrU,IAAgB,OAAVqU,EAAiB,KAAO6F,GAAYna,KAAKL,MAAM2U,GAAQ,EAAGrU,GAC3F,SAASmlE,GAAkB7yD,GACvB,MAAM6zB,EAASt1B,KAAKu1B,YACpB,OAAI9zB,GAAS,GAAKA,EAAQ6zB,EAAOrkC,OACtBqkC,EAAO7zB,GAEXA,CACX,CACA,MAAM8yD,WAAsBznB,GACxBpb,UAAY,WACfA,gBAAkB,CACX/f,MAAO,CACHlP,SAAU6xD,KAGlBx0D,YAAYkrB,GACR+R,MAAM/R,GACLhrB,KAAKw0D,iBAAcpjE,EACpB4O,KAAKy0D,YAAc,EACnBz0D,KAAK00D,aAAe,EACxB,CACA31B,KAAKwb,GACD,MAAMoa,EAAQ30D,KAAK00D,aACnB,GAAIC,EAAM1jE,OAAQ,CACd,MAAMqkC,EAASt1B,KAAKu1B,YACpB,IAAK,MAAM,MAAE/xB,EAAM,MAAEgzB,KAAYm+B,EACzBr/B,EAAO9xB,KAAWgzB,GAClBlB,EAAOnqB,OAAO3H,EAAO,GAG7BxD,KAAK00D,aAAe,EACxB,CACA33B,MAAMgC,KAAKwb,EACf,CACA1lB,MAAM/D,EAAKttB,GACP,GAAIhC,GAAcsvB,GACd,OAAO,KAEX,MAAMwE,EAASt1B,KAAKu1B,YAEpB,OADA/xB,EAAQvB,SAASuB,IAAU8xB,EAAO9xB,KAAWstB,EAAMttB,EAAQ4wD,GAAe9+B,EAAQxE,EAAK1uB,GAAeoB,EAAOstB,GAAM9wB,KAAK00D,cACjH1oB,GAAWxoC,EAAO8xB,EAAOrkC,OAAS,EAC7C,CACA89C,sBACI,MAAM,WAAEjgB,EAAW,WAAEC,GAAgB/uB,KAAK6uB,gBAC1C,IAAI,IAAEz/B,EAAI,IAAED,GAAS6Q,KAAKg2B,WAAU,GACR,UAAxBh2B,KAAKvR,QAAQqkB,SACRgc,IACD1/B,EAAM,GAEL2/B,IACD5/B,EAAM6Q,KAAKu1B,YAAYtkC,OAAS,IAGxC+O,KAAK5Q,IAAMA,EACX4Q,KAAK7Q,IAAMA,CACf,CACA+/C,aACI,MAAM9/C,EAAM4Q,KAAK5Q,IACXD,EAAM6Q,KAAK7Q,IACXyjB,EAAS5S,KAAKvR,QAAQmkB,OACtBjB,EAAQ,GACd,IAAI2jB,EAASt1B,KAAKu1B,YAClBD,EAAiB,IAARlmC,GAAaD,IAAQmmC,EAAOrkC,OAAS,EAAIqkC,EAASA,EAAOzzB,MAAMzS,EAAKD,EAAM,GACnF6Q,KAAKy0D,YAAcvlE,KAAKC,IAAImmC,EAAOrkC,QAAU2hB,EAAS,EAAI,GAAI,GAC9D5S,KAAKw0D,YAAcx0D,KAAK5Q,KAAOwjB,EAAS,GAAM,GAC9C,IAAI,IAAInR,EAAQrS,EAAKqS,GAAStS,EAAKsS,IAC/BkQ,EAAM3M,KAAK,CACPvD,UAGR,OAAOkQ,CACX,CACA8kB,iBAAiBh1B,GACb,OAAO6yD,GAAkB1yD,KAAK5B,KAAMyB,EACxC,CACH6qB,YACOyQ,MAAMzQ,YACDtsB,KAAK27B,iBACN37B,KAAKy/B,gBAAkBz/B,KAAKy/B,eAEpC,CACAzF,iBAAiBv4B,GAIb,MAHqB,kBAAVA,IACPA,EAAQzB,KAAK60B,MAAMpzB,IAEN,OAAVA,EAAiBs0B,IAAM/1B,KAAKo+B,oBAAoB38B,EAAQzB,KAAKw0D,aAAex0D,KAAKy0D,YAC5F,CACAx6B,gBAAgBz2B,GACZ,MAAMmO,EAAQ3R,KAAK2R,MACnB,OAAInO,EAAQ,GAAKA,EAAQmO,EAAM1gB,OAAS,EAC7B,KAEJ+O,KAAKg6B,iBAAiBroB,EAAMnO,GAAO/B,MAC9C,CACA68B,iBAAiB7lB,GACb,OAAOvpB,KAAKL,MAAMmR,KAAKw0D,YAAcx0D,KAAK4yC,mBAAmBn6B,GAASzY,KAAKy0D,YAC/E,CACAx3B,eACI,OAAOj9B,KAAKyQ,MAChB,EAGJ,SAASmkD,GAAgBC,EAAmBC,GACxC,MAAMnjD,EAAQ,GACRojD,EAAc,OACd,OAAEjiD,EAAO,KAAEmhC,EAAK,IAAE7kD,EAAI,IAAED,EAAI,UAAE6lE,EAAU,MAAElgC,EAAM,SAAEmgC,EAAS,UAAEC,EAAU,cAAEC,GAAmBN,EAC5FO,EAAOnhB,GAAQ,EACfohB,EAAYJ,EAAW,GACrB7lE,IAAKkmE,EAAOnmE,IAAKomE,GAAUT,EAC7BhmC,GAActtB,GAAcpS,GAC5B2/B,GAAcvtB,GAAcrS,GAC5BqmE,GAAgBh0D,GAAcszB,GAC9B2gC,GAAcF,EAAOD,IAASJ,EAAY,GAChD,IACItqC,EAAQ8qC,EAASC,EAASC,EAD1BlrB,EAAUjkC,IAAS8uD,EAAOD,GAAQD,EAAYD,GAAQA,EAE1D,GAAI1qB,EAAUqqB,IAAgBjmC,IAAeC,EACzC,MAAO,CACH,CACIttB,MAAO6zD,GAEX,CACI7zD,MAAO8zD,IAInBK,EAAY1mE,KAAKk8C,KAAKmqB,EAAO7qB,GAAWx7C,KAAK0X,MAAM0uD,EAAO5qB,GACtDkrB,EAAYP,IACZ3qB,EAAUjkC,GAAQmvD,EAAYlrB,EAAU2qB,EAAYD,GAAQA,GAE3D5zD,GAAcwzD,KACfpqC,EAAS17B,KAAK2P,IAAI,GAAIm2D,GACtBtqB,EAAUx7C,KAAKk8C,KAAKV,EAAU9f,GAAUA,GAE7B,UAAX9X,GACA4iD,EAAUxmE,KAAK0X,MAAM0uD,EAAO5qB,GAAWA,EACvCirB,EAAUzmE,KAAKk8C,KAAKmqB,EAAO7qB,GAAWA,IAEtCgrB,EAAUJ,EACVK,EAAUJ,GAEVzmC,GAAcC,GAAcklB,GAAQ3sC,IAAanY,EAAMC,GAAO6kD,EAAMvJ,EAAU,MAC9EkrB,EAAY1mE,KAAKL,MAAMK,KAAKE,KAAKD,EAAMC,GAAOs7C,EAASuqB,IACvDvqB,GAAWv7C,EAAMC,GAAOwmE,EACxBF,EAAUtmE,EACVumE,EAAUxmE,GACHqmE,GACPE,EAAU5mC,EAAa1/B,EAAMsmE,EAC7BC,EAAU5mC,EAAa5/B,EAAMwmE,EAC7BC,EAAY9gC,EAAQ,EACpB4V,GAAWirB,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWhrB,EAE9BkrB,EADAtvD,GAAasvD,EAAW1mE,KAAKL,MAAM+mE,GAAYlrB,EAAU,KAC7Cx7C,KAAKL,MAAM+mE,GAEX1mE,KAAKk8C,KAAKwqB,IAG9B,MAAMC,EAAgB3mE,KAAKC,IAAI4Y,GAAe2iC,GAAU3iC,GAAe2tD,IACvE9qC,EAAS17B,KAAK2P,IAAI,GAAI2C,GAAcwzD,GAAaa,EAAgBb,GACjEU,EAAUxmE,KAAKL,MAAM6mE,EAAU9qC,GAAUA,EACzC+qC,EAAUzmE,KAAKL,MAAM8mE,EAAU/qC,GAAUA,EACzC,IAAI3sB,EAAI,EAgBR,IAfI6wB,IACIqmC,GAAiBO,IAAYtmE,GAC7BuiB,EAAM3M,KAAK,CACPvD,MAAOrS,IAEPsmE,EAAUtmE,GACV6O,IAEAqI,GAAapX,KAAKL,OAAO6mE,EAAUz3D,EAAIysC,GAAW9f,GAAUA,EAAQx7B,EAAK0mE,GAAkB1mE,EAAKqmE,EAAYZ,KAC5G52D,KAEGy3D,EAAUtmE,GACjB6O,KAGFA,EAAI23D,IAAa33D,EAAE,CACrB,MAAMyT,EAAYxiB,KAAKL,OAAO6mE,EAAUz3D,EAAIysC,GAAW9f,GAAUA,EACjE,GAAImE,GAAcrd,EAAYviB,EAC1B,MAEJwiB,EAAM3M,KAAK,CACPvD,MAAOiQ,GAEf,CAcA,OAbIqd,GAAcomC,GAAiBQ,IAAYxmE,EACvCwiB,EAAM1gB,QAAUqV,GAAaqL,EAAMA,EAAM1gB,OAAS,GAAGwQ,MAAOtS,EAAK2mE,GAAkB3mE,EAAKsmE,EAAYZ,IACpGljD,EAAMA,EAAM1gB,OAAS,GAAGwQ,MAAQtS,EAEhCwiB,EAAM3M,KAAK,CACPvD,MAAOtS,IAGP4/B,GAAc4mC,IAAYxmE,GAClCwiB,EAAM3M,KAAK,CACPvD,MAAOk0D,IAGRhkD,CACX,CACA,SAASmkD,GAAkBr0D,EAAOg0D,GAAY,WAAE55B,EAAW,YAAE/nB,IACzD,MAAMgG,EAAMnS,GAAUmM,GAChB1U,GAASy8B,EAAa3sC,KAAK0d,IAAIkN,GAAO5qB,KAAK2e,IAAIiM,KAAS,KACxD7oB,EAAS,IAAOwkE,GAAc,GAAKh0D,GAAOxQ,OAChD,OAAO/B,KAAKE,IAAIqmE,EAAar2D,EAAOnO,EACxC,CACA,MAAM8kE,WAAwBjpB,GAC1BhtC,YAAYkrB,GACR+R,MAAM/R,GACLhrB,KAAK8I,WAAQ1X,EACb4O,KAAK+I,SAAM3X,EACX4O,KAAKw0D,iBAAcpjE,EACnB4O,KAAKg2D,eAAY5kE,EAClB4O,KAAKy0D,YAAc,CACvB,CACA5/B,MAAM/D,EAAKttB,GACP,OAAIhC,GAAcsvB,KAGE,kBAARA,GAAoBA,aAAe9uB,UAAYC,UAAU6uB,GAF1D,MAKHA,CACZ,CACAmlC,yBACI,MAAM,YAAEpjD,GAAiB7S,KAAKvR,SACxB,WAAEqgC,EAAW,WAAEC,GAAgB/uB,KAAK6uB,gBAC1C,IAAI,IAAEz/B,EAAI,IAAED,GAAS6Q,KACrB,MAAMk2D,EAAUpnE,GAAIM,EAAM0/B,EAAa1/B,EAAMN,EACvCqnE,EAAUrnE,GAAIK,EAAM4/B,EAAa5/B,EAAML,EAC7C,GAAI+jB,EAAa,CACb,MAAMujD,EAAU/vD,GAAKjX,GACfinE,EAAUhwD,GAAKlX,GACjBinE,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEf,CACA,GAAI9mE,IAAQD,EAAK,CACb,IAAIyjB,EAAiB,IAARzjB,EAAY,EAAID,KAAKsX,IAAU,IAANrX,GACtCgnE,EAAOhnE,EAAMyjB,GACRC,GACDqjD,EAAO9mE,EAAMwjB,EAErB,CACA5S,KAAK5Q,IAAMA,EACX4Q,KAAK7Q,IAAMA,CACf,CACAmnE,eACI,MAAMxsB,EAAW9pC,KAAKvR,QAAQkjB,MAC9B,IACIsjD,GADA,cAAE/qB,EAAc,SAAEqsB,GAAczsB,EAepC,OAbIysB,GACAtB,EAAW/lE,KAAKk8C,KAAKprC,KAAK7Q,IAAMonE,GAAYrnE,KAAK0X,MAAM5G,KAAK5Q,IAAMmnE,GAAY,EAC1EtB,EAAW,MACX52C,QAAQC,KAAK,UAAUte,KAAKxR,sBAAsB+nE,mCAA0CtB,8BAC5FA,EAAW,OAGfA,EAAWj1D,KAAKw2D,mBAChBtsB,EAAgBA,GAAiB,IAEjCA,IACA+qB,EAAW/lE,KAAKE,IAAI86C,EAAe+qB,IAEhCA,CACX,CACHuB,mBACO,OAAOx0D,OAAO+D,iBAClB,CACAmpC,aACI,MAAM9zB,EAAOpb,KAAKvR,QACZq7C,EAAW1uB,EAAKzJ,MACtB,IAAIsjD,EAAWj1D,KAAKs2D,eACpBrB,EAAW/lE,KAAKC,IAAI,EAAG8lE,GACvB,MAAMwB,EAA0B,CAC5BxB,WACAniD,OAAQsI,EAAKtI,OACb1jB,IAAKgsB,EAAKhsB,IACVD,IAAKisB,EAAKjsB,IACV6lE,UAAWlrB,EAASkrB,UACpB/gB,KAAMnK,EAASysB,SACfzhC,MAAOgV,EAAShV,MAChBogC,UAAWl1D,KAAKk2C,aAChBra,WAAY77B,KAAK27B,eACjB7nB,YAAag2B,EAASh2B,aAAe,EACrCqhD,eAA0C,IAA3BrrB,EAASqrB,eAEtBL,EAAY90D,KAAKqtC,QAAUrtC,KAC3B2R,EAAQijD,GAAgB6B,EAAyB3B,GAYvD,MAXoB,UAAhB15C,EAAKtI,QACLtL,GAAmBmK,EAAO3R,KAAM,SAEhCob,EAAKpY,SACL2O,EAAM3O,UACNhD,KAAK8I,MAAQ9I,KAAK7Q,IAClB6Q,KAAK+I,IAAM/I,KAAK5Q,MAEhB4Q,KAAK8I,MAAQ9I,KAAK5Q,IAClB4Q,KAAK+I,IAAM/I,KAAK7Q,KAEbwiB,CACX,CACH2a,YACO,MAAM3a,EAAQ3R,KAAK2R,MACnB,IAAI7I,EAAQ9I,KAAK5Q,IACb2Z,EAAM/I,KAAK7Q,IAEf,GADA4tC,MAAMzQ,YACFtsB,KAAKvR,QAAQmkB,QAAUjB,EAAM1gB,OAAQ,CACrC,MAAM2hB,GAAU7J,EAAMD,GAAS5Z,KAAKC,IAAIwiB,EAAM1gB,OAAS,EAAG,GAAK,EAC/D6X,GAAS8J,EACT7J,GAAO6J,CACX,CACA5S,KAAKw0D,YAAc1rD,EACnB9I,KAAKg2D,UAAYjtD,EACjB/I,KAAKy0D,YAAc1rD,EAAMD,CAC7B,CACA2tB,iBAAiBh1B,GACb,OAAO4P,GAAa5P,EAAOzB,KAAK4R,MAAMnjB,QAAQoiB,OAAQ7Q,KAAKvR,QAAQkjB,MAAMJ,OAC7E,EAGJ,MAAMmlD,WAAoBX,GACtBrkC,UAAY,SACfA,gBAAkB,CACX/f,MAAO,CACHlP,SAAUgQ,GAAMjB,WAAWC,UAGnCs9B,sBACI,MAAM,IAAE3/C,EAAI,IAAED,GAAS6Q,KAAKg2B,WAAU,GACtCh2B,KAAK5Q,IAAM2S,GAAe3S,GAAOA,EAAM,EACvC4Q,KAAK7Q,IAAM4S,GAAe5S,GAAOA,EAAM,EACvC6Q,KAAKi2D,wBACT,CACHO,mBACO,MAAM36B,EAAa77B,KAAK27B,eAClB1qC,EAAS4qC,EAAa77B,KAAK2T,MAAQ3T,KAAKkZ,OACxCpF,EAAcnM,GAAU3H,KAAKvR,QAAQkjB,MAAMmC,aAC3C1U,GAASy8B,EAAa3sC,KAAK0d,IAAIkH,GAAe5kB,KAAK2e,IAAIiG,KAAiB,KACxEq+B,EAAWnyC,KAAKwyC,wBAAwB,GAC9C,OAAOtjD,KAAKk8C,KAAKn6C,EAAS/B,KAAKE,IAAI,GAAI+iD,EAASj8B,WAAa9W,GACjE,CACA46B,iBAAiBv4B,GACb,OAAiB,OAAVA,EAAiBs0B,IAAM/1B,KAAKo+B,oBAAoB38B,EAAQzB,KAAKw0D,aAAex0D,KAAKy0D,YAC5F,CACAn2B,iBAAiB7lB,GACb,OAAOzY,KAAKw0D,YAAcx0D,KAAK4yC,mBAAmBn6B,GAASzY,KAAKy0D,WACpE,EAgEJ,MAAMkC,WAAyB7pB,GAC3Bpb,UAAY,cACfA,gBAAkB,CACX/f,MAAO,CACHlP,SAAUgQ,GAAMjB,WAAWa,YAC3BkC,MAAO,CACH61B,SAAS,KAIrBtqC,YAAYkrB,GACR+R,MAAM/R,GACLhrB,KAAK8I,WAAQ1X,EACb4O,KAAK+I,SAAM3X,EACX4O,KAAKw0D,iBAAcpjE,EACpB4O,KAAKy0D,YAAc,CACvB,CACA5/B,MAAM/D,EAAKttB,GACP,MAAM/B,EAAQs0D,GAAgBr0D,UAAUmzB,MAAMhyB,MAAM7C,KAAM,CACtD8wB,EACAttB,IAEJ,GAAc,IAAV/B,EAIJ,OAAOM,GAAeN,IAAUA,EAAQ,EAAIA,EAAQ,KAHhDzB,KAAK42D,OAAQ,CAIrB,CACA7nB,sBACI,MAAM,IAAE3/C,EAAI,IAAED,GAAS6Q,KAAKg2B,WAAU,GACtCh2B,KAAK5Q,IAAM2S,GAAe3S,GAAOF,KAAKC,IAAI,EAAGC,GAAO,KACpD4Q,KAAK7Q,IAAM4S,GAAe5S,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAChD6Q,KAAKvR,QAAQokB,cACb7S,KAAK42D,OAAQ,GAEb52D,KAAK42D,OAAS52D,KAAK5Q,MAAQ4Q,KAAK6tC,gBAAkB9rC,GAAe/B,KAAK2tC,YACtE3tC,KAAK5Q,IAAMA,IAAQynE,eAAe72D,KAAK5Q,IAAK,GAAKynE,eAAe72D,KAAK5Q,KAAM,GAAKynE,eAAe72D,KAAK5Q,IAAK,IAE7G4Q,KAAKi2D,wBACT,CACAA,yBACI,MAAM,WAAEnnC,EAAW,WAAEC,GAAgB/uB,KAAK6uB,gBAC1C,IAAIz/B,EAAM4Q,KAAK5Q,IACXD,EAAM6Q,KAAK7Q,IACf,MAAM+mE,EAAUpnE,GAAUggC,EAAa1/B,EAAMN,EACvCqnE,EAAUrnE,GAAUigC,EAAa5/B,EAAML,EACzCM,IAAQD,IACJC,GAAO,GACP8mE,EAAO,GACPC,EAAO,MAEPD,EAAOW,eAAeznE,GAAM,IAC5B+mE,EAAOU,eAAe1nE,EAAK,MAG/BC,GAAO,GACP8mE,EAAOW,eAAe1nE,GAAM,IAE5BA,GAAO,GACPgnE,EAAOU,eAAeznE,EAAK,IAE/B4Q,KAAK5Q,IAAMA,EACX4Q,KAAK7Q,IAAMA,CACf,CACA+/C,aACI,MAAM9zB,EAAOpb,KAAKvR,QACZomE,EAAoB,CACtBzlE,IAAK4Q,KAAK2tC,SACVx+C,IAAK6Q,KAAK0tC,UAER/7B,EAAQmlD,cAAcjC,EAAmB70D,MAY/C,MAXoB,UAAhBob,EAAKtI,QACLtL,GAAmBmK,EAAO3R,KAAM,SAEhCob,EAAKpY,SACL2O,EAAM3O,UACNhD,KAAK8I,MAAQ9I,KAAK7Q,IAClB6Q,KAAK+I,IAAM/I,KAAK5Q,MAEhB4Q,KAAK8I,MAAQ9I,KAAK5Q,IAClB4Q,KAAK+I,IAAM/I,KAAK7Q,KAEbwiB,CACX,CACH8kB,iBAAiBh1B,GACV,YAAiBrQ,IAAVqQ,EAAsB,IAAM4P,GAAa5P,EAAOzB,KAAK4R,MAAMnjB,QAAQoiB,OAAQ7Q,KAAKvR,QAAQkjB,MAAMJ,OACzG,CACH+a,YACO,MAAMxjB,EAAQ9I,KAAK5Q,IACnB2tC,MAAMzQ,YACNtsB,KAAKw0D,YAAcpuD,GAAM0C,GACzB9I,KAAKy0D,YAAcruD,GAAMpG,KAAK7Q,KAAOiX,GAAM0C,EAC/C,CACAkxB,iBAAiBv4B,GAIb,YAHcrQ,IAAVqQ,GAAiC,IAAVA,GACfzB,KAAK5Q,IAEH,OAAVqS,GAAkB4F,MAAM5F,GACjBs0B,IAEJ/1B,KAAKo+B,mBAAmB38B,IAAUzB,KAAK5Q,IAAM,GAAKgX,GAAM3E,GAASzB,KAAKw0D,aAAex0D,KAAKy0D,YACrG,CACAn2B,iBAAiB7lB,GACb,MAAMk6B,EAAU3yC,KAAK4yC,mBAAmBn6B,GACxC,OAAOvpB,KAAK2P,IAAI,GAAImB,KAAKw0D,YAAc7hB,EAAU3yC,KAAKy0D,YAC1D,EA+PJ,MAAMsC,WAA0BhB,GAC5BrkC,UAAY,eACfA,gBAAkB,CACX/e,SAAS,EACTqkD,SAAS,EACTp3B,SAAU,YACVq3B,WAAY,CACRtkD,SAAS,EACTM,UAAW,EACXohC,WAAY,GACZC,iBAAkB,GAEtBthC,KAAM,CACFkkD,UAAU,GAEdv2B,WAAY,EACZhvB,MAAO,CACH8C,mBAAmB,EACnBhS,SAAUgQ,GAAMjB,WAAWC,SAE/B0lD,YAAa,CACTziD,mBAAetjB,EACfujB,gBAAiB,EACjBhC,SAAS,EACTqD,KAAM,CACFvQ,KAAM,IAEVhD,SAAU+zB,GACN,OAAOA,CACX,EACAjmB,QAAS,EACT6mD,mBAAmB,IAG3B1lC,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjBulC,WAAY,CACRxnD,UAAW,SAGnB3P,YAAYkrB,GACR+R,MAAM/R,GACLhrB,KAAKq3D,aAAUjmE,EACf4O,KAAKs3D,aAAUlmE,EACf4O,KAAKu3D,iBAAcnmE,EACnB4O,KAAKw3D,aAAe,GACrBx3D,KAAKy3D,iBAAmB,EAC5B,CACA7oB,gBACI,MAAMr+B,EAAUvQ,KAAKkrD,SAAWhtC,GAAUw5C,sBAAsB13D,KAAKvR,SAAW,GAC1EmD,EAAIoO,KAAK2T,MAAQ3T,KAAK8c,SAAWvM,EAAQoD,MACzC1kB,EAAI+Q,KAAKkZ,OAASlZ,KAAK2lB,UAAYpV,EAAQ2I,OACjDlZ,KAAKq3D,QAAUnoE,KAAK0X,MAAM5G,KAAKsM,KAAO1a,EAAI,EAAI2e,EAAQjE,MACtDtM,KAAKs3D,QAAUpoE,KAAK0X,MAAM5G,KAAKwQ,IAAMvhB,EAAI,EAAIshB,EAAQC,KACrDxQ,KAAKu3D,YAAcroE,KAAK0X,MAAM1X,KAAKE,IAAIwC,EAAG3C,GAAK,EACnD,CACA8/C,sBACI,MAAM,IAAE3/C,EAAI,IAAED,GAAS6Q,KAAKg2B,WAAU,GACtCh2B,KAAK5Q,IAAM2S,GAAe3S,KAASiY,MAAMjY,GAAOA,EAAM,EACtD4Q,KAAK7Q,IAAM4S,GAAe5S,KAASkY,MAAMlY,GAAOA,EAAM,EACtD6Q,KAAKi2D,wBACT,CACHO,mBACO,OAAOtnE,KAAKk8C,KAAKprC,KAAKu3D,YAAcG,sBAAsB13D,KAAKvR,SACnE,CACA2hD,mBAAmBz+B,GACfokD,GAAgBr0D,UAAU0uC,mBAAmBxuC,KAAK5B,KAAM2R,GACxD3R,KAAKw3D,aAAex3D,KAAKu1B,YAAYljC,KAAI,CAACoP,EAAO+B,KAC7C,MAAMgzB,EAAQ/zB,GAASzC,KAAKvR,QAAQ0oE,YAAY10D,SAAU,CACtDhB,EACA+B,GACDxD,MACH,OAAOw2B,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IACzChU,QAAO,CAAC1zB,EAAGgD,IAAIkO,KAAK4R,MAAMssB,kBAAkBpsC,IACnD,CACA69C,MACI,MAAMv0B,EAAOpb,KAAKvR,QACd2sB,EAAKzI,SAAWyI,EAAK+7C,YAAYxkD,QACjCglD,mBAAmB33D,MAEnBA,KAAK43D,eAAe,EAAG,EAAG,EAAG,EAErC,CACAA,eAAeC,EAAcC,EAAeC,EAAaC,GACrDh4D,KAAKq3D,SAAWnoE,KAAK0X,OAAOixD,EAAeC,GAAiB,GAC5D93D,KAAKs3D,SAAWpoE,KAAK0X,OAAOmxD,EAAcC,GAAkB,GAC5Dh4D,KAAKu3D,aAAeroE,KAAKE,IAAI4Q,KAAKu3D,YAAc,EAAGroE,KAAKC,IAAI0oE,EAAcC,EAAeC,EAAaC,GAC1G,CACAC,cAAcz0D,GACV,MAAM00D,EAAkBryD,IAAO7F,KAAKw3D,aAAavmE,QAAU,GACrD0vC,EAAa3gC,KAAKvR,QAAQkyC,YAAc,EAC9C,OAAO/3B,GAAgBpF,EAAQ00D,EAAkBvwD,GAAUg5B,GAC/D,CACAw3B,8BAA8B12D,GAC1B,GAAID,GAAcC,GACd,OAAOs0B,IAEX,MAAMqiC,EAAgBp4D,KAAKu3D,aAAev3D,KAAK7Q,IAAM6Q,KAAK5Q,KAC1D,OAAI4Q,KAAKvR,QAAQuU,SACLhD,KAAK7Q,IAAMsS,GAAS22D,GAExB32D,EAAQzB,KAAK5Q,KAAOgpE,CAChC,CACAC,8BAA8B7vD,GAC1B,GAAIhH,GAAcgH,GACd,OAAOutB,IAEX,MAAMuiC,EAAiB9vD,GAAYxI,KAAKu3D,aAAev3D,KAAK7Q,IAAM6Q,KAAK5Q,MACvE,OAAO4Q,KAAKvR,QAAQuU,QAAUhD,KAAK7Q,IAAMmpE,EAAiBt4D,KAAK5Q,IAAMkpE,CACzE,CACAC,qBAAqB/0D,GACjB,MAAM2zD,EAAcn3D,KAAKw3D,cAAgB,GACzC,GAAIh0D,GAAS,GAAKA,EAAQ2zD,EAAYlmE,OAAQ,CAC1C,MAAMunE,EAAarB,EAAY3zD,GAC/B,OAAOi1D,wBAAwBz4D,KAAK8Y,aAActV,EAAOg1D,EAC7D,CACJ,CACAE,iBAAiBl1D,EAAOm1D,EAAoBC,EAAkB,GAC1D,MAAMtwD,EAAQtI,KAAKi4D,cAAcz0D,GAASyC,GAAU2yD,EACpD,MAAO,CACH1lE,EAAGhE,KAAK2e,IAAIvF,GAASqwD,EAAqB34D,KAAKq3D,QAC/C1yD,EAAGzV,KAAK0d,IAAItE,GAASqwD,EAAqB34D,KAAKs3D,QAC/ChvD,QAER,CACAuwD,yBAAyBr1D,EAAO/B,GAC5B,OAAOzB,KAAK04D,iBAAiBl1D,EAAOxD,KAAKm4D,8BAA8B12D,GAC3E,CACAq3D,gBAAgBt1D,GACZ,OAAOxD,KAAK64D,yBAAyBr1D,GAAS,EAAGxD,KAAK6yC,eAC1D,CACAkmB,sBAAsBv1D,GAClB,MAAM,KAAE8I,EAAK,IAAEkE,EAAI,MAAEjE,EAAM,OAAEkE,GAAYzQ,KAAKy3D,iBAAiBj0D,GAC/D,MAAO,CACH8I,OACAkE,MACAjE,QACAkE,SAER,CACH0kC,iBACO,MAAM,gBAAE5/B,EAAkBvC,MAAM,SAAEkkD,IAAiBl3D,KAAKvR,QACxD,GAAI8mB,EAAiB,CACjB,MAAMc,EAAMrW,KAAKqW,IACjBA,EAAI0C,OACJ1C,EAAI4D,YACJ++C,eAAeh5D,KAAMA,KAAKm4D,8BAA8Bn4D,KAAKg2D,WAAYkB,EAAUl3D,KAAKw3D,aAAavmE,QACrGolB,EAAI+D,YACJ/D,EAAIiF,UAAY/F,EAChBc,EAAIoE,OACJpE,EAAI8C,SACR,CACJ,CACHk8B,WACO,MAAMh/B,EAAMrW,KAAKqW,IACX+E,EAAOpb,KAAKvR,SACZ,WAAEwoE,EAAW,KAAEjkD,EAAK,OAAEQ,GAAY4H,EAClC+zC,EAAanvD,KAAKw3D,aAAavmE,OACrC,IAAIa,EAAG8gB,EAAQgtB,EAef,GAdIxkB,EAAK+7C,YAAYxkD,SACjBsmD,gBAAgBj5D,KAAMmvD,GAEtBn8C,EAAKL,SACL3S,KAAK2R,MAAM/G,SAAQ,CAAC+e,EAAMnmB,KACtB,GAAc,IAAVA,EAAa,CACJxD,KAAKm4D,8BAA8BxuC,EAAKloB,OACjD,MAAMkU,EAAU3V,KAAK8Y,WAAWtV,GAC1B0wC,EAAclhC,EAAKoO,WAAWzL,GAC9Bw+B,EAAoB3gC,EAAO4N,WAAWzL,GAC5CujD,eAAel5D,KAAMk0C,EAAathC,EAAQu8C,EAAYhb,EAC1D,KAGJ8iB,EAAWtkD,QAAS,CAEpB,IADA0D,EAAI0C,OACIo2C,EAAa,EAAGr9D,GAAK,EAAGA,IAAI,CAChC,MAAMoiD,EAAc+iB,EAAW71C,WAAWphB,KAAKu4D,qBAAqBzmE,KAC9D,MAAEwO,EAAM,UAAE2S,GAAeihC,EAC1BjhC,GAAc3S,IAGnB+V,EAAIpD,UAAYA,EAChBoD,EAAI8F,YAAc7b,EAClB+V,EAAIk/B,YAAYrB,EAAYG,YAC5Bh+B,EAAIm/B,eAAiBtB,EAAYI,iBACxBt0C,KAAKm4D,8BAA8B/8C,EAAKzJ,MAAM3O,QAAUhD,KAAK5Q,IAAM4Q,KAAK7Q,KACtE6Q,KAAK04D,iBAAiB5mE,EAAG8gB,GACpCyD,EAAI4D,YACJ5D,EAAIgE,OAAOra,KAAKq3D,QAASr3D,KAAKs3D,SAC9BjhD,EAAIiE,OAAOslB,EAAS1sC,EAAG0sC,EAASj7B,GAChC0R,EAAIsE,SACR,CACAtE,EAAI8C,SACR,CACJ,CACHs8B,aAAc,CACdE,aACO,MAAMt/B,EAAMrW,KAAKqW,IACX+E,EAAOpb,KAAKvR,QACZq7C,EAAW1uB,EAAKzJ,MACtB,IAAKm4B,EAASn3B,QACV,OAEJ,MAAMguB,EAAa3gC,KAAKi4D,cAAc,GACtC,IAAIrlD,EAAQe,EACZ0C,EAAI0C,OACJ1C,EAAI0D,UAAU/Z,KAAKq3D,QAASr3D,KAAKs3D,SACjCjhD,EAAItjB,OAAO4tC,GACXtqB,EAAIkF,UAAY,SAChBlF,EAAImF,aAAe,SACnBxb,KAAK2R,MAAM/G,SAAQ,CAAC+e,EAAMnmB,KACtB,GAAc,IAAVA,IAAgB4X,EAAKpY,QACrB,OAEJ,MAAMkxC,EAAcpK,EAAS1oB,WAAWphB,KAAK8Y,WAAWtV,IAClD2uC,EAAWh0B,GAAO+1B,EAAYl+B,MAEpC,GADShW,KAAKm4D,8BAA8Bn4D,KAAK2R,MAAMnO,GAAO/B,OAC1DyyC,EAAYz/B,kBAAmB,CAC/B4B,EAAIL,KAAOm8B,EAAS95B,OACZhC,EAAIkC,YAAYoR,EAAK6M,OAAO7iB,MACpC0C,EAAIiF,UAAY44B,EAAYx/B,cAC5B,MAAMnE,EAAU2N,GAAUg2B,EAAYv/B,iBACtC0B,EAAIkG,UAAU5I,EAAQ,EAAIpD,EAAQjE,MAAOsG,EAASu/B,EAAS1sC,KAAO,EAAI8K,EAAQC,IAAKmD,EAAQpD,EAAQoD,MAAOw+B,EAAS1sC,KAAO8K,EAAQ2I,OACtI,CACAsD,GAAWnG,EAAKsT,EAAK6M,MAAO,GAAI5jB,EAAQu/B,EAAU,CAC9C7xC,MAAO4zC,EAAY5zC,OACrB,IAEN+V,EAAI8C,SACR,CACH08B,YAAa,EAGd,MAAMsjB,GAAY,CACdC,YAAa,CACTC,QAAQ,EACR5zD,KAAM,EACN6zD,MAAO,KAEXC,OAAQ,CACJF,QAAQ,EACR5zD,KAAM,IACN6zD,MAAO,IAEXE,OAAQ,CACJH,QAAQ,EACR5zD,KAAM,IACN6zD,MAAO,IAEXG,KAAM,CACFJ,QAAQ,EACR5zD,KAAM,KACN6zD,MAAO,IAEXI,IAAK,CACDL,QAAQ,EACR5zD,KAAM,MACN6zD,MAAO,IAEXK,KAAM,CACFN,QAAQ,EACR5zD,KAAM,OACN6zD,MAAO,GAEXM,MAAO,CACHP,QAAQ,EACR5zD,KAAM,OACN6zD,MAAO,IAEXO,QAAS,CACLR,QAAQ,EACR5zD,KAAM,OACN6zD,MAAO,GAEXQ,KAAM,CACFT,QAAQ,EACR5zD,KAAM,SAGPs0D,GAAyBh8D,OAAOD,KAAKq7D,IAC3C,SAASa,GAAOhqE,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAAS4kC,GAAM1d,EAAOzX,GACnB,GAAI8B,GAAc9B,GACd,OAAO,KAEX,MAAMu6D,EAAU9iD,EAAM+iD,UAChB,OAAEC,EAAO,MAAEtrE,EAAM,WAAEurE,GAAgBjjD,EAAMkjD,WAC/C,IAAI54D,EAAQ/B,EAOZ,MANsB,oBAAXy6D,IACP14D,EAAQ04D,EAAO14D,IAEdM,GAAeN,KAChBA,EAA0B,kBAAX04D,EAAsBF,EAAQplC,MAAMpzB,EAAQ04D,GAAUF,EAAQplC,MAAMpzB,IAEzE,OAAVA,EACO,MAEP5S,IACA4S,EAAkB,SAAV5S,IAAqBuY,GAASgzD,KAA8B,IAAfA,EAAuEH,EAAQ/6B,QAAQz9B,EAAO5S,GAAvEorE,EAAQ/6B,QAAQz9B,EAAO,UAAW24D,KAE1G34D,EACZ,CACC,SAAS64D,GAA0BC,EAASnrE,EAAKD,EAAKqrE,GACnD,MAAMp3D,EAAO22D,GAAM9oE,OACnB,IAAI,IAAIa,EAAIioE,GAAMj2D,QAAQy2D,GAAUzoE,EAAIsR,EAAO,IAAKtR,EAAE,CAClD,MAAM2oE,EAAWtB,GAAUY,GAAMjoE,IAC3B84B,EAAS6vC,EAASnB,MAAQmB,EAASnB,MAAQt3D,OAAO04D,iBACxD,GAAID,EAASpB,QAAUnqE,KAAKk8C,MAAMj8C,EAAMC,IAAQw7B,EAAS6vC,EAASh1D,QAAU+0D,EACxE,OAAOT,GAAMjoE,EAErB,CACA,OAAOioE,GAAM32D,EAAO,EACxB,CACC,SAASu3D,GAA2BxjD,EAAOm5B,EAAUiqB,EAASnrE,EAAKD,GAChE,IAAI,IAAI2C,EAAIioE,GAAM9oE,OAAS,EAAGa,GAAKioE,GAAMj2D,QAAQy2D,GAAUzoE,IAAI,CAC3D,MAAMsjE,EAAO2E,GAAMjoE,GACnB,GAAIqnE,GAAU/D,GAAMiE,QAAUliD,EAAM+iD,SAASj7B,KAAK9vC,EAAKC,EAAKgmE,IAAS9kB,EAAW,EAC5E,OAAO8kB,CAEf,CACA,OAAO2E,GAAMQ,EAAUR,GAAMj2D,QAAQy2D,GAAW,EACpD,CACC,SAASK,GAAmBxF,GACzB,IAAI,IAAItjE,EAAIioE,GAAMj2D,QAAQsxD,GAAQ,EAAGhyD,EAAO22D,GAAM9oE,OAAQa,EAAIsR,IAAQtR,EAClE,GAAIqnE,GAAUY,GAAMjoE,IAAIunE,OACpB,OAAOU,GAAMjoE,EAGzB,CACC,SAAS+oE,GAAQlpD,EAAOxjB,EAAM2sE,GAC3B,GAAKA,GAEE,GAAIA,EAAW7pE,OAAQ,CAC1B,MAAM,GAAE4Y,EAAG,GAAED,GAAQJ,GAAQsxD,EAAY3sE,GACnC4sE,EAAYD,EAAWjxD,IAAO1b,EAAO2sE,EAAWjxD,GAAMixD,EAAWlxD,GACvE+H,EAAMopD,IAAa,CACvB,OALIppD,EAAMxjB,IAAQ,CAMtB,CACC,SAAS6sE,GAAc7jD,EAAOxF,EAAOtf,EAAK4oE,GACvC,MAAMhB,EAAU9iD,EAAM+iD,SAChB3vB,GAAS0vB,EAAQ/6B,QAAQvtB,EAAM,GAAGlQ,MAAOw5D,GACzClxD,EAAO4H,EAAMA,EAAM1gB,OAAS,GAAGwQ,MACrC,IAAI8S,EAAO/Q,EACX,IAAI+Q,EAAQg2B,EAAOh2B,GAASxK,EAAMwK,GAAS0lD,EAAQl7C,IAAIxK,EAAO,EAAG0mD,GAC7Dz3D,EAAQnR,EAAIkiB,GACR/Q,GAAS,IACTmO,EAAMnO,GAAO+Q,OAAQ,GAG7B,OAAO5C,CACX,CACC,SAASupD,GAAoB/jD,EAAOhN,EAAQ8wD,GACzC,MAAMtpD,EAAQ,GACPtf,EAAM,CAAC,EACR+Q,EAAO+G,EAAOlZ,OACpB,IAAIa,EAAG2P,EACP,IAAI3P,EAAI,EAAGA,EAAIsR,IAAQtR,EACnB2P,EAAQ0I,EAAOrY,GACfO,EAAIoP,GAAS3P,EACb6f,EAAM3M,KAAK,CACPvD,QACA8S,OAAO,IAGf,OAAgB,IAATnR,GAAe63D,EAAoBD,GAAc7jD,EAAOxF,EAAOtf,EAAK4oE,GAAzCtpD,CACtC,CACA,MAAMwpD,WAAkBruB,GACpBpb,UAAY,OACfA,gBAAkB,CAClB5e,OAAQ,OACDssB,SAAU,CAAC,EACXjxC,KAAM,CACFgsE,QAAQ,EACR/E,MAAM,EACNvmE,OAAO,EACPurE,YAAY,EACZG,QAAS,cACTa,eAAgB,CAAC,GAErBzpD,MAAO,CACdlO,OAAQ,OACGhB,UAAU,EACV8R,MAAO,CACH61B,SAAS,KAIxBtqC,YAAY8d,GACLmf,MAAMnf,GACL5d,KAAKw5B,OAAS,CACX7qC,KAAM,GACN2mC,OAAQ,GACRlI,IAAK,IAERptB,KAAKq7D,MAAQ,MACbr7D,KAAKs7D,gBAAalqE,EACnB4O,KAAKu7D,SAAW,CAAC,EACjBv7D,KAAKw7D,aAAc,EACnBx7D,KAAKq6D,gBAAajpE,CACtB,CACA2tC,KAAKkhB,EAAW7kC,EAAO,CAAC,GACpB,MAAMjtB,EAAO8xD,EAAU9xD,OAAS8xD,EAAU9xD,KAAO,CAAC,GAC3C8rE,EAAUj6D,KAAKk6D,SAAW,IAAI96B,GAASC,MAAM4gB,EAAU7gB,SAASnxC,MACvEgsE,EAAQl7B,KAAK3jB,GACb9W,GAAQnW,EAAKitE,eAAgBnB,EAAQj7B,WACrCh/B,KAAKq6D,WAAa,CACdF,OAAQhsE,EAAKgsE,OACbtrE,MAAOV,EAAKU,MACZurE,WAAYjsE,EAAKisE,YAErBr9B,MAAMgC,KAAKkhB,GACXjgD,KAAKw7D,YAAcpgD,EAAKqgD,UAC5B,CACH5mC,MAAM/D,EAAKttB,GACJ,YAAYpS,IAAR0/B,EACO,KAEJ+D,GAAM70B,KAAM8wB,EACvB,CACAuU,eACItI,MAAMsI,eACNrlC,KAAKw5B,OAAS,CACV7qC,KAAM,GACN2mC,OAAQ,GACRlI,IAAK,GAEb,CACA2hB,sBACI,MAAMtgD,EAAUuR,KAAKvR,QACfwrE,EAAUj6D,KAAKk6D,SACf9E,EAAO3mE,EAAQN,KAAKinE,MAAQ,MAClC,IAAI,IAAEhmE,EAAI,IAAED,EAAI,WAAE2/B,EAAW,WAAEC,GAAgB/uB,KAAK6uB,gBAC3D,SAAS6sC,EAAa5oD,GACNgc,GAAeznB,MAAMyL,EAAO1jB,OAC7BA,EAAMF,KAAKE,IAAIA,EAAK0jB,EAAO1jB,MAE1B2/B,GAAe1nB,MAAMyL,EAAO3jB,OAC7BA,EAAMD,KAAKC,IAAIA,EAAK2jB,EAAO3jB,KAEnC,CACK2/B,GAAeC,IAChB2sC,EAAa17D,KAAK27D,mBACK,UAAnBltE,EAAQqkB,QAA+C,WAAzBrkB,EAAQkjB,MAAMlO,QAC5Ci4D,EAAa17D,KAAKg2B,WAAU,KAGpC5mC,EAAM2S,GAAe3S,KAASiY,MAAMjY,GAAOA,GAAO6qE,EAAQ/6B,QAAQ9V,KAAKC,MAAO+rC,GAC9EjmE,EAAM4S,GAAe5S,KAASkY,MAAMlY,GAAOA,GAAO8qE,EAAQ96B,MAAM/V,KAAKC,MAAO+rC,GAAQ,EACpFp1D,KAAK5Q,IAAMF,KAAKE,IAAIA,EAAKD,EAAM,GAC/B6Q,KAAK7Q,IAAMD,KAAKC,IAAIC,EAAM,EAAGD,EACjC,CACHwsE,kBACO,MAAMp5C,EAAMviB,KAAK47D,qBACjB,IAAIxsE,EAAM4S,OAAO+D,kBACb5W,EAAM6S,OAAOgtB,kBAKjB,OAJIzM,EAAItxB,SACJ7B,EAAMmzB,EAAI,GACVpzB,EAAMozB,EAAIA,EAAItxB,OAAS,IAEpB,CACH7B,MACAD,MAER,CACH+/C,aACO,MAAMzgD,EAAUuR,KAAKvR,QACfotE,EAAWptE,EAAQN,KACnB27C,EAAWr7C,EAAQkjB,MACnBmpD,EAAiC,WAApBhxB,EAASrmC,OAAsBzD,KAAK47D,qBAAuB57D,KAAK87D,YAC5D,UAAnBrtE,EAAQqkB,QAAsBgoD,EAAW7pE,SACzC+O,KAAK5Q,IAAM4Q,KAAK2tC,UAAYmtB,EAAW,GACvC96D,KAAK7Q,IAAM6Q,KAAK0tC,UAAYotB,EAAWA,EAAW7pE,OAAS,IAE/D,MAAM7B,EAAM4Q,KAAK5Q,IACXD,EAAM6Q,KAAK7Q,IACXwiB,EAAQzH,GAAe4wD,EAAY1rE,EAAKD,GAO9C,OANA6Q,KAAKq7D,MAAQQ,EAASzG,OAAStrB,EAAS31B,SAAWmmD,GAA0BuB,EAAStB,QAASv6D,KAAK5Q,IAAK4Q,KAAK7Q,IAAK6Q,KAAK+7D,kBAAkB3sE,IAAQurE,GAA2B36D,KAAM2R,EAAM1gB,OAAQ4qE,EAAStB,QAASv6D,KAAK5Q,IAAK4Q,KAAK7Q,MAClO6Q,KAAKs7D,WAAcxxB,EAASv1B,MAAM61B,SAA0B,SAAfpqC,KAAKq7D,MAA+BT,GAAmB56D,KAAKq7D,YAApCjqE,EACrE4O,KAAKg8D,YAAYlB,GACbrsE,EAAQuU,SACR2O,EAAM3O,UAEHk4D,GAAoBl7D,KAAM2R,EAAO3R,KAAKs7D,WACjD,CACA7rB,gBACQzvC,KAAKvR,QAAQwtE,qBACbj8D,KAAKg8D,YAAYh8D,KAAK2R,MAAMtf,KAAKs3B,IAAQA,EAAKloB,QAEtD,CACHu6D,YAAYlB,EAAa,IAClB,IAEIvwB,EAAOxgC,EAFPjB,EAAQ,EACRC,EAAM,EAEN/I,KAAKvR,QAAQmkB,QAAUkoD,EAAW7pE,SAClCs5C,EAAQvqC,KAAKk8D,mBAAmBpB,EAAW,IAEvChyD,EADsB,IAAtBgyD,EAAW7pE,OACH,EAAIs5C,GAEHvqC,KAAKk8D,mBAAmBpB,EAAW,IAAMvwB,GAAS,EAE/DxgC,EAAO/J,KAAKk8D,mBAAmBpB,EAAWA,EAAW7pE,OAAS,IAE1D8X,EADsB,IAAtB+xD,EAAW7pE,OACL8Y,GAECA,EAAO/J,KAAKk8D,mBAAmBpB,EAAWA,EAAW7pE,OAAS,KAAO,GAGpF,MAAM+iD,EAAQ8mB,EAAW7pE,OAAS,EAAI,GAAM,IAC5C6X,EAAQO,GAAYP,EAAO,EAAGkrC,GAC9BjrC,EAAMM,GAAYN,EAAK,EAAGirC,GAC1Bh0C,KAAKu7D,SAAW,CACZzyD,QACAC,MACA6hB,OAAQ,GAAK9hB,EAAQ,EAAIC,GAEjC,CACH+yD,YACO,MAAM7B,EAAUj6D,KAAKk6D,SACf9qE,EAAM4Q,KAAK5Q,IACXD,EAAM6Q,KAAK7Q,IACXV,EAAUuR,KAAKvR,QACfotE,EAAWptE,EAAQN,KACnBmmB,EAAQunD,EAASzG,MAAQkF,GAA0BuB,EAAStB,QAASnrE,EAAKD,EAAK6Q,KAAK+7D,kBAAkB3sE,IACtGmnE,EAAWn0D,GAAe3T,EAAQkjB,MAAM4kD,SAAU,GAClD4F,EAAoB,SAAV7nD,GAAmBunD,EAASzB,WACtCgC,EAAah1D,GAAS+0D,KAAwB,IAAZA,EAClCxqD,EAAQ,CAAC,EACf,IACIxjB,EAAM2mC,EADNyV,EAAQn7C,EAMZ,GAJIgtE,IACA7xB,GAAS0vB,EAAQ/6B,QAAQqL,EAAO,UAAW4xB,IAE/C5xB,GAAS0vB,EAAQ/6B,QAAQqL,EAAO6xB,EAAa,MAAQ9nD,GACjD2lD,EAAQh7B,KAAK9vC,EAAKC,EAAKklB,GAAS,IAASiiD,EACzC,MAAM,IAAIp0C,MAAM/yB,EAAM,QAAUD,EAAM,uCAAyConE,EAAW,IAAMjiD,GAEpG,MAAMwmD,EAAsC,SAAzBrsE,EAAQkjB,MAAMlO,QAAqBzD,KAAKq8D,oBAC3D,IAAIluE,EAAOo8C,EAAOzV,EAAQ,EAAG3mC,EAAOgB,EAAKhB,GAAQ8rE,EAAQl7C,IAAI5wB,EAAMooE,EAAUjiD,GAAQwgB,IACjF+lC,GAAQlpD,EAAOxjB,EAAM2sE,GAKzB,OAHI3sE,IAASgB,GAA0B,UAAnBV,EAAQqkB,QAAgC,IAAVgiB,GAC9C+lC,GAAQlpD,EAAOxjB,EAAM2sE,GAElB/8D,OAAOD,KAAK6T,GAAOzK,MAAK,CAAClX,EAAGC,IAAID,EAAIC,IAAGoC,KAAKa,IAAKA,GAC5D,CACHujC,iBAAiBh1B,GACV,MAAMw4D,EAAUj6D,KAAKk6D,SACf2B,EAAW77D,KAAKvR,QAAQN,KAC9B,OAAI0tE,EAASS,cACFrC,EAAQ1oD,OAAO9P,EAAOo6D,EAASS,eAEnCrC,EAAQ1oD,OAAO9P,EAAOo6D,EAAST,eAAemB,SACzD,CACHhrD,OAAO9P,EAAO8P,GACP,MAAM9iB,EAAUuR,KAAKvR,QACfuwC,EAAUvwC,EAAQN,KAAKitE,eACvBhG,EAAOp1D,KAAKq7D,MACZmB,EAAMjrD,GAAUytB,EAAQo2B,GAC9B,OAAOp1D,KAAKk6D,SAAS3oD,OAAO9P,EAAO+6D,EACvC,CACHC,oBAAoBtuE,EAAMqV,EAAOmO,EAAOJ,GACjC,MAAM9iB,EAAUuR,KAAKvR,QACfwiB,EAAYxiB,EAAQkjB,MAAMlP,SAChC,GAAIwO,EACA,OAAOxO,GAASwO,EAAW,CACvB9iB,EACAqV,EACAmO,GACD3R,MAEP,MAAMg/B,EAAUvwC,EAAQN,KAAKitE,eACvBhG,EAAOp1D,KAAKq7D,MACZJ,EAAYj7D,KAAKs7D,WACjBoB,EAActH,GAAQp2B,EAAQo2B,GAC9BuH,EAAc1B,GAAaj8B,EAAQi8B,GACnCtxC,EAAOhY,EAAMnO,GACb+Q,EAAQ0mD,GAAa0B,GAAehzC,GAAQA,EAAKpV,MACvD,OAAOvU,KAAKk6D,SAAS3oD,OAAOpjB,EAAMojB,IAAWgD,EAAQooD,EAAcD,GACvE,CACHtsB,mBAAmBz+B,GACZ,IAAI7f,EAAGsR,EAAMumB,EACb,IAAI73B,EAAI,EAAGsR,EAAOuO,EAAM1gB,OAAQa,EAAIsR,IAAQtR,EACxC63B,EAAOhY,EAAM7f,GACb63B,EAAK6M,MAAQx2B,KAAKy8D,oBAAoB9yC,EAAKloB,MAAO3P,EAAG6f,EAE7D,CACHuqD,mBAAmBz6D,GACZ,OAAiB,OAAVA,EAAiBs0B,KAAOt0B,EAAQzB,KAAK5Q,MAAQ4Q,KAAK7Q,IAAM6Q,KAAK5Q,IACxE,CACH4qC,iBAAiBv4B,GACV,MAAMm7D,EAAU58D,KAAKu7D,SACf92C,EAAMzkB,KAAKk8D,mBAAmBz6D,GACpC,OAAOzB,KAAKo+B,oBAAoBw+B,EAAQ9zD,MAAQ2b,GAAOm4C,EAAQhyC,OACnE,CACH0T,iBAAiB7lB,GACV,MAAMmkD,EAAU58D,KAAKu7D,SACf92C,EAAMzkB,KAAK4yC,mBAAmBn6B,GAASmkD,EAAQhyC,OAASgyC,EAAQ7zD,IACtE,OAAO/I,KAAK5Q,IAAMq1B,GAAOzkB,KAAK7Q,IAAM6Q,KAAK5Q,IAC7C,CACHytE,cAAcrmC,GACP,MAAMsmC,EAAY98D,KAAKvR,QAAQkjB,MACzBorD,EAAiB/8D,KAAKqW,IAAIkC,YAAYie,GAAO7iB,MAC7CrL,EAAQX,GAAU3H,KAAK27B,eAAiBmhC,EAAU/oD,YAAc+oD,EAAUhpD,aAC1EkpD,EAAc9tE,KAAK2e,IAAIvF,GACvB20D,EAAc/tE,KAAK0d,IAAItE,GACvB40D,EAAel9D,KAAKwyC,wBAAwB,GAAG/sC,KACrD,MAAO,CACH7T,EAAGmrE,EAAiBC,EAAcE,EAAeD,EACjDhuE,EAAG8tE,EAAiBE,EAAcC,EAAeF,EAEzD,CACHjB,kBAAkBoB,GACX,MAAMtB,EAAW77D,KAAKvR,QAAQN,KACxBitE,EAAiBS,EAAST,eAC1B7pD,EAAS6pD,EAAeS,EAASzG,OAASgG,EAAehC,YACzDgE,EAAep9D,KAAKy8D,oBAAoBU,EAAa,EAAGjC,GAAoBl7D,KAAM,CACpFm9D,GACDn9D,KAAKs7D,YAAa/pD,GACf9L,EAAOzF,KAAK68D,cAAcO,GAC1B5C,EAAWtrE,KAAK0X,MAAM5G,KAAK27B,eAAiB37B,KAAK2T,MAAQlO,EAAK7T,EAAIoO,KAAKkZ,OAASzT,EAAKxW,GAAK,EAChG,OAAOurE,EAAW,EAAIA,EAAW,CACrC,CACH6B,oBACO,IACIvqE,EAAGsR,EADH03D,EAAa96D,KAAKw5B,OAAO7qC,MAAQ,GAErC,GAAImsE,EAAW7pE,OACX,OAAO6pE,EAEX,MAAM3sB,EAAQnuC,KAAKyvB,0BACnB,GAAIzvB,KAAKw7D,aAAertB,EAAMl9C,OAC1B,OAAO+O,KAAKw5B,OAAO7qC,KAAOw/C,EAAM,GAAGxe,WAAW0G,mBAAmBr2B,MAErE,IAAIlO,EAAI,EAAGsR,EAAO+qC,EAAMl9C,OAAQa,EAAIsR,IAAQtR,EACxCgpE,EAAaA,EAAWnhC,OAAOwU,EAAMr8C,GAAG69B,WAAW0G,mBAAmBr2B,OAE1E,OAAOA,KAAKw5B,OAAO7qC,KAAOqR,KAAKq9D,UAAUvC,EAC7C,CACHc,qBACO,MAAMd,EAAa96D,KAAKw5B,OAAOlE,QAAU,GACzC,IAAIxjC,EAAGsR,EACP,GAAI03D,EAAW7pE,OACX,OAAO6pE,EAEX,MAAMxlC,EAASt1B,KAAKu1B,YACpB,IAAIzjC,EAAI,EAAGsR,EAAOkyB,EAAOrkC,OAAQa,EAAIsR,IAAQtR,EACzCgpE,EAAW91D,KAAK6vB,GAAM70B,KAAMs1B,EAAOxjC,KAEvC,OAAOkO,KAAKw5B,OAAOlE,OAASt1B,KAAKw7D,YAAcV,EAAa96D,KAAKq9D,UAAUvC,EAC/E,CACHuC,UAAUlzD,GACH,OAAOiB,GAAajB,EAAOjD,KAAK8yD,IACpC,EAuBJ,MAAMsD,WAAwBnC,GAC1BzpC,UAAY,aACfA,gBAAkBypC,GAAU/rD,SAC5BtP,YAAY8d,GACLmf,MAAMnf,GACL5d,KAAKu9D,OAAS,GACdv9D,KAAKw9D,aAAUpsE,EACf4O,KAAKy9D,iBAAcrsE,CACxB,CACH4qE,cACO,MAAMlB,EAAa96D,KAAK09D,yBAClBj0D,EAAQzJ,KAAKu9D,OAASv9D,KAAK29D,iBAAiB7C,GAClD96D,KAAKw9D,QAAU,kBAAY/zD,EAAOzJ,KAAK5Q,KACvC4Q,KAAKy9D,YAAc,kBAAYh0D,EAAOzJ,KAAK7Q,KAAO6Q,KAAKw9D,QACvDzgC,MAAMi/B,YAAYlB,EACtB,CACH6C,iBAAiB7C,GACV,MAAM,IAAE1rE,EAAI,IAAED,GAAS6Q,KACjBlS,EAAQ,GACR2b,EAAQ,GACd,IAAI3X,EAAGsR,EAAM6xB,EAAM4E,EAAMe,EACzB,IAAQ,EAAUkgC,EAAW7pE,OAAQa,EAAIsR,IAAQtR,EACtCgpE,EAAWhpE,GACd+nC,GAAQzqC,GAAOyqC,GAAQ1qC,GACvBrB,EAAMkX,KAAK60B,GAGnB,GAAI/rC,EAAMmD,OAAS,EACf,MAAO,CACH,CACI9C,KAAMiB,EACNq1B,IAAK,GAET,CACIt2B,KAAMgB,EACNs1B,IAAK,IAIjB,IAAQ,EAAU32B,EAAMmD,OAAQa,EAAIsR,IAAQtR,EACjChE,EAAMgE,EAAI,GACVhE,EAAMgE,EAAI,GACVhE,EAAMgE,GACT5C,KAAKL,OAAO+rC,EAAO3F,GAAQ,KAAO4E,GAClCpwB,EAAMzE,KAAK,CACP7W,KAAM0rC,EACNpV,IAAK3yB,GAAKsR,EAAO,KAI7B,OAAOqG,CACX,CACHi0D,yBACO,IAAI5C,EAAa96D,KAAKw5B,OAAOpM,KAAO,GACpC,GAAI0tC,EAAW7pE,OACX,OAAO6pE,EAEX,MAAMnsE,EAAOqR,KAAKq8D,oBACZ7lC,EAAQx2B,KAAK47D,qBAOnB,OANIjtE,EAAKsC,QAAUulC,EAAMvlC,OACR+O,KAAKq9D,UAAU1uE,EAAKgrC,OAAOnD,IAE3B7nC,EAAKsC,OAAStC,EAAO6nC,EAEzBx2B,KAAKw5B,OAAOpM,IAAM0tC,EACxBA,CACX,CACHoB,mBAAmBz6D,GACZ,OAAQ,kBAAYzB,KAAKu9D,OAAQ97D,GAASzB,KAAKw9D,SAAWx9D,KAAKy9D,WACnE,CACHn/B,iBAAiB7lB,GACV,MAAMmkD,EAAU58D,KAAKu7D,SACf5oB,EAAU3yC,KAAK4yC,mBAAmBn6B,GAASmkD,EAAQhyC,OAASgyC,EAAQ7zD,IAC1E,OAAO,kBAAY/I,KAAKu9D,OAAQ5qB,EAAU3yC,KAAKy9D,YAAcz9D,KAAKw9D,SAAS,EAC/E,EAaJ,MCppWMI,GAAc,CAChBjvE,KAAM,CACFoR,KAAMhC,OACN8/D,UAAU,GAEdpvE,QAAS,CACLsR,KAAMhC,OACN+/D,QAAS,KAAI,CAAG,IAEpB7mD,QAAS,CACLlX,KAAM5N,MACN2rE,QAAS,IAAI,IAEjBC,aAAc,CACVh+D,KAAMmsD,OACN4R,QAAS,SAEbE,WAAY,CACRj+D,KAAMmsD,OACN4R,aAAS1sE,IAGX6sE,GAAQ,CACVl+D,KAAM,CACFA,KAAMmsD,OACN2R,UAAU,MAEXD,IAGDM,GAA6B,MAAf,QAAqB,CAACC,EAAWvgD,IAAQ7f,OAAOyB,OAAO2+D,EAAW,CAC9EC,MAAOxgD,IACN,CAACugD,EAAWvgD,IAAQ7f,OAAOyB,OAAO2+D,EAAWvgD,GACtD,SAASygD,GAAaj+D,GAClB,OAAO,QAAQA,IAAO,QAAMA,GAAOA,CACvC,CACA,SAASk+D,GAAWl+D,GAChB,IAAIm+D,EAAMtlC,UAAUhoC,OAAS,QAAsB,IAAjBgoC,UAAU,GAAgBA,UAAU,GAAK74B,EAC3E,OAAO,QAAQm+D,GAAO,IAAIv+C,MAAM5f,EAAK,CAAC,GAAKA,CAC/C,CACA,SAASo+D,GAAW5sD,EAAO6sD,GACvB,MAAMhwE,EAAUmjB,EAAMnjB,QAClBA,GAAWgwE,GACX1gE,OAAOyB,OAAO/Q,EAASgwE,EAE/B,CACA,SAASC,GAAUC,EAAaC,GAC5BD,EAAYrpC,OAASspC,CACzB,CACA,SAASC,GAAYF,EAAaG,EAAcf,GAC5C,MAAMgB,EAAgB,GACtBJ,EAAYlpD,SAAWqpD,EAAazsE,KAAK2sE,IAErC,MAAMC,EAAiBN,EAAYlpD,SAASypD,MAAMvuC,GAAUA,EAAQotC,KAAkBiB,EAAYjB,KAElG,OAAKkB,GAAmBD,EAAYrwE,OAAQowE,EAAcvsD,SAASysD,IAKnEF,EAAc/5D,KAAKi6D,GACnBlhE,OAAOyB,OAAOy/D,EAAgBD,GACvBC,GANI,IACAD,EAKU,GAE7B,CACA,SAASG,GAAUxwE,EAAMovE,GACrB,MAAMqB,EAAW,CACb9pC,OAAQ,GACR7f,SAAU,IAId,OAFAipD,GAAUU,EAAUzwE,EAAK2mC,QACzBupC,GAAYO,EAAUzwE,EAAK8mB,SAAUsoD,GAC9BqB,CACX,CAgCA,MAAM,IAAQ,QAAgB,CAC1BxhD,MAAOqgD,GACPoB,MAAOzhD,EAAO0hD,GACV,IAAI,OAAEC,GAAYD,EAClB,MAAME,GAAY,QAAI,MAChBC,GAAW,QAAW,MAC5BF,EAAO,CACH3tD,MAAO6tD,IAEX,MAAMC,EAAc,KAChB,IAAKF,EAAU/9D,MAAO,OACtB,MAAM,KAAE1B,EAAK,KAAEpR,EAAK,QAAEF,EAAQ,QAAEwoB,EAAQ,aAAE8mD,GAAkBngD,EACtD+hD,EAAaR,GAAUxwE,EAAMovE,GAC7B6B,EAActB,GAAWqB,EAAYhxE,GAC3C8wE,EAASh+D,MAAQ,IAAI28C,GAAQohB,EAAU/9D,MAAO,CAC1C1B,OACApR,KAAMixE,EACNnxE,QAAS,IACFA,GAEPwoB,WACF,EAEA4oD,EAAe,KACjB,MAAMjuD,GAAQ,QAAM6tD,EAASh+D,OACzBmQ,IACAA,EAAMqxC,UACNwc,EAASh+D,MAAQ,KACrB,EAEEkqB,EAAU/Z,IACZA,EAAM+Z,OAAO/N,EAAMogD,WAAW,EA0ClC,OAxCA,QAAU0B,IACV,QAAgBG,IAChB,QAAM,CACF,IAAIjiD,EAAMnvB,QACV,IAAImvB,EAAMjvB,OACX,CAAC2wE,EAAOQ,KACP,IAAKC,EAAkBC,GAAiBV,GAAQW,EAAkBC,GAAiBJ,EACnF,MAAMluD,GAAQ,QAAM6tD,EAASh+D,OAC7B,IAAKmQ,EACD,OAEJ,IAAIuuD,GAAe,EACnB,GAAIJ,EAAkB,CAClB,MAAMtB,EAAcJ,GAAa0B,GAC3BK,EAAc/B,GAAa4B,GAC7BxB,GAAeA,IAAgB2B,IAC/B5B,GAAW5sD,EAAO6sD,GAClB0B,GAAe,EAEvB,CACA,GAAIH,EAAe,CACf,MAAMpB,EAAaP,GAAa2B,EAAc1qC,QACxC+qC,EAAahC,GAAa6B,EAAc5qC,QACxCwpC,EAAeT,GAAa2B,EAAcvqD,UAC1C6qD,EAAejC,GAAa6B,EAAczqD,UAC5CmpD,IAAeyB,IACf3B,GAAU9sD,EAAMua,OAAOx9B,KAAMiwE,GAC7BuB,GAAe,GAEfrB,GAAgBA,IAAiBwB,IACjCzB,GAAYjtD,EAAMua,OAAOx9B,KAAMmwE,EAAclhD,EAAMmgD,cACnDoC,GAAe,EAEvB,CACIA,GACAx0C,EAAO/Z,EACX,GACD,CACC2uD,MAAM,IAEH,KACI,IAAAtxE,GAAE,SAAU,CACfuxE,IAAKhB,GAGjB,IAGJ,SAASiB,GAAiB1gE,EAAM2gE,GAE5B,OADAtiB,GAAA,SAAiBsiB,IACV,QAAgB,CACnB9iD,MAAOggD,GACPyB,MAAOzhD,EAAO0hD,GACV,IAAI,OAAEC,GAAYD,EAClB,MAAMkB,GAAM,QAAW,MACjBG,EAAgBlB,IAClBe,EAAI/+D,MAAQg+D,GAAU7tD,KAAK,EAK/B,OAHA2tD,EAAO,CACH3tD,MAAO4uD,IAEJ,KACI,IAAAvxE,GAAE,GAAOivE,GAAY,CACxBsC,IAAKG,GACN,CACC5gE,UACG6d,IAGf,GAER,CACA,MAAMgjD,GAAsBH,GAAiB,MAAOhkC,IJrMpDokC,GAAAA,SACE5V,GACA8E,GACArJ,GACAd,GACA2O,GACAmC,IAEF,IAAIoK,GAAU,CAAC,EAAG,GAAI,GAAI,GAAI,IAE9B,IACElxD,KAAM,WACNmxD,WAAY,CAAEH,IAAGA,IACjBjyE,OACE,MAAO,CACLC,UAAW,CACT0mC,OAAQ,CAAC,KAAM,QAAS,KAAM,KAAM,WACpC7f,SAAU,CACR,CACEF,gBAAiB,0BACjByrD,qBAAsB,QACtBtmD,YAAa,EACblF,YAAa,oBACbsvC,aAAc,EACdn2D,KAAMmyE,MAIZpyE,aAAc,CACZ+vC,gBAAiB,GACjBrnB,OAAQ,CACNlkB,EAAG,CACD8f,KAAM,CACJL,SAAS,IAGbhO,EAAG,CACDqO,KAAM,CACJL,SAAS,KAIfsE,QAAS,CACPrD,MAAO,CACLjB,SAAS,EACTkB,KAAM,YAER82C,OAAQ,CACNh4C,SAAS,GAEX25C,QAAS,CACPjG,SAAU,KAGdnvC,YAAY,GAGlB,G,UKpEF,MAAM+pD,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,UNkDA,IACEF,WAAY,CACVG,SAAQA,IAEVvyE,OACE,MAAO,CACLb,MAAO,CACL,CACEG,KAAM,aACNE,KAAM,GACNC,KAAM,IAER,CACEH,KAAM,aACNE,KAAM,GACNC,KAAM,IAER,CACEH,KAAM,aACNE,KAAM,GACNC,KAAM,KAId,GO1EF,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASwxD,GAAQ,CAAC,YAAY,qBAEzF,S","sources":["webpack://mankik_bath/./src/views/HistoryView.vue","webpack://mankik_bath/./src/components/BarChart.vue","webpack://mankik_bath/./node_modules/@kurkle/color/dist/color.esm.js","webpack://mankik_bath/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://mankik_bath/./node_modules/chart.js/dist/chart.js","webpack://mankik_bath/./node_modules/vue-chartjs/dist/index.js","webpack://mankik_bath/./src/components/BarChart.vue?b0ea","webpack://mankik_bath/./src/views/HistoryView.vue?e071"],"sourcesContent":["<!--기록 화면(그래프, 내역)-->\r\n<template>\r\n  <header>\r\n    <router-link to=\"/mypage\">&lt;</router-link>\r\n    <div class=\"left_box\">기록</div>\r\n  </header>\r\n  <div class=\"content\">\r\n    <div class=\"calender\">캘린더</div>\r\n    <div class=\"statistic\">\r\n      <div class=\"title\">월간 통계</div>\r\n      <div class=\"history-container\">\r\n        <div class=\"historyBox\">\r\n          <div class=\"historyicon\">\r\n            <font-awesome-icon icon=\"fa-solid fa-clock\" />\r\n            <br />\r\n            32분\r\n          </div>\r\n          <br />\r\n          평균 목욕 시간\r\n        </div>\r\n        <div class=\"historyBox\">\r\n          <div class=\"historyicon\">\r\n            <font-awesome-icon icon=\"fa-solid fa-bath\" />\r\n            <br />\r\n            월 3번\r\n          </div>\r\n          <br />\r\n          목욕 빈도\r\n        </div>\r\n        <div class=\"historyBox\">\r\n          <div class=\"historyicon\">\r\n            <font-awesome-icon icon=\"fa-solid fa-temperature-half\" />\r\n            <br />\r\n            57분\r\n          </div>\r\n          <br />\r\n          평균 온도\r\n        </div>\r\n      </div>\r\n\r\n      <BarChart class=\"chart\" />\r\n    </div>\r\n\r\n    <div class=\"historyList\">\r\n      <div class=\"title\">상세 이력</div>\r\n      <ul style=\"list-style: none\">\r\n        <li v-for=\"item in items\" :key=\"item\">\r\n          {{ item.date }} {{ item.time }} {{ item.temp }}\r\n          <hr />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BarChart from \"../components/BarChart.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    BarChart,\r\n  },\r\n  data() {\r\n    return {\r\n      items: [\r\n        {\r\n          date: \"4/19 17:50\",\r\n          time: 90,\r\n          temp: 50,\r\n        },\r\n        {\r\n          date: \"4/10 19:50\",\r\n          time: 90,\r\n          temp: 50,\r\n        },\r\n        {\r\n          date: \"5/19 20:50\",\r\n          time: 90,\r\n          temp: 50,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nul {\r\n  padding: 0;\r\n}\r\n\r\nheader {\r\n  height: 50px;\r\n  line-height: 50px;\r\n  display: flex;\r\n  font-size: 24px;\r\n  padding: 3%;\r\n}\r\nheader a {\r\n  margin-right: 10px;\r\n}\r\na {\r\n  text-decoration-line: none;\r\n  color: black;\r\n}\r\n.calender {\r\n  height: 300px;\r\n  background: white;\r\n  border-top: 1px solid black;\r\n}\r\n.statistic {\r\n  background: white;\r\n  border-top: 1px solid black;\r\n}\r\n.title {\r\n  font-weight: bold;\r\n  margin: 1%;\r\n}\r\n.history-container {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  text-align: center;\r\n}\r\n.historyBox {\r\n  flex: 1;\r\n  text-align: center;\r\n  margin: 2%;\r\n}\r\n.historyicon {\r\n  display: inline-block;\r\n  border: 1px solid black;\r\n  border-radius: 20%;\r\n  padding: 5%;\r\n  width: 50%;\r\n  height: 50%;\r\n}\r\n.historyicon svg {\r\n  font-size: 24px;\r\n}\r\n\r\n.historyList {\r\n  background-color: white;\r\n  border-top: 1px solid black;\r\n}\r\n.left_box {\r\n  float: left;\r\n}\r\n.right_box {\r\n  float: right;\r\n}\r\n</style>","<template>\r\n  <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\r\n</template>\r\n  \r\n  <script>\r\nimport { Bar } from \"vue-chartjs\";\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale\r\n);\r\nvar washAvg = [5, 20, 12, 10, 10];\r\n\r\nexport default {\r\n  name: \"BarChart\",\r\n  components: { Bar },\r\n  data() {\r\n    return {\r\n      chartData: {\r\n        labels: [\"전체\", \"최근 1년\", \"3월\", \"4월\", \"이번달(5월)\"],\r\n        datasets: [\r\n          {\r\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n            pointBackgroundColor: \"white\",\r\n            borderWidth: 1,\r\n            borderColor: \"rgb(75, 192, 192)\",\r\n            borderRadius: 5,\r\n            data: washAvg,\r\n          },\r\n        ],\r\n      },\r\n      chartOptions: {\r\n        maxBarThickness: 10,\r\n        scales: {\r\n          x: {\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n          y: {\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: \"평균 목욕 횟수\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n          tooltip: {\r\n            boxWidth: 15,\r\n          },\r\n        },\r\n        responsive: true, //사이즈 자동 맞춤\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { render } from \"./BarChart.vue?vue&type=template&id=50d1c5fa\"\nimport script from \"./BarChart.vue?vue&type=script&lang=js\"\nexport * from \"./BarChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\kmc59\\\\OneDrive\\\\바탕 화면\\\\새 폴더\\\\man\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HistoryView.vue?vue&type=template&id=7da85600&scoped=true\"\nimport script from \"./HistoryView.vue?vue&type=script&lang=js\"\nexport * from \"./HistoryView.vue?vue&type=script&lang=js\"\n\nimport \"./HistoryView.vue?vue&type=style&index=0&id=7da85600&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\kmc59\\\\OneDrive\\\\바탕 화면\\\\새 폴더\\\\man\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7da85600\"]])\n\nexport default __exports__"],"names":["_createElementVNode","class","style","_createVNode","_component_router_link","to","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_component_font_awesome_icon","icon","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_component_BarChart","_hoisted_19","_hoisted_20","_hoisted_21","_createElementBlock","_Fragment","_renderList","$data","items","item","key","date","_toDisplayString","time","temp","_hoisted_22","_createBlock","_component_Bar","id","options","chartOptions","data","chartData","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","enableBorder","boundingRects","outer","inner","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineJoin","lineDash","drawOptions","SQRT2","centerX","centerY","yBoxTop","xBoxLeft","textDirection","fontColor","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","borderCapStyle","borderJoinStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","LogarithmicScale","_zero","changeExponent","generateTicks","RadialLinearScale","animate","angleLines","circular","pointLabels","centerPointLabels","xCenter","yCenter","drawingArea","_pointLabels","_pointLabelItems","getTickBackdropHeight","fitWithPointLabels","setCenterPoint","leftMovement","rightMovement","topMovement","bottomMovement","getIndexAngle","angleMultiplier","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","getPointLabelContext","pointLabel","createPointLabelContext","getPointPosition","distanceFromCenter","additionalAngle","getPointPositionForValue","getBasePosition","getPointLabelPosition","pathRadiusLine","drawPointLabels","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","ref","createTypedChart","registerables","reforwardRef","Bar","ChartJS","washAvg","components","pointBackgroundColor","__exports__","BarChart"],"sourceRoot":""}